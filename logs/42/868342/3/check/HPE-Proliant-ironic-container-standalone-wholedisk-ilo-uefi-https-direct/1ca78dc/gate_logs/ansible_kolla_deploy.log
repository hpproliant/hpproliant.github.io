2023-02-15 21:04:30,428 p=6226 u=root n=ansible | [WARNING]: Invalid characters were found in group names but not replaced, use
-vvvv to see details

2023-02-15 21:04:35,063 p=6226 u=root n=ansible | PLAY [Gather facts for all hosts] **********************************************
2023-02-15 21:04:35,338 p=6226 u=root n=ansible | TASK [Gather facts] ************************************************************
2023-02-15 21:04:37,864 p=6226 u=root n=ansible | ok: [localhost]
2023-02-15 21:04:38,004 p=6226 u=root n=ansible | TASK [Group hosts to determine when using --limit] *****************************
2023-02-15 21:04:38,105 p=6226 u=root n=ansible | ok: [localhost]
2023-02-15 21:04:38,386 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
all_using_limit_True

2023-02-15 21:04:38,400 p=6226 u=root n=ansible | PLAY [Gather facts for all hosts (if using --limit)] ***************************
2023-02-15 21:04:38,401 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:04:38,406 p=6226 u=root n=ansible | PLAY [Group hosts based on configuration] **************************************
2023-02-15 21:04:38,625 p=6226 u=root n=ansible | TASK [Group hosts based on Kolla action] ***************************************
2023-02-15 21:04:38,712 p=6226 u=root n=ansible | ok: [localhost]
2023-02-15 21:04:38,826 p=6226 u=root n=ansible | TASK [Group hosts based on enabled services] ***********************************
2023-02-15 21:04:39,147 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_aodh_False)
2023-02-15 21:04:39,170 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_barbican_False)
2023-02-15 21:04:39,192 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_blazar_False)
2023-02-15 21:04:39,216 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_ceilometer_False)
2023-02-15 21:04:39,241 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_ceph_rgw_False)
2023-02-15 21:04:39,264 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_cinder_False)
2023-02-15 21:04:39,287 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_cloudkitty_False)
2023-02-15 21:04:39,307 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_collectd_False)
2023-02-15 21:04:39,322 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_cyborg_False)
2023-02-15 21:04:39,338 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_designate_False)
2023-02-15 21:04:39,353 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_etcd_False)
2023-02-15 21:04:39,367 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_freezer_False)
2023-02-15 21:04:39,382 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_glance_False)
2023-02-15 21:04:39,396 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_gnocchi_False)
2023-02-15 21:04:39,410 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_grafana_False)
2023-02-15 21:04:39,424 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_hacluster_False)
2023-02-15 21:04:39,438 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_heat_False)
2023-02-15 21:04:39,453 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_horizon_False)
2023-02-15 21:04:39,467 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_influxdb_False)
2023-02-15 21:04:39,483 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_ironic_True)
2023-02-15 21:04:39,496 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_iscsid_False)
2023-02-15 21:04:39,512 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_keystone_True)
2023-02-15 21:04:39,525 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_kuryr_False)
2023-02-15 21:04:39,539 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_loadbalancer_False)
2023-02-15 21:04:39,558 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_magnum_False)
2023-02-15 21:04:39,581 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_manila_False)
2023-02-15 21:04:39,605 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_mariadb_False)
2023-02-15 21:04:39,631 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_masakari_False)
2023-02-15 21:04:39,647 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_memcached_False)
2023-02-15 21:04:39,661 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_mistral_False)
2023-02-15 21:04:39,675 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_multipathd_False)
2023-02-15 21:04:39,692 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_murano_False)
2023-02-15 21:04:39,716 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_neutron_True)
2023-02-15 21:04:39,737 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_nova_False)
2023-02-15 21:04:39,753 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_octavia_False)
2023-02-15 21:04:39,768 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_False)
2023-02-15 21:04:39,783 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_dashboards_False)
2023-02-15 21:04:39,798 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_openvswitch_True_enable_ovs_dpdk_False)
2023-02-15 21:04:39,813 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_outward_rabbitmq_False)
2023-02-15 21:04:39,828 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_ovn_False)
2023-02-15 21:04:39,851 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_placement_False)
2023-02-15 21:04:39,876 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_prometheus_False)
2023-02-15 21:04:39,894 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_rabbitmq_True)
2023-02-15 21:04:39,911 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_redis_False)
2023-02-15 21:04:39,934 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_sahara_False)
2023-02-15 21:04:39,956 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_senlin_False)
2023-02-15 21:04:39,981 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_skydive_False)
2023-02-15 21:04:40,001 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_solum_False)
2023-02-15 21:04:40,015 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_swift_False)
2023-02-15 21:04:40,030 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_tacker_False)
2023-02-15 21:04:40,046 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_telegraf_False)
2023-02-15 21:04:40,061 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_trove_False)
2023-02-15 21:04:40,075 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_venus_False)
2023-02-15 21:04:40,089 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_vitrage_False)
2023-02-15 21:04:40,103 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_watcher_False)
2023-02-15 21:04:40,115 p=6226 u=root n=ansible | ok: [localhost] => (item=enable_zun_False)
2023-02-15 21:04:40,413 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
kolla_action_precheck

2023-02-15 21:04:40,415 p=6226 u=root n=ansible | PLAY [Apply role prechecks] ****************************************************
2023-02-15 21:04:40,415 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:04:40,431 p=6226 u=root n=ansible | PLAY [Apply role common] *******************************************************
2023-02-15 21:04:40,628 p=6226 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-15 21:04:40,839 p=6226 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/common/tasks/deploy.yml for localhost
2023-02-15 21:04:40,943 p=6226 u=root n=ansible | TASK [common : Ensuring config directories exist] ******************************
2023-02-15 21:04:41,967 p=6226 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'cron'}, 'cron'])
2023-02-15 21:04:42,037 p=6226 u=root n=ansible | skipping: [localhost] => (item=[{'service_name': 'fluentd'}, 'fluentd']) 
2023-02-15 21:04:42,595 p=6226 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'kolla-toolbox'}, 'kolla-toolbox'])
2023-02-15 21:04:42,764 p=6226 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-15 21:04:42,819 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:04:43,007 p=6226 u=root n=ansible | TASK [common : Copying over config.json files for services] ********************
2023-02-15 21:04:43,166 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:04:45,346 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:04:46,498 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:04:46,851 p=6226 u=root n=ansible | TASK [common : Find custom fluentd input config files] *************************
2023-02-15 21:04:47,027 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:04:47,358 p=6226 u=root n=ansible | TASK [common : Find custom fluentd filter config files] ************************
2023-02-15 21:04:47,520 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:04:47,856 p=6226 u=root n=ansible | TASK [common : Find custom fluentd format config files] ************************
2023-02-15 21:04:48,016 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:04:48,349 p=6226 u=root n=ansible | TASK [common : Find custom fluentd output config files] ************************
2023-02-15 21:04:48,510 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:04:48,683 p=6226 u=root n=ansible | TASK [common : Copying over td-agent.conf] *************************************
2023-02-15 21:04:48,834 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:04:48,996 p=6226 u=root n=ansible | TASK [common : Copying over cron logrotate config file] ************************
2023-02-15 21:04:50,615 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:04:50,750 p=6226 u=root n=ansible | TASK [common : Ensure RabbitMQ Erlang cookie exists] ***************************
2023-02-15 21:04:52,096 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:04:52,248 p=6226 u=root n=ansible | TASK [common : Ensuring config directories have correct owner and permission] ***
2023-02-15 21:04:52,365 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:04:52,377 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:04:52,879 p=6226 u=root n=ansible | ok: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:04:52,986 p=6226 u=root n=ansible | TASK [common : Copy rabbitmq-env.conf to kolla toolbox] ************************
2023-02-15 21:04:54,513 p=6226 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/rabbitmq-env.conf.j2)
2023-02-15 21:04:54,678 p=6226 u=root n=ansible | TASK [common : Copy rabbitmq erl_inetrc to kolla toolbox] **********************
2023-02-15 21:04:55,907 p=6226 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/erl_inetrc.j2)
2023-02-15 21:04:56,010 p=6226 u=root n=ansible | TASK [common : Check common containers] ****************************************
2023-02-15 21:04:56,136 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:04:59,401 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:05:00,458 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:05:00,568 p=6226 u=root n=ansible | TASK [common : Creating log volume] ********************************************
2023-02-15 21:05:01,627 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:01,825 p=6226 u=root n=ansible | TASK [common : Link kolla_logs volume to /var/log/kolla] ***********************
2023-02-15 21:05:02,479 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:02,647 p=6226 u=root n=ansible | TASK [common : Flush handlers] *************************************************
2023-02-15 21:05:02,648 p=6226 u=root n=ansible | RUNNING HANDLER [common : Restart kolla-toolbox container] *********************
2023-02-15 21:05:06,138 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:06,139 p=6226 u=root n=ansible | RUNNING HANDLER [common : Initializing toolbox container using normal user] ****
2023-02-15 21:05:12,338 p=6226 u=root n=ansible | ok: [localhost]
2023-02-15 21:05:12,340 p=6226 u=root n=ansible | RUNNING HANDLER [common : Restart cron container] ******************************
2023-02-15 21:05:14,368 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:14,767 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_loadbalancer_True

2023-02-15 21:05:14,776 p=6226 u=root n=ansible | PLAY [Apply role loadbalancer] *************************************************
2023-02-15 21:05:14,776 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:14,778 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_collectd_True

2023-02-15 21:05:14,785 p=6226 u=root n=ansible | PLAY [Apply role collectd] *****************************************************
2023-02-15 21:05:14,786 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:14,787 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_influxdb_True

2023-02-15 21:05:14,795 p=6226 u=root n=ansible | PLAY [Apply role influxdb] *****************************************************
2023-02-15 21:05:14,796 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:14,797 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_telegraf_True

2023-02-15 21:05:14,802 p=6226 u=root n=ansible | PLAY [Apply role telegraf] *****************************************************
2023-02-15 21:05:14,803 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:14,804 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_redis_True

2023-02-15 21:05:14,809 p=6226 u=root n=ansible | PLAY [Apply role redis] ********************************************************
2023-02-15 21:05:14,809 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:14,810 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_mariadb_True

2023-02-15 21:05:14,812 p=6226 u=root n=ansible | PLAY [Apply role mariadb] ******************************************************
2023-02-15 21:05:14,812 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:14,814 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_memcached_True

2023-02-15 21:05:14,818 p=6226 u=root n=ansible | PLAY [Apply role memcached] ****************************************************
2023-02-15 21:05:14,818 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:14,824 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_prometheus_True

2023-02-15 21:05:14,830 p=6226 u=root n=ansible | PLAY [Apply role prometheus] ***************************************************
2023-02-15 21:05:14,831 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:14,832 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_iscsid_True

2023-02-15 21:05:14,838 p=6226 u=root n=ansible | PLAY [Apply role iscsi] ********************************************************
2023-02-15 21:05:14,839 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:14,841 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_multipathd_True

2023-02-15 21:05:14,847 p=6226 u=root n=ansible | PLAY [Apply role multipathd] ***************************************************
2023-02-15 21:05:14,847 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:14,852 p=6226 u=root n=ansible | PLAY [Apply role rabbitmq] *****************************************************
2023-02-15 21:05:15,054 p=6226 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-15 21:05:15,352 p=6226 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/deploy.yml for localhost
2023-02-15 21:05:15,466 p=6226 u=root n=ansible | TASK [rabbitmq : Ensuring config directories exist] ****************************
2023-02-15 21:05:16,096 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 21:05:16,203 p=6226 u=root n=ansible | TASK [rabbitmq : Copying over config.json files for services] ******************
2023-02-15 21:05:17,461 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 21:05:17,573 p=6226 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq-env.conf] *******************************
2023-02-15 21:05:18,942 p=6226 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq-env.conf.j2)
2023-02-15 21:05:19,062 p=6226 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq.conf] ***********************************
2023-02-15 21:05:20,525 p=6226 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq.conf.j2)
2023-02-15 21:05:20,633 p=6226 u=root n=ansible | TASK [rabbitmq : Copying over erl_inetrc] **************************************
2023-02-15 21:05:21,833 p=6226 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/erl_inetrc.j2)
2023-02-15 21:05:21,938 p=6226 u=root n=ansible | TASK [rabbitmq : Copying over advanced.config] *********************************
2023-02-15 21:05:23,186 p=6226 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/advanced.config.j2)
2023-02-15 21:05:23,289 p=6226 u=root n=ansible | TASK [rabbitmq : Copying over definitions.json] ********************************
2023-02-15 21:05:24,476 p=6226 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/definitions.json.j2)
2023-02-15 21:05:24,575 p=6226 u=root n=ansible | TASK [rabbitmq : Copying over enabled_plugins] *********************************
2023-02-15 21:05:25,987 p=6226 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/enabled_plugins.j2)
2023-02-15 21:05:26,175 p=6226 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-15 21:05:26,237 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:05:26,382 p=6226 u=root n=ansible | TASK [rabbitmq : Check rabbitmq containers] ************************************
2023-02-15 21:05:27,560 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 21:05:27,697 p=6226 u=root n=ansible | TASK [rabbitmq : Creating rabbitmq volume] *************************************
2023-02-15 21:05:28,729 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:28,829 p=6226 u=root n=ansible | TASK [rabbitmq : Running RabbitMQ bootstrap container] *************************
2023-02-15 21:05:31,067 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:31,174 p=6226 u=root n=ansible | TASK [rabbitmq : Flush handlers] ***********************************************
2023-02-15 21:05:31,175 p=6226 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart first rabbitmq container] ******************
2023-02-15 21:05:31,511 p=6226 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/restart_services.yml for localhost
2023-02-15 21:05:31,512 p=6226 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart rabbitmq container] ************************
2023-02-15 21:05:33,317 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:33,319 p=6226 u=root n=ansible | RUNNING HANDLER [rabbitmq : Waiting for rabbitmq to start] *********************
2023-02-15 21:05:50,146 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:50,149 p=6226 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart remaining rabbitmq containers] *************
2023-02-15 21:05:50,495 p=6226 u=root n=ansible | skipping: [localhost] => (item=localhost) 
2023-02-15 21:05:50,864 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_outward_rabbitmq_True

2023-02-15 21:05:50,866 p=6226 u=root n=ansible | PLAY [Apply role rabbitmq (outward)] *******************************************
2023-02-15 21:05:50,867 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:50,868 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_etcd_True

2023-02-15 21:05:50,880 p=6226 u=root n=ansible | PLAY [Apply role etcd] *********************************************************
2023-02-15 21:05:50,880 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:50,891 p=6226 u=root n=ansible | PLAY [Apply role keystone] *****************************************************
2023-02-15 21:05:51,143 p=6226 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:05:51,509 p=6226 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/deploy.yml for localhost
2023-02-15 21:05:51,643 p=6226 u=root n=ansible | TASK [keystone : Ensuring config directories exist] ****************************
2023-02-15 21:05:52,516 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 21:05:53,133 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:05:53,777 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:05:53,953 p=6226 u=root n=ansible | TASK [keystone : Check if policies shall be overwritten] ***********************
2023-02-15 21:05:54,176 p=6226 u=root n=ansible | TASK [keystone : Set keystone policy file] *************************************
2023-02-15 21:05:54,216 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:05:54,412 p=6226 u=root n=ansible | TASK [keystone : Check if Keystone domain-specific config is supplied] *********
2023-02-15 21:05:54,914 p=6226 u=root n=ansible | ok: [localhost]
2023-02-15 21:05:55,062 p=6226 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:05:55,125 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:05:55,264 p=6226 u=root n=ansible | TASK [keystone : Copying over config.json files for services] ******************
2023-02-15 21:05:56,699 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 21:05:57,874 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:05:59,032 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:05:59,193 p=6226 u=root n=ansible | TASK [keystone : Copying over keystone.conf] ***********************************
2023-02-15 21:06:01,249 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 21:06:01,263 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:06:02,865 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:06:02,981 p=6226 u=root n=ansible | TASK [keystone : Copying keystone-startup script for keystone] *****************
2023-02-15 21:06:04,509 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:06:04,611 p=6226 u=root n=ansible | TASK [keystone : Create Keystone domain-specific config directory] *************
2023-02-15 21:06:05,099 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:05,332 p=6226 u=root n=ansible | TASK [keystone : Get file list in custom domains folder] ***********************
2023-02-15 21:06:05,375 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:05,497 p=6226 u=root n=ansible | TASK [keystone : Copying Keystone Domain specific settings] ********************
2023-02-15 21:06:05,661 p=6226 u=root n=ansible | TASK [keystone : Copying over existing policy file] ****************************
2023-02-15 21:06:06,028 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}}) 
2023-02-15 21:06:06,043 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:06:06,067 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:06:06,186 p=6226 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:06:06,250 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:06,374 p=6226 u=root n=ansible | TASK [keystone : Copying over wsgi-keystone.conf] ******************************
2023-02-15 21:06:08,198 p=6226 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/keystone/templates/wsgi-keystone.conf.j2)
2023-02-15 21:06:08,402 p=6226 u=root n=ansible | TASK [keystone : Checking whether keystone-paste.ini file exists] **************
2023-02-15 21:06:09,162 p=6226 u=root n=ansible | ok: [localhost]
2023-02-15 21:06:09,267 p=6226 u=root n=ansible | TASK [keystone : Copying over keystone-paste.ini] ******************************
2023-02-15 21:06:09,806 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:10,049 p=6226 u=root n=ansible | TASK [keystone : Generate the required cron jobs for the node] *****************
2023-02-15 21:06:10,663 p=6226 u=root n=ansible | ok: [localhost]
2023-02-15 21:06:10,784 p=6226 u=root n=ansible | TASK [keystone : Set fact with the generated cron jobs for building the crontab later] ***
2023-02-15 21:06:10,848 p=6226 u=root n=ansible | ok: [localhost]
2023-02-15 21:06:10,972 p=6226 u=root n=ansible | TASK [keystone : Copying files for keystone-fernet] ****************************
2023-02-15 21:06:12,493 p=6226 u=root n=ansible | changed: [localhost] => (item={'src': 'crontab.j2', 'dest': 'crontab'})
2023-02-15 21:06:14,094 p=6226 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-rotate.sh.j2', 'dest': 'fernet-rotate.sh'})
2023-02-15 21:06:15,605 p=6226 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-node-sync.sh.j2', 'dest': 'fernet-node-sync.sh'})
2023-02-15 21:06:17,149 p=6226 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-push.sh.j2', 'dest': 'fernet-push.sh'})
2023-02-15 21:06:18,763 p=6226 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-healthcheck.sh.j2', 'dest': 'fernet-healthcheck.sh'})
2023-02-15 21:06:20,225 p=6226 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa', 'dest': 'id_rsa'})
2023-02-15 21:06:21,791 p=6226 u=root n=ansible | changed: [localhost] => (item={'src': 'ssh_config.j2', 'dest': 'ssh_config'})
2023-02-15 21:06:21,905 p=6226 u=root n=ansible | TASK [keystone : Copying files for keystone-ssh] *******************************
2023-02-15 21:06:23,519 p=6226 u=root n=ansible | changed: [localhost] => (item={'src': 'sshd_config.j2', 'dest': 'sshd_config'})
2023-02-15 21:06:24,918 p=6226 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa.pub', 'dest': 'id_rsa.pub'})
2023-02-15 21:06:25,036 p=6226 u=root n=ansible | TASK [keystone : Check keystone containers] ************************************
2023-02-15 21:06:26,528 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 21:06:27,637 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:06:28,767 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:06:28,891 p=6226 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:06:28,944 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:29,160 p=6226 u=root n=ansible | TASK [keystone : Creating keystone database] ***********************************
2023-02-15 21:06:33,819 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:06:34,107 p=6226 u=root n=ansible | TASK [keystone : Creating Keystone database user and setting permissions] ******
2023-02-15 21:06:38,264 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:06:38,375 p=6226 u=root n=ansible | TASK [keystone : Checking for any running keystone_fernet containers] **********
2023-02-15 21:06:40,015 p=6226 u=root n=ansible | ok: [localhost]
2023-02-15 21:06:40,127 p=6226 u=root n=ansible | TASK [keystone : Group nodes where keystone_fernet is running] *****************
2023-02-15 21:06:40,194 p=6226 u=root n=ansible | ok: [localhost]
2023-02-15 21:06:40,301 p=6226 u=root n=ansible | TASK [keystone : Fail if any hosts need bootstrapping and not all hosts targeted] ***
2023-02-15 21:06:40,383 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:40,488 p=6226 u=root n=ansible | TASK [keystone : Running Keystone bootstrap container] *************************
2023-02-15 21:06:53,119 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:06:53,379 p=6226 u=root n=ansible | TASK [keystone : Running Keystone fernet bootstrap container] ******************
2023-02-15 21:07:01,252 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:07:01,352 p=6226 u=root n=ansible | TASK [keystone : Flush handlers] ***********************************************
2023-02-15 21:07:01,352 p=6226 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-ssh container] ********************
2023-02-15 21:07:03,275 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:07:03,277 p=6226 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-fernet container] *****************
2023-02-15 21:07:05,353 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:07:05,354 p=6226 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone container] ************************
2023-02-15 21:07:07,482 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:07:07,629 p=6226 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:07:07,791 p=6226 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/distribute_fernet.yml for localhost
2023-02-15 21:07:07,947 p=6226 u=root n=ansible | TASK [keystone : Waiting for Keystone SSH port to be UP] ***********************
2023-02-15 21:07:09,267 p=6226 u=root n=ansible | ok: [localhost]
2023-02-15 21:07:09,496 p=6226 u=root n=ansible | TASK [keystone : Run key distribution] *****************************************
2023-02-15 21:07:10,792 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:07:10,928 p=6226 u=root n=ansible | TASK [keystone : Creating admin project, user, role, service, and endpoint] ****
2023-02-15 21:07:20,770 p=6226 u=root n=ansible | changed: [localhost] => (item=RegionOne)
2023-02-15 21:07:20,882 p=6226 u=root n=ansible | TASK [service-ks-register : keystone | Creating services] **********************
2023-02-15 21:07:46,897 p=6226 u=root n=ansible | changed: [localhost] => (item={'name': 'keystone', 'service_type': 'identity'})
2023-02-15 21:07:47,037 p=6226 u=root n=ansible | TASK [service-ks-register : keystone | Creating endpoints] *********************
2023-02-15 21:07:54,564 p=6226 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.146:5000', 'interface': 'internal'})
2023-02-15 21:08:01,644 p=6226 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.146:5000', 'interface': 'public'})
2023-02-15 21:08:01,824 p=6226 u=root n=ansible | TASK [service-ks-register : keystone | Creating projects] **********************
2023-02-15 21:08:02,017 p=6226 u=root n=ansible | TASK [service-ks-register : keystone | Creating users] *************************
2023-02-15 21:08:02,189 p=6226 u=root n=ansible | TASK [service-ks-register : keystone | Creating roles] *************************
2023-02-15 21:08:02,385 p=6226 u=root n=ansible | TASK [service-ks-register : keystone | Granting user roles] ********************
2023-02-15 21:08:02,647 p=6226 u=root n=ansible | TASK [keystone : Creating default user role] ***********************************
2023-02-15 21:08:09,693 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:08:09,812 p=6226 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:08:09,886 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:08:10,249 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_opensearch_True

2023-02-15 21:08:10,259 p=6226 u=root n=ansible | PLAY [Apply role opensearch] ***************************************************
2023-02-15 21:08:10,260 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:08:10,264 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_swift_True

2023-02-15 21:08:10,270 p=6226 u=root n=ansible | PLAY [Apply role swift] ********************************************************
2023-02-15 21:08:10,270 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:08:10,272 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_ceph_rgw_True

2023-02-15 21:08:10,277 p=6226 u=root n=ansible | PLAY [Apply role ceph-rgw] *****************************************************
2023-02-15 21:08:10,278 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:08:10,280 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_glance_True

2023-02-15 21:08:10,286 p=6226 u=root n=ansible | PLAY [Apply role glance] *******************************************************
2023-02-15 21:08:10,287 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:08:10,300 p=6226 u=root n=ansible | PLAY [Apply role ironic] *******************************************************
2023-02-15 21:08:10,505 p=6226 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 21:08:10,851 p=6226 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/ironic/tasks/deploy.yml for localhost
2023-02-15 21:08:10,967 p=6226 u=root n=ansible | TASK [service-ks-register : ironic | Creating services] ************************
2023-02-15 21:08:18,305 p=6226 u=root n=ansible | changed: [localhost] => (item={'name': 'ironic', 'service_type': 'baremetal'})
2023-02-15 21:08:25,567 p=6226 u=root n=ansible | changed: [localhost] => (item={'name': 'ironic-inspector', 'service_type': 'baremetal-introspection'})
2023-02-15 21:08:25,739 p=6226 u=root n=ansible | TASK [service-ks-register : ironic | Creating endpoints] ***********************
2023-02-15 21:08:33,053 p=6226 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic', 'url': 'http://169.16.1.146:6385', 'interface': 'internal'})
2023-02-15 21:08:40,672 p=6226 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic', 'url': 'http://169.16.1.146:6385', 'interface': 'public'})
2023-02-15 21:08:48,114 p=6226 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic-inspector', 'url': 'http://169.16.1.146:5050', 'interface': 'internal'})
2023-02-15 21:08:55,750 p=6226 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic-inspector', 'url': 'http://169.16.1.146:5050', 'interface': 'public'})
2023-02-15 21:08:55,913 p=6226 u=root n=ansible | TASK [service-ks-register : ironic | Creating projects] ************************
2023-02-15 21:09:04,199 p=6226 u=root n=ansible | changed: [localhost] => (item=service)
2023-02-15 21:09:04,321 p=6226 u=root n=ansible | TASK [service-ks-register : ironic | Creating users] ***************************
2023-02-15 21:09:14,580 p=6226 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic', 'project': 'service'})
2023-02-15 21:09:23,385 p=6226 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic-inspector', 'project': 'service'})
2023-02-15 21:09:23,388 p=6226 u=root n=ansible | [WARNING]: Module did not set no_log for update_password

2023-02-15 21:09:23,522 p=6226 u=root n=ansible | TASK [service-ks-register : ironic | Creating roles] ***************************
2023-02-15 21:09:30,353 p=6226 u=root n=ansible | ok: [localhost] => (item=admin)
2023-02-15 21:09:30,491 p=6226 u=root n=ansible | TASK [service-ks-register : ironic | Granting user roles] **********************
2023-02-15 21:09:42,334 p=6226 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic', 'role': 'admin', 'project': 'service'})
2023-02-15 21:09:53,788 p=6226 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic-inspector', 'role': 'admin', 'project': 'service'})
2023-02-15 21:09:54,006 p=6226 u=root n=ansible | TASK [module-load : Load modules] **********************************************
2023-02-15 21:09:55,287 p=6226 u=root n=ansible | changed: [localhost] => (item=iscsi_tcp)
2023-02-15 21:09:55,419 p=6226 u=root n=ansible | TASK [module-load : Persist modules via modules-load.d] ************************
2023-02-15 21:09:56,645 p=6226 u=root n=ansible | changed: [localhost] => (item=iscsi_tcp)
2023-02-15 21:09:56,772 p=6226 u=root n=ansible | TASK [module-load : Drop module persistence] ***********************************
2023-02-15 21:09:56,855 p=6226 u=root n=ansible | skipping: [localhost] => (item=iscsi_tcp) 
2023-02-15 21:09:57,084 p=6226 u=root n=ansible | TASK [ironic : Ensuring config directories exist] ******************************
2023-02-15 21:09:57,953 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 21:09:58,416 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:09:58,889 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 21:09:59,361 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:09:59,872 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:00,393 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:10:00,530 p=6226 u=root n=ansible | TASK [ironic : Check if Ironic policies shall be overwritten] ******************
2023-02-15 21:10:00,704 p=6226 u=root n=ansible | TASK [ironic : Check if Ironic Inspector policies shall be overwritten] ********
2023-02-15 21:10:00,856 p=6226 u=root n=ansible | TASK [ironic : Set ironic policy file] *****************************************
2023-02-15 21:10:00,892 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:10:00,997 p=6226 u=root n=ansible | TASK [ironic : Set ironic-inspector policy file] *******************************
2023-02-15 21:10:01,031 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:10:01,135 p=6226 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 21:10:01,184 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:10:01,324 p=6226 u=root n=ansible | TASK [ironic : Copying over config.json files for services] ********************
2023-02-15 21:10:02,813 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 21:10:03,850 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:04,971 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 21:10:05,971 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:10:07,235 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:08,323 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:10:08,440 p=6226 u=root n=ansible | TASK [ironic : Copying over ironic.conf] ***************************************
2023-02-15 21:10:10,602 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 21:10:12,413 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:12,426 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 21:10:12,431 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:10:12,444 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:10:12,450 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:10:12,561 p=6226 u=root n=ansible | TASK [ironic : Copying over inspector.conf] ************************************
2023-02-15 21:10:14,844 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:10:14,951 p=6226 u=root n=ansible | TASK [ironic : Copying over dnsmasq.conf] **************************************
2023-02-15 21:10:16,812 p=6226 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic-dnsmasq.conf.j2)
2023-02-15 21:10:16,976 p=6226 u=root n=ansible | TASK [ironic : Copying pxelinux.cfg default] ***********************************
2023-02-15 21:10:17,664 p=6226 u=root n=ansible | skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/pxelinux.default.j2) 
2023-02-15 21:10:17,782 p=6226 u=root n=ansible | TASK [ironic : Copying ironic_pxe_uefi.cfg default] ****************************
2023-02-15 21:10:18,376 p=6226 u=root n=ansible | skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic_pxe_uefi.default.j2) 
2023-02-15 21:10:18,489 p=6226 u=root n=ansible | TASK [ironic : Copying ironic-agent kernel and initramfs (PXE)] ****************
2023-02-15 21:10:19,155 p=6226 u=root n=ansible | skipping: [localhost] => (item=ironic-agent.kernel) 
2023-02-15 21:10:19,681 p=6226 u=root n=ansible | skipping: [localhost] => (item=ironic-agent.initramfs) 
2023-02-15 21:10:20,233 p=6226 u=root n=ansible | skipping: [localhost] => (item=ir-deploy-redfish.efiboot) 
2023-02-15 21:10:20,773 p=6226 u=root n=ansible | skipping: [localhost] => (item=rhel009_wholedisk_image.qcow2) 
2023-02-15 21:10:20,986 p=6226 u=root n=ansible | TASK [ironic : Copying ironic-agent kernel and initramfs (iPXE)] ***************
2023-02-15 21:10:23,044 p=6226 u=root n=ansible | changed: [localhost] => (item=ironic-agent.kernel)
2023-02-15 21:10:31,904 p=6226 u=root n=ansible | changed: [localhost] => (item=ironic-agent.initramfs)
2023-02-15 21:10:34,399 p=6226 u=root n=ansible | changed: [localhost] => (item=ir-deploy-redfish.efiboot)
2023-02-15 21:10:49,324 p=6226 u=root n=ansible | changed: [localhost] => (item=rhel009_wholedisk_image.qcow2)
2023-02-15 21:10:49,454 p=6226 u=root n=ansible | TASK [ironic : Copying inspector.ipxe] *****************************************
2023-02-15 21:10:51,517 p=6226 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/inspector.ipxe.j2)
2023-02-15 21:10:51,620 p=6226 u=root n=ansible | TASK [ironic : Copying ironic-http-httpd.conf] *********************************
2023-02-15 21:10:53,398 p=6226 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic-http-httpd.conf.j2)
2023-02-15 21:10:53,520 p=6226 u=root n=ansible | TASK [ironic : Copying over existing Ironic policy file] ***********************
2023-02-15 21:10:53,866 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}}) 
2023-02-15 21:10:53,877 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:10:53,881 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 21:10:53,889 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:10:53,899 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:10:53,907 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:10:54,021 p=6226 u=root n=ansible | TASK [ironic : Copying over existing Ironic Inspector policy file] *************
2023-02-15 21:10:54,359 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}}) 
2023-02-15 21:10:54,363 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:10:54,374 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 21:10:54,382 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:10:54,390 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:10:54,395 p=6226 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:10:54,500 p=6226 u=root n=ansible | TASK [ironic : Copying over ironic-api-wsgi.conf] ******************************
2023-02-15 21:10:56,161 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:10:56,266 p=6226 u=root n=ansible | TASK [ironic : Check ironic containers] ****************************************
2023-02-15 21:10:57,676 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 21:10:58,640 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:59,640 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 21:11:00,673 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:11:01,667 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:11:02,857 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:11:03,035 p=6226 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 21:11:03,124 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:11:03,370 p=6226 u=root n=ansible | TASK [ironic : Creating Ironic database] ***************************************
2023-02-15 21:11:07,637 p=6226 u=root n=ansible | changed: [localhost] => (item={'database_name': 'ironic', 'group': 'ironic-api'})
2023-02-15 21:11:12,276 p=6226 u=root n=ansible | changed: [localhost] => (item={'database_name': 'ironic_inspector', 'group': 'ironic-inspector'})
2023-02-15 21:11:12,613 p=6226 u=root n=ansible | TASK [ironic : Creating Ironic database user and setting permissions] **********
2023-02-15 21:11:16,907 p=6226 u=root n=ansible | changed: [localhost] => (item=ironic)
2023-02-15 21:11:21,240 p=6226 u=root n=ansible | changed: [localhost] => (item=ironic_inspector)
2023-02-15 21:11:21,811 p=6226 u=root n=ansible | TASK [ironic : Running Ironic bootstrap container] *****************************
2023-02-15 21:11:36,994 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:11:37,688 p=6226 u=root n=ansible | TASK [ironic : Running Ironic Inspector bootstrap container] *******************
2023-02-15 21:11:44,218 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:11:44,344 p=6226 u=root n=ansible | TASK [ironic : Running ironic-tftp bootstrap container] ************************
2023-02-15 21:11:47,070 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:11:47,176 p=6226 u=root n=ansible | TASK [ironic : Flush handlers] *************************************************
2023-02-15 21:11:47,177 p=6226 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-conductor container] ******************
2023-02-15 21:11:49,509 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:11:49,511 p=6226 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-api container] ************************
2023-02-15 21:11:52,029 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:11:52,032 p=6226 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-inspector container] ******************
2023-02-15 21:11:55,036 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:11:55,041 p=6226 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-tftp container] ***********************
2023-02-15 21:11:58,345 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:11:58,352 p=6226 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-http container] ***********************
2023-02-15 21:12:02,028 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:12:02,036 p=6226 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-dnsmasq container] ********************
2023-02-15 21:12:13,653 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:12:13,823 p=6226 u=root n=ansible | TASK [ironic : Flush and delete ironic-inspector iptables chain] ***************
2023-02-15 21:12:16,950 p=6226 u=root n=ansible | ok: [localhost] => (item=flush)
2023-02-15 21:12:17,444 p=6226 u=root n=ansible | ok: [localhost] => (item=delete-chain)
2023-02-15 21:12:17,761 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_cinder_True

2023-02-15 21:12:17,771 p=6226 u=root n=ansible | PLAY [Apply role cinder] *******************************************************
2023-02-15 21:12:17,771 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:17,773 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_placement_True

2023-02-15 21:12:17,780 p=6226 u=root n=ansible | PLAY [Apply role placement] ****************************************************
2023-02-15 21:12:17,781 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:17,782 p=6226 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_nova_True

2023-02-15 21:12:17,787 p=6226 u=root n=ansible | PLAY [Bootstrap nova API databases] ********************************************
2023-02-15 21:12:17,787 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:17,794 p=6226 u=root n=ansible | PLAY [Bootstrap nova cell databases] *******************************************
2023-02-15 21:12:17,795 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:17,802 p=6226 u=root n=ansible | PLAY [Apply role nova] *********************************************************
2023-02-15 21:12:17,802 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:17,811 p=6226 u=root n=ansible | PLAY [Apply role nova-cell] ****************************************************
2023-02-15 21:12:17,812 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:17,820 p=6226 u=root n=ansible | PLAY [Refresh nova scheduler cell cache] ***************************************
2023-02-15 21:12:17,821 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:17,827 p=6226 u=root n=ansible | PLAY [Reload global Nova super conductor services] *****************************
2023-02-15 21:12:17,827 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:17,832 p=6226 u=root n=ansible | PLAY [Reload Nova cell services] ***********************************************
2023-02-15 21:12:17,833 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:17,839 p=6226 u=root n=ansible | PLAY [Reload global Nova API services] *****************************************
2023-02-15 21:12:17,839 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:17,845 p=6226 u=root n=ansible | PLAY [Run Nova API online data migrations] *************************************
2023-02-15 21:12:17,845 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:17,851 p=6226 u=root n=ansible | PLAY [Run Nova cell online data migrations] ************************************
2023-02-15 21:12:17,852 p=6226 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:17,862 p=6226 u=root n=ansible | PLAY [Apply role openvswitch] **************************************************
2023-02-15 21:12:18,063 p=6226 u=root n=ansible | TASK [openvswitch : include_tasks] *********************************************
2023-02-15 21:12:18,305 p=6226 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/openvswitch/tasks/deploy.yml for localhost
2023-02-15 21:12:18,405 p=6226 u=root n=ansible | TASK [module-load : Load modules] **********************************************
2023-02-15 21:12:19,103 p=6226 u=root n=ansible | changed: [localhost] => (item=openvswitch)
2023-02-15 21:12:19,256 p=6226 u=root n=ansible | TASK [module-load : Persist modules via modules-load.d] ************************
2023-02-15 21:12:20,506 p=6226 u=root n=ansible | changed: [localhost] => (item=openvswitch)
2023-02-15 21:12:20,665 p=6226 u=root n=ansible | TASK [module-load : Drop module persistence] ***********************************
2023-02-15 21:12:20,780 p=6226 u=root n=ansible | skipping: [localhost] => (item=openvswitch) 
2023-02-15 21:12:21,016 p=6226 u=root n=ansible | TASK [openvswitch : Ensuring config directories exist] *************************
2023-02-15 21:12:21,705 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:12:22,145 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:12:22,247 p=6226 u=root n=ansible | TASK [openvswitch : Copying over config.json files for services] ***************
2023-02-15 21:12:23,493 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:12:24,440 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:12:24,543 p=6226 u=root n=ansible | TASK [openvswitch : Copying over start-ovs file for openvswitch-vswitchd] ******
2023-02-15 21:12:25,761 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:12:25,873 p=6226 u=root n=ansible | TASK [openvswitch : Copying over start-ovsdb-server files for openvswitch-db-server] ***
2023-02-15 21:12:27,252 p=6226 u=root n=ansible | changed: [localhost]
2023-02-15 21:12:27,352 p=6226 u=root n=ansible | TASK [openvswitch : Copying over ovs-vsctl wrapper] ****************************
2023-02-15 21:12:27,630 p=6226 u=root n=ansible | skipping: [localhost]
2023-02-15 21:12:27,765 p=6226 u=root n=ansible | TASK [openvswitch : Check openvswitch containers] ******************************
2023-02-15 21:12:29,425 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:12:30,580 p=6226 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:12:30,760 p=6226 u=root n=ansible | TASK [openvswitch : Flush Handlers] ********************************************
2023-02-15 21:12:30,761 p=6226 u=root n=ansible | [WARNING]: flush_handlers task does not support when conditional

2023-02-15 21:12:30,761 p=6226 u=root n=ansible | RUNNING HANDLER [openvswitch : Restart openvswitch-db-server container] ********
2023-02-15 21:12:38,807 p=6226 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "msg": "'Traceback (most recent call last):\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/client.py\", line 268, in _raise_for_status\\n    response.raise_for_status()\\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 1021, in raise_for_status\\n    raise HTTPError(http_error_msg, response=self)\\nrequests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.42/images/create?tag=14.6.0&fromImage=kolla%2Fopenvswitch-db-server\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \"/tmp/ansible_kolla_docker_payload_yaaolw3l/ansible_kolla_docker_payload.zip/ansible/modules/kolla_docker.py\", line 404, in main\\n  File \"/tmp/ansible_kolla_docker_payload_yaaolw3l/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 654, in recreate_or_restart_container\\n    self.start_container()\\n  File \"/tmp/ansible_kolla_docker_payload_yaaolw3l/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 672, in start_container\\n    self.pull_image()\\n  File \"/tmp/ansible_kolla_docker_payload_yaaolw3l/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 453, in pull_image\\n    json.loads(line.strip().decode(\\'utf-8\\')) for line in self.dc.pull(\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/image.py\", line 430, in pull\\n    self._raise_for_status(response)\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/client.py\", line 270, in _raise_for_status\\n    raise create_api_error_from_http_exception(e)\\n  File \"/usr/local/lib/python3.9/site-packages/docker/errors.py\", line 31, in create_api_error_from_http_exception\\n    raise cls(e, response=response, explanation=explanation)\\ndocker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.42/images/create?tag=14.6.0&fromImage=kolla%2Fopenvswitch-db-server: Not Found (\"manifest for kolla/openvswitch-db-server:14.6.0 not found: manifest unknown: manifest unknown\")\\n'"}
2023-02-15 21:12:38,808 p=6226 u=root n=ansible | RUNNING HANDLER [openvswitch : Restart openvswitch-vswitchd container] *********
2023-02-15 21:12:38,811 p=6226 u=root n=ansible | NO MORE HOSTS LEFT *************************************************************
2023-02-15 21:12:38,813 p=6226 u=root n=ansible | PLAY RECAP *********************************************************************
2023-02-15 21:12:38,813 p=6226 u=root n=ansible | localhost                  : ok=101  changed=78   unreachable=0    failed=1    skipped=38   rescued=0    ignored=0   
