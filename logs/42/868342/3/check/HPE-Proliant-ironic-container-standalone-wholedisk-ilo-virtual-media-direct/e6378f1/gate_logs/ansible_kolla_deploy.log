2023-02-15 21:02:07,816 p=6025 u=root n=ansible | [WARNING]: Invalid characters were found in group names but not replaced, use
-vvvv to see details

2023-02-15 21:02:19,983 p=6025 u=root n=ansible | PLAY [Gather facts for all hosts] **********************************************
2023-02-15 21:02:20,304 p=6025 u=root n=ansible | TASK [Gather facts] ************************************************************
2023-02-15 21:02:22,982 p=6025 u=root n=ansible | ok: [localhost]
2023-02-15 21:02:23,173 p=6025 u=root n=ansible | TASK [Group hosts to determine when using --limit] *****************************
2023-02-15 21:02:23,318 p=6025 u=root n=ansible | ok: [localhost]
2023-02-15 21:02:23,599 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
all_using_limit_True

2023-02-15 21:02:23,612 p=6025 u=root n=ansible | PLAY [Gather facts for all hosts (if using --limit)] ***************************
2023-02-15 21:02:23,613 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:02:23,619 p=6025 u=root n=ansible | PLAY [Group hosts based on configuration] **************************************
2023-02-15 21:02:23,897 p=6025 u=root n=ansible | TASK [Group hosts based on Kolla action] ***************************************
2023-02-15 21:02:23,984 p=6025 u=root n=ansible | ok: [localhost]
2023-02-15 21:02:24,163 p=6025 u=root n=ansible | TASK [Group hosts based on enabled services] ***********************************
2023-02-15 21:02:24,534 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_aodh_False)
2023-02-15 21:02:24,553 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_barbican_False)
2023-02-15 21:02:24,570 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_blazar_False)
2023-02-15 21:02:24,589 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_ceilometer_False)
2023-02-15 21:02:24,608 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_ceph_rgw_False)
2023-02-15 21:02:24,628 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_cinder_False)
2023-02-15 21:02:24,644 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_cloudkitty_False)
2023-02-15 21:02:24,661 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_collectd_False)
2023-02-15 21:02:24,685 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_cyborg_False)
2023-02-15 21:02:24,704 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_designate_False)
2023-02-15 21:02:24,725 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_etcd_False)
2023-02-15 21:02:24,748 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_freezer_False)
2023-02-15 21:02:24,772 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_glance_False)
2023-02-15 21:02:24,788 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_gnocchi_False)
2023-02-15 21:02:24,805 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_grafana_False)
2023-02-15 21:02:24,821 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_hacluster_False)
2023-02-15 21:02:24,836 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_heat_False)
2023-02-15 21:02:24,854 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_horizon_False)
2023-02-15 21:02:24,869 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_influxdb_False)
2023-02-15 21:02:24,885 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_ironic_True)
2023-02-15 21:02:24,901 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_iscsid_False)
2023-02-15 21:02:24,918 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_keystone_True)
2023-02-15 21:02:24,939 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_kuryr_False)
2023-02-15 21:02:24,957 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_loadbalancer_False)
2023-02-15 21:02:24,972 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_magnum_False)
2023-02-15 21:02:24,988 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_manila_False)
2023-02-15 21:02:25,005 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_mariadb_False)
2023-02-15 21:02:25,023 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_masakari_False)
2023-02-15 21:02:25,039 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_memcached_False)
2023-02-15 21:02:25,056 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_mistral_False)
2023-02-15 21:02:25,072 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_multipathd_False)
2023-02-15 21:02:25,088 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_murano_False)
2023-02-15 21:02:25,104 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_neutron_True)
2023-02-15 21:02:25,122 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_nova_False)
2023-02-15 21:02:25,138 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_octavia_False)
2023-02-15 21:02:25,155 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_False)
2023-02-15 21:02:25,171 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_dashboards_False)
2023-02-15 21:02:25,188 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_openvswitch_True_enable_ovs_dpdk_False)
2023-02-15 21:02:25,205 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_outward_rabbitmq_False)
2023-02-15 21:02:25,223 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_ovn_False)
2023-02-15 21:02:25,239 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_placement_False)
2023-02-15 21:02:25,256 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_prometheus_False)
2023-02-15 21:02:25,274 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_rabbitmq_True)
2023-02-15 21:02:25,289 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_redis_False)
2023-02-15 21:02:25,305 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_sahara_False)
2023-02-15 21:02:25,322 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_senlin_False)
2023-02-15 21:02:25,337 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_skydive_False)
2023-02-15 21:02:25,353 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_solum_False)
2023-02-15 21:02:25,370 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_swift_False)
2023-02-15 21:02:25,386 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_tacker_False)
2023-02-15 21:02:25,404 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_telegraf_False)
2023-02-15 21:02:25,420 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_trove_False)
2023-02-15 21:02:25,437 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_venus_False)
2023-02-15 21:02:25,453 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_vitrage_False)
2023-02-15 21:02:25,470 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_watcher_False)
2023-02-15 21:02:25,482 p=6025 u=root n=ansible | ok: [localhost] => (item=enable_zun_False)
2023-02-15 21:02:25,873 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
kolla_action_precheck

2023-02-15 21:02:25,875 p=6025 u=root n=ansible | PLAY [Apply role prechecks] ****************************************************
2023-02-15 21:02:25,875 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:02:25,889 p=6025 u=root n=ansible | PLAY [Apply role common] *******************************************************
2023-02-15 21:02:26,089 p=6025 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-15 21:02:26,436 p=6025 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/common/tasks/deploy.yml for localhost
2023-02-15 21:02:26,606 p=6025 u=root n=ansible | TASK [common : Ensuring config directories exist] ******************************
2023-02-15 21:02:27,648 p=6025 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'cron'}, 'cron'])
2023-02-15 21:02:27,734 p=6025 u=root n=ansible | skipping: [localhost] => (item=[{'service_name': 'fluentd'}, 'fluentd']) 
2023-02-15 21:02:28,297 p=6025 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'kolla-toolbox'}, 'kolla-toolbox'])
2023-02-15 21:02:28,467 p=6025 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-15 21:02:28,533 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:02:28,708 p=6025 u=root n=ansible | TASK [common : Copying over config.json files for services] ********************
2023-02-15 21:02:28,857 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:02:30,594 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:02:31,976 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:02:32,289 p=6025 u=root n=ansible | TASK [common : Find custom fluentd input config files] *************************
2023-02-15 21:02:32,454 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:02:32,733 p=6025 u=root n=ansible | TASK [common : Find custom fluentd filter config files] ************************
2023-02-15 21:02:32,840 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:02:33,043 p=6025 u=root n=ansible | TASK [common : Find custom fluentd format config files] ************************
2023-02-15 21:02:33,150 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:02:33,412 p=6025 u=root n=ansible | TASK [common : Find custom fluentd output config files] ************************
2023-02-15 21:02:33,586 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:02:33,752 p=6025 u=root n=ansible | TASK [common : Copying over td-agent.conf] *************************************
2023-02-15 21:02:33,861 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:02:33,989 p=6025 u=root n=ansible | TASK [common : Copying over cron logrotate config file] ************************
2023-02-15 21:02:35,298 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:02:35,438 p=6025 u=root n=ansible | TASK [common : Ensure RabbitMQ Erlang cookie exists] ***************************
2023-02-15 21:02:36,628 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:02:36,727 p=6025 u=root n=ansible | TASK [common : Ensuring config directories have correct owner and permission] ***
2023-02-15 21:02:36,839 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:02:36,851 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:02:37,325 p=6025 u=root n=ansible | ok: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:02:37,440 p=6025 u=root n=ansible | TASK [common : Copy rabbitmq-env.conf to kolla toolbox] ************************
2023-02-15 21:02:38,561 p=6025 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/rabbitmq-env.conf.j2)
2023-02-15 21:02:38,661 p=6025 u=root n=ansible | TASK [common : Copy rabbitmq erl_inetrc to kolla toolbox] **********************
2023-02-15 21:02:40,033 p=6025 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/erl_inetrc.j2)
2023-02-15 21:02:40,156 p=6025 u=root n=ansible | TASK [common : Check common containers] ****************************************
2023-02-15 21:02:40,314 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:02:44,149 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:02:45,146 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:02:45,299 p=6025 u=root n=ansible | TASK [common : Creating log volume] ********************************************
2023-02-15 21:02:46,896 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:02:47,070 p=6025 u=root n=ansible | TASK [common : Link kolla_logs volume to /var/log/kolla] ***********************
2023-02-15 21:02:47,899 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:02:48,082 p=6025 u=root n=ansible | TASK [common : Flush handlers] *************************************************
2023-02-15 21:02:48,083 p=6025 u=root n=ansible | RUNNING HANDLER [common : Restart kolla-toolbox container] *********************
2023-02-15 21:02:51,986 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:02:51,989 p=6025 u=root n=ansible | RUNNING HANDLER [common : Initializing toolbox container using normal user] ****
2023-02-15 21:03:07,368 p=6025 u=root n=ansible | ok: [localhost]
2023-02-15 21:03:07,374 p=6025 u=root n=ansible | RUNNING HANDLER [common : Restart cron container] ******************************
2023-02-15 21:03:09,773 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:03:10,245 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_loadbalancer_True

2023-02-15 21:03:10,261 p=6025 u=root n=ansible | PLAY [Apply role loadbalancer] *************************************************
2023-02-15 21:03:10,261 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:10,264 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_collectd_True

2023-02-15 21:03:10,273 p=6025 u=root n=ansible | PLAY [Apply role collectd] *****************************************************
2023-02-15 21:03:10,273 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:10,276 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_influxdb_True

2023-02-15 21:03:10,283 p=6025 u=root n=ansible | PLAY [Apply role influxdb] *****************************************************
2023-02-15 21:03:10,284 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:10,286 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_telegraf_True

2023-02-15 21:03:10,294 p=6025 u=root n=ansible | PLAY [Apply role telegraf] *****************************************************
2023-02-15 21:03:10,294 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:10,296 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_redis_True

2023-02-15 21:03:10,304 p=6025 u=root n=ansible | PLAY [Apply role redis] ********************************************************
2023-02-15 21:03:10,304 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:10,307 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_mariadb_True

2023-02-15 21:03:10,309 p=6025 u=root n=ansible | PLAY [Apply role mariadb] ******************************************************
2023-02-15 21:03:10,309 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:10,310 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_memcached_True

2023-02-15 21:03:10,317 p=6025 u=root n=ansible | PLAY [Apply role memcached] ****************************************************
2023-02-15 21:03:10,318 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:10,326 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_prometheus_True

2023-02-15 21:03:10,336 p=6025 u=root n=ansible | PLAY [Apply role prometheus] ***************************************************
2023-02-15 21:03:10,337 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:10,341 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_iscsid_True

2023-02-15 21:03:10,356 p=6025 u=root n=ansible | PLAY [Apply role iscsi] ********************************************************
2023-02-15 21:03:10,357 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:10,362 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_multipathd_True

2023-02-15 21:03:10,382 p=6025 u=root n=ansible | PLAY [Apply role multipathd] ***************************************************
2023-02-15 21:03:10,382 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:10,391 p=6025 u=root n=ansible | PLAY [Apply role rabbitmq] *****************************************************
2023-02-15 21:03:10,632 p=6025 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-15 21:03:10,931 p=6025 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/deploy.yml for localhost
2023-02-15 21:03:11,054 p=6025 u=root n=ansible | TASK [rabbitmq : Ensuring config directories exist] ****************************
2023-02-15 21:03:11,848 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 21:03:12,011 p=6025 u=root n=ansible | TASK [rabbitmq : Copying over config.json files for services] ******************
2023-02-15 21:03:13,330 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 21:03:13,460 p=6025 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq-env.conf] *******************************
2023-02-15 21:03:15,207 p=6025 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq-env.conf.j2)
2023-02-15 21:03:15,403 p=6025 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq.conf] ***********************************
2023-02-15 21:03:17,284 p=6025 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq.conf.j2)
2023-02-15 21:03:17,423 p=6025 u=root n=ansible | TASK [rabbitmq : Copying over erl_inetrc] **************************************
2023-02-15 21:03:19,035 p=6025 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/erl_inetrc.j2)
2023-02-15 21:03:19,165 p=6025 u=root n=ansible | TASK [rabbitmq : Copying over advanced.config] *********************************
2023-02-15 21:03:21,027 p=6025 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/advanced.config.j2)
2023-02-15 21:03:21,137 p=6025 u=root n=ansible | TASK [rabbitmq : Copying over definitions.json] ********************************
2023-02-15 21:03:22,911 p=6025 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/definitions.json.j2)
2023-02-15 21:03:23,044 p=6025 u=root n=ansible | TASK [rabbitmq : Copying over enabled_plugins] *********************************
2023-02-15 21:03:24,498 p=6025 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/enabled_plugins.j2)
2023-02-15 21:03:24,659 p=6025 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-15 21:03:24,729 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:03:24,884 p=6025 u=root n=ansible | TASK [rabbitmq : Check rabbitmq containers] ************************************
2023-02-15 21:03:26,247 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 21:03:26,377 p=6025 u=root n=ansible | TASK [rabbitmq : Creating rabbitmq volume] *************************************
2023-02-15 21:03:28,153 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:03:28,323 p=6025 u=root n=ansible | TASK [rabbitmq : Running RabbitMQ bootstrap container] *************************
2023-02-15 21:03:31,225 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:03:31,377 p=6025 u=root n=ansible | TASK [rabbitmq : Flush handlers] ***********************************************
2023-02-15 21:03:31,378 p=6025 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart first rabbitmq container] ******************
2023-02-15 21:03:31,902 p=6025 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/restart_services.yml for localhost
2023-02-15 21:03:31,905 p=6025 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart rabbitmq container] ************************
2023-02-15 21:03:34,135 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:03:34,138 p=6025 u=root n=ansible | RUNNING HANDLER [rabbitmq : Waiting for rabbitmq to start] *********************
2023-02-15 21:03:52,977 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:03:52,983 p=6025 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart remaining rabbitmq containers] *************
2023-02-15 21:03:53,508 p=6025 u=root n=ansible | skipping: [localhost] => (item=localhost) 
2023-02-15 21:03:53,927 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_outward_rabbitmq_True

2023-02-15 21:03:53,930 p=6025 u=root n=ansible | PLAY [Apply role rabbitmq (outward)] *******************************************
2023-02-15 21:03:53,930 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:53,932 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_etcd_True

2023-02-15 21:03:53,942 p=6025 u=root n=ansible | PLAY [Apply role etcd] *********************************************************
2023-02-15 21:03:53,943 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:53,954 p=6025 u=root n=ansible | PLAY [Apply role keystone] *****************************************************
2023-02-15 21:03:54,156 p=6025 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:03:54,451 p=6025 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/deploy.yml for localhost
2023-02-15 21:03:54,562 p=6025 u=root n=ansible | TASK [keystone : Ensuring config directories exist] ****************************
2023-02-15 21:03:55,691 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 21:03:56,319 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:03:56,918 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:03:57,061 p=6025 u=root n=ansible | TASK [keystone : Check if policies shall be overwritten] ***********************
2023-02-15 21:03:57,352 p=6025 u=root n=ansible | TASK [keystone : Set keystone policy file] *************************************
2023-02-15 21:03:57,415 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:03:57,656 p=6025 u=root n=ansible | TASK [keystone : Check if Keystone domain-specific config is supplied] *********
2023-02-15 21:03:58,163 p=6025 u=root n=ansible | ok: [localhost]
2023-02-15 21:03:58,286 p=6025 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:03:58,359 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:03:58,529 p=6025 u=root n=ansible | TASK [keystone : Copying over config.json files for services] ******************
2023-02-15 21:04:00,004 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 21:04:01,119 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:04:02,227 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:04:02,536 p=6025 u=root n=ansible | TASK [keystone : Copying over keystone.conf] ***********************************
2023-02-15 21:04:04,716 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 21:04:04,734 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:04:06,656 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:04:06,855 p=6025 u=root n=ansible | TASK [keystone : Copying keystone-startup script for keystone] *****************
2023-02-15 21:04:08,711 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:04:08,888 p=6025 u=root n=ansible | TASK [keystone : Create Keystone domain-specific config directory] *************
2023-02-15 21:04:09,570 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:04:09,848 p=6025 u=root n=ansible | TASK [keystone : Get file list in custom domains folder] ***********************
2023-02-15 21:04:09,897 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:04:10,025 p=6025 u=root n=ansible | TASK [keystone : Copying Keystone Domain specific settings] ********************
2023-02-15 21:04:10,170 p=6025 u=root n=ansible | TASK [keystone : Copying over existing policy file] ****************************
2023-02-15 21:04:10,563 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}}) 
2023-02-15 21:04:10,577 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:04:10,603 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:04:10,743 p=6025 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:04:10,818 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:04:10,987 p=6025 u=root n=ansible | TASK [keystone : Copying over wsgi-keystone.conf] ******************************
2023-02-15 21:04:13,009 p=6025 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/keystone/templates/wsgi-keystone.conf.j2)
2023-02-15 21:04:13,241 p=6025 u=root n=ansible | TASK [keystone : Checking whether keystone-paste.ini file exists] **************
2023-02-15 21:04:14,070 p=6025 u=root n=ansible | ok: [localhost]
2023-02-15 21:04:14,227 p=6025 u=root n=ansible | TASK [keystone : Copying over keystone-paste.ini] ******************************
2023-02-15 21:04:14,941 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:04:15,196 p=6025 u=root n=ansible | TASK [keystone : Generate the required cron jobs for the node] *****************
2023-02-15 21:04:15,990 p=6025 u=root n=ansible | ok: [localhost]
2023-02-15 21:04:16,115 p=6025 u=root n=ansible | TASK [keystone : Set fact with the generated cron jobs for building the crontab later] ***
2023-02-15 21:04:16,198 p=6025 u=root n=ansible | ok: [localhost]
2023-02-15 21:04:16,345 p=6025 u=root n=ansible | TASK [keystone : Copying files for keystone-fernet] ****************************
2023-02-15 21:04:17,905 p=6025 u=root n=ansible | changed: [localhost] => (item={'src': 'crontab.j2', 'dest': 'crontab'})
2023-02-15 21:04:19,421 p=6025 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-rotate.sh.j2', 'dest': 'fernet-rotate.sh'})
2023-02-15 21:04:21,141 p=6025 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-node-sync.sh.j2', 'dest': 'fernet-node-sync.sh'})
2023-02-15 21:04:22,837 p=6025 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-push.sh.j2', 'dest': 'fernet-push.sh'})
2023-02-15 21:04:24,201 p=6025 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-healthcheck.sh.j2', 'dest': 'fernet-healthcheck.sh'})
2023-02-15 21:04:25,634 p=6025 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa', 'dest': 'id_rsa'})
2023-02-15 21:04:27,008 p=6025 u=root n=ansible | changed: [localhost] => (item={'src': 'ssh_config.j2', 'dest': 'ssh_config'})
2023-02-15 21:04:27,120 p=6025 u=root n=ansible | TASK [keystone : Copying files for keystone-ssh] *******************************
2023-02-15 21:04:28,633 p=6025 u=root n=ansible | changed: [localhost] => (item={'src': 'sshd_config.j2', 'dest': 'sshd_config'})
2023-02-15 21:04:29,890 p=6025 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa.pub', 'dest': 'id_rsa.pub'})
2023-02-15 21:04:29,991 p=6025 u=root n=ansible | TASK [keystone : Check keystone containers] ************************************
2023-02-15 21:04:31,249 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 21:04:32,284 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:04:33,251 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:04:33,401 p=6025 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:04:33,445 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:04:33,663 p=6025 u=root n=ansible | TASK [keystone : Creating keystone database] ***********************************
2023-02-15 21:04:39,259 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:04:39,576 p=6025 u=root n=ansible | TASK [keystone : Creating Keystone database user and setting permissions] ******
2023-02-15 21:04:43,610 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:04:43,797 p=6025 u=root n=ansible | TASK [keystone : Checking for any running keystone_fernet containers] **********
2023-02-15 21:04:45,785 p=6025 u=root n=ansible | ok: [localhost]
2023-02-15 21:04:45,951 p=6025 u=root n=ansible | TASK [keystone : Group nodes where keystone_fernet is running] *****************
2023-02-15 21:04:46,035 p=6025 u=root n=ansible | ok: [localhost]
2023-02-15 21:04:46,220 p=6025 u=root n=ansible | TASK [keystone : Fail if any hosts need bootstrapping and not all hosts targeted] ***
2023-02-15 21:04:46,336 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:04:46,537 p=6025 u=root n=ansible | TASK [keystone : Running Keystone bootstrap container] *************************
2023-02-15 21:04:59,483 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:04:59,777 p=6025 u=root n=ansible | TASK [keystone : Running Keystone fernet bootstrap container] ******************
2023-02-15 21:05:08,692 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:08,802 p=6025 u=root n=ansible | TASK [keystone : Flush handlers] ***********************************************
2023-02-15 21:05:08,803 p=6025 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-ssh container] ********************
2023-02-15 21:05:10,904 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:10,906 p=6025 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-fernet container] *****************
2023-02-15 21:05:12,897 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:12,898 p=6025 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone container] ************************
2023-02-15 21:05:14,870 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:15,060 p=6025 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:05:15,270 p=6025 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/distribute_fernet.yml for localhost
2023-02-15 21:05:15,462 p=6025 u=root n=ansible | TASK [keystone : Waiting for Keystone SSH port to be UP] ***********************
2023-02-15 21:05:16,580 p=6025 u=root n=ansible | ok: [localhost]
2023-02-15 21:05:16,809 p=6025 u=root n=ansible | TASK [keystone : Run key distribution] *****************************************
2023-02-15 21:05:18,040 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:18,175 p=6025 u=root n=ansible | TASK [keystone : Creating admin project, user, role, service, and endpoint] ****
2023-02-15 21:05:28,010 p=6025 u=root n=ansible | changed: [localhost] => (item=RegionOne)
2023-02-15 21:05:28,152 p=6025 u=root n=ansible | TASK [service-ks-register : keystone | Creating services] **********************
2023-02-15 21:05:54,389 p=6025 u=root n=ansible | changed: [localhost] => (item={'name': 'keystone', 'service_type': 'identity'})
2023-02-15 21:05:54,549 p=6025 u=root n=ansible | TASK [service-ks-register : keystone | Creating endpoints] *********************
2023-02-15 21:06:01,550 p=6025 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.161:5000', 'interface': 'internal'})
2023-02-15 21:06:08,448 p=6025 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.161:5000', 'interface': 'public'})
2023-02-15 21:06:08,568 p=6025 u=root n=ansible | TASK [service-ks-register : keystone | Creating projects] **********************
2023-02-15 21:06:08,731 p=6025 u=root n=ansible | TASK [service-ks-register : keystone | Creating users] *************************
2023-02-15 21:06:08,889 p=6025 u=root n=ansible | TASK [service-ks-register : keystone | Creating roles] *************************
2023-02-15 21:06:09,052 p=6025 u=root n=ansible | TASK [service-ks-register : keystone | Granting user roles] ********************
2023-02-15 21:06:09,302 p=6025 u=root n=ansible | TASK [keystone : Creating default user role] ***********************************
2023-02-15 21:06:15,858 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:06:16,000 p=6025 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:06:16,054 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:16,418 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_opensearch_True

2023-02-15 21:06:16,430 p=6025 u=root n=ansible | PLAY [Apply role opensearch] ***************************************************
2023-02-15 21:06:16,430 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:16,434 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_swift_True

2023-02-15 21:06:16,443 p=6025 u=root n=ansible | PLAY [Apply role swift] ********************************************************
2023-02-15 21:06:16,443 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:16,445 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_ceph_rgw_True

2023-02-15 21:06:16,452 p=6025 u=root n=ansible | PLAY [Apply role ceph-rgw] *****************************************************
2023-02-15 21:06:16,453 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:16,455 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_glance_True

2023-02-15 21:06:16,462 p=6025 u=root n=ansible | PLAY [Apply role glance] *******************************************************
2023-02-15 21:06:16,462 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:16,479 p=6025 u=root n=ansible | PLAY [Apply role ironic] *******************************************************
2023-02-15 21:06:16,703 p=6025 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 21:06:17,104 p=6025 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/ironic/tasks/deploy.yml for localhost
2023-02-15 21:06:17,225 p=6025 u=root n=ansible | TASK [service-ks-register : ironic | Creating services] ************************
2023-02-15 21:06:24,253 p=6025 u=root n=ansible | changed: [localhost] => (item={'name': 'ironic', 'service_type': 'baremetal'})
2023-02-15 21:06:31,453 p=6025 u=root n=ansible | changed: [localhost] => (item={'name': 'ironic-inspector', 'service_type': 'baremetal-introspection'})
2023-02-15 21:06:31,582 p=6025 u=root n=ansible | TASK [service-ks-register : ironic | Creating endpoints] ***********************
2023-02-15 21:06:39,685 p=6025 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic', 'url': 'http://169.16.1.161:6385', 'interface': 'internal'})
2023-02-15 21:06:47,328 p=6025 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic', 'url': 'http://169.16.1.161:6385', 'interface': 'public'})
2023-02-15 21:06:55,058 p=6025 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic-inspector', 'url': 'http://169.16.1.161:5050', 'interface': 'internal'})
2023-02-15 21:07:02,219 p=6025 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic-inspector', 'url': 'http://169.16.1.161:5050', 'interface': 'public'})
2023-02-15 21:07:02,335 p=6025 u=root n=ansible | TASK [service-ks-register : ironic | Creating projects] ************************
2023-02-15 21:07:10,545 p=6025 u=root n=ansible | changed: [localhost] => (item=service)
2023-02-15 21:07:10,682 p=6025 u=root n=ansible | TASK [service-ks-register : ironic | Creating users] ***************************
2023-02-15 21:07:19,533 p=6025 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic', 'project': 'service'})
2023-02-15 21:07:28,619 p=6025 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic-inspector', 'project': 'service'})
2023-02-15 21:07:28,623 p=6025 u=root n=ansible | [WARNING]: Module did not set no_log for update_password

2023-02-15 21:07:28,736 p=6025 u=root n=ansible | TASK [service-ks-register : ironic | Creating roles] ***************************
2023-02-15 21:07:34,862 p=6025 u=root n=ansible | ok: [localhost] => (item=admin)
2023-02-15 21:07:34,970 p=6025 u=root n=ansible | TASK [service-ks-register : ironic | Granting user roles] **********************
2023-02-15 21:07:46,415 p=6025 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic', 'role': 'admin', 'project': 'service'})
2023-02-15 21:07:57,598 p=6025 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic-inspector', 'role': 'admin', 'project': 'service'})
2023-02-15 21:07:57,802 p=6025 u=root n=ansible | TASK [module-load : Load modules] **********************************************
2023-02-15 21:07:59,046 p=6025 u=root n=ansible | changed: [localhost] => (item=iscsi_tcp)
2023-02-15 21:07:59,149 p=6025 u=root n=ansible | TASK [module-load : Persist modules via modules-load.d] ************************
2023-02-15 21:08:00,244 p=6025 u=root n=ansible | changed: [localhost] => (item=iscsi_tcp)
2023-02-15 21:08:00,348 p=6025 u=root n=ansible | TASK [module-load : Drop module persistence] ***********************************
2023-02-15 21:08:00,430 p=6025 u=root n=ansible | skipping: [localhost] => (item=iscsi_tcp) 
2023-02-15 21:08:00,635 p=6025 u=root n=ansible | TASK [ironic : Ensuring config directories exist] ******************************
2023-02-15 21:08:01,461 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 21:08:01,940 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:08:02,514 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 21:08:02,965 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:08:03,472 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:08:03,938 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:08:04,101 p=6025 u=root n=ansible | TASK [ironic : Check if Ironic policies shall be overwritten] ******************
2023-02-15 21:08:04,305 p=6025 u=root n=ansible | TASK [ironic : Check if Ironic Inspector policies shall be overwritten] ********
2023-02-15 21:08:04,477 p=6025 u=root n=ansible | TASK [ironic : Set ironic policy file] *****************************************
2023-02-15 21:08:04,521 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:08:04,634 p=6025 u=root n=ansible | TASK [ironic : Set ironic-inspector policy file] *******************************
2023-02-15 21:08:04,669 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:08:04,783 p=6025 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 21:08:04,832 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:08:04,956 p=6025 u=root n=ansible | TASK [ironic : Copying over config.json files for services] ********************
2023-02-15 21:08:06,341 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 21:08:07,496 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:08:08,530 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 21:08:09,632 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:08:10,784 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:08:11,830 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:08:11,943 p=6025 u=root n=ansible | TASK [ironic : Copying over ironic.conf] ***************************************
2023-02-15 21:08:14,173 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 21:08:15,807 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:08:15,824 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 21:08:15,835 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:08:15,843 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:08:15,847 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:08:15,958 p=6025 u=root n=ansible | TASK [ironic : Copying over inspector.conf] ************************************
2023-02-15 21:08:18,423 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:08:18,555 p=6025 u=root n=ansible | TASK [ironic : Copying over dnsmasq.conf] **************************************
2023-02-15 21:08:20,759 p=6025 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic-dnsmasq.conf.j2)
2023-02-15 21:08:20,901 p=6025 u=root n=ansible | TASK [ironic : Copying pxelinux.cfg default] ***********************************
2023-02-15 21:08:21,575 p=6025 u=root n=ansible | skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/pxelinux.default.j2) 
2023-02-15 21:08:21,692 p=6025 u=root n=ansible | TASK [ironic : Copying ironic_pxe_uefi.cfg default] ****************************
2023-02-15 21:08:22,326 p=6025 u=root n=ansible | skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic_pxe_uefi.default.j2) 
2023-02-15 21:08:22,446 p=6025 u=root n=ansible | TASK [ironic : Copying ironic-agent kernel and initramfs (PXE)] ****************
2023-02-15 21:08:23,007 p=6025 u=root n=ansible | skipping: [localhost] => (item=ironic-agent.kernel) 
2023-02-15 21:08:23,508 p=6025 u=root n=ansible | skipping: [localhost] => (item=ironic-agent.initramfs) 
2023-02-15 21:08:23,996 p=6025 u=root n=ansible | skipping: [localhost] => (item=ir-deploy-redfish.efiboot) 
2023-02-15 21:08:24,490 p=6025 u=root n=ansible | skipping: [localhost] => (item=rhel009_wholedisk_image.qcow2) 
2023-02-15 21:08:24,626 p=6025 u=root n=ansible | TASK [ironic : Copying ironic-agent kernel and initramfs (iPXE)] ***************
2023-02-15 21:08:26,494 p=6025 u=root n=ansible | changed: [localhost] => (item=ironic-agent.kernel)
2023-02-15 21:08:33,901 p=6025 u=root n=ansible | changed: [localhost] => (item=ironic-agent.initramfs)
2023-02-15 21:08:35,375 p=6025 u=root n=ansible | changed: [localhost] => (item=ir-deploy-redfish.efiboot)
2023-02-15 21:08:47,805 p=6025 u=root n=ansible | changed: [localhost] => (item=rhel009_wholedisk_image.qcow2)
2023-02-15 21:08:47,911 p=6025 u=root n=ansible | TASK [ironic : Copying inspector.ipxe] *****************************************
2023-02-15 21:08:50,301 p=6025 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/inspector.ipxe.j2)
2023-02-15 21:08:50,403 p=6025 u=root n=ansible | TASK [ironic : Copying ironic-http-httpd.conf] *********************************
2023-02-15 21:08:52,057 p=6025 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic-http-httpd.conf.j2)
2023-02-15 21:08:52,166 p=6025 u=root n=ansible | TASK [ironic : Copying over existing Ironic policy file] ***********************
2023-02-15 21:08:52,491 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}}) 
2023-02-15 21:08:52,496 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:08:52,507 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 21:08:52,516 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:08:52,525 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:08:52,532 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:08:52,643 p=6025 u=root n=ansible | TASK [ironic : Copying over existing Ironic Inspector policy file] *************
2023-02-15 21:08:52,973 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}}) 
2023-02-15 21:08:52,981 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:08:52,993 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 21:08:53,001 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:08:53,011 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:08:53,015 p=6025 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:08:53,125 p=6025 u=root n=ansible | TASK [ironic : Copying over ironic-api-wsgi.conf] ******************************
2023-02-15 21:08:54,638 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:08:54,751 p=6025 u=root n=ansible | TASK [ironic : Check ironic containers] ****************************************
2023-02-15 21:08:58,660 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 21:08:59,830 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:09:00,803 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 21:09:01,783 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:09:02,760 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:09:03,746 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:09:03,861 p=6025 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 21:09:03,908 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:09:04,130 p=6025 u=root n=ansible | TASK [ironic : Creating Ironic database] ***************************************
2023-02-15 21:09:08,177 p=6025 u=root n=ansible | changed: [localhost] => (item={'database_name': 'ironic', 'group': 'ironic-api'})
2023-02-15 21:09:12,760 p=6025 u=root n=ansible | changed: [localhost] => (item={'database_name': 'ironic_inspector', 'group': 'ironic-inspector'})
2023-02-15 21:09:13,066 p=6025 u=root n=ansible | TASK [ironic : Creating Ironic database user and setting permissions] **********
2023-02-15 21:09:17,076 p=6025 u=root n=ansible | changed: [localhost] => (item=ironic)
2023-02-15 21:09:21,091 p=6025 u=root n=ansible | changed: [localhost] => (item=ironic_inspector)
2023-02-15 21:09:21,732 p=6025 u=root n=ansible | TASK [ironic : Running Ironic bootstrap container] *****************************
2023-02-15 21:09:36,109 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:09:36,642 p=6025 u=root n=ansible | TASK [ironic : Running Ironic Inspector bootstrap container] *******************
2023-02-15 21:09:43,221 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:09:43,348 p=6025 u=root n=ansible | TASK [ironic : Running ironic-tftp bootstrap container] ************************
2023-02-15 21:09:46,372 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:09:46,472 p=6025 u=root n=ansible | TASK [ironic : Flush handlers] *************************************************
2023-02-15 21:09:46,473 p=6025 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-conductor container] ******************
2023-02-15 21:09:48,534 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:09:48,536 p=6025 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-api container] ************************
2023-02-15 21:09:50,701 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:09:50,703 p=6025 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-inspector container] ******************
2023-02-15 21:09:53,165 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:09:53,167 p=6025 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-tftp container] ***********************
2023-02-15 21:09:57,088 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:09:57,090 p=6025 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-http container] ***********************
2023-02-15 21:09:59,756 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:09:59,760 p=6025 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-dnsmasq container] ********************
2023-02-15 21:10:03,366 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:10:03,474 p=6025 u=root n=ansible | TASK [ironic : Flush and delete ironic-inspector iptables chain] ***************
2023-02-15 21:10:05,730 p=6025 u=root n=ansible | ok: [localhost] => (item=flush)
2023-02-15 21:10:06,274 p=6025 u=root n=ansible | ok: [localhost] => (item=delete-chain)
2023-02-15 21:10:06,587 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_cinder_True

2023-02-15 21:10:06,597 p=6025 u=root n=ansible | PLAY [Apply role cinder] *******************************************************
2023-02-15 21:10:06,598 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:06,600 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_placement_True

2023-02-15 21:10:06,607 p=6025 u=root n=ansible | PLAY [Apply role placement] ****************************************************
2023-02-15 21:10:06,607 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:06,609 p=6025 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_nova_True

2023-02-15 21:10:06,614 p=6025 u=root n=ansible | PLAY [Bootstrap nova API databases] ********************************************
2023-02-15 21:10:06,615 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:06,621 p=6025 u=root n=ansible | PLAY [Bootstrap nova cell databases] *******************************************
2023-02-15 21:10:06,621 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:06,629 p=6025 u=root n=ansible | PLAY [Apply role nova] *********************************************************
2023-02-15 21:10:06,630 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:06,640 p=6025 u=root n=ansible | PLAY [Apply role nova-cell] ****************************************************
2023-02-15 21:10:06,640 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:06,647 p=6025 u=root n=ansible | PLAY [Refresh nova scheduler cell cache] ***************************************
2023-02-15 21:10:06,647 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:06,654 p=6025 u=root n=ansible | PLAY [Reload global Nova super conductor services] *****************************
2023-02-15 21:10:06,654 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:06,663 p=6025 u=root n=ansible | PLAY [Reload Nova cell services] ***********************************************
2023-02-15 21:10:06,664 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:06,670 p=6025 u=root n=ansible | PLAY [Reload global Nova API services] *****************************************
2023-02-15 21:10:06,671 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:06,676 p=6025 u=root n=ansible | PLAY [Run Nova API online data migrations] *************************************
2023-02-15 21:10:06,676 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:06,682 p=6025 u=root n=ansible | PLAY [Run Nova cell online data migrations] ************************************
2023-02-15 21:10:06,682 p=6025 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:06,692 p=6025 u=root n=ansible | PLAY [Apply role openvswitch] **************************************************
2023-02-15 21:10:06,913 p=6025 u=root n=ansible | TASK [openvswitch : include_tasks] *********************************************
2023-02-15 21:10:07,170 p=6025 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/openvswitch/tasks/deploy.yml for localhost
2023-02-15 21:10:07,296 p=6025 u=root n=ansible | TASK [module-load : Load modules] **********************************************
2023-02-15 21:10:08,171 p=6025 u=root n=ansible | changed: [localhost] => (item=openvswitch)
2023-02-15 21:10:08,284 p=6025 u=root n=ansible | TASK [module-load : Persist modules via modules-load.d] ************************
2023-02-15 21:10:09,693 p=6025 u=root n=ansible | changed: [localhost] => (item=openvswitch)
2023-02-15 21:10:09,818 p=6025 u=root n=ansible | TASK [module-load : Drop module persistence] ***********************************
2023-02-15 21:10:09,917 p=6025 u=root n=ansible | skipping: [localhost] => (item=openvswitch) 
2023-02-15 21:10:10,183 p=6025 u=root n=ansible | TASK [openvswitch : Ensuring config directories exist] *************************
2023-02-15 21:10:11,164 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:11,608 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:11,720 p=6025 u=root n=ansible | TASK [openvswitch : Copying over config.json files for services] ***************
2023-02-15 21:10:12,863 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:13,930 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:14,041 p=6025 u=root n=ansible | TASK [openvswitch : Copying over start-ovs file for openvswitch-vswitchd] ******
2023-02-15 21:10:15,348 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:10:15,464 p=6025 u=root n=ansible | TASK [openvswitch : Copying over start-ovsdb-server files for openvswitch-db-server] ***
2023-02-15 21:10:16,710 p=6025 u=root n=ansible | changed: [localhost]
2023-02-15 21:10:16,823 p=6025 u=root n=ansible | TASK [openvswitch : Copying over ovs-vsctl wrapper] ****************************
2023-02-15 21:10:17,038 p=6025 u=root n=ansible | skipping: [localhost]
2023-02-15 21:10:17,160 p=6025 u=root n=ansible | TASK [openvswitch : Check openvswitch containers] ******************************
2023-02-15 21:10:19,030 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:20,087 p=6025 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:20,195 p=6025 u=root n=ansible | TASK [openvswitch : Flush Handlers] ********************************************
2023-02-15 21:10:20,196 p=6025 u=root n=ansible | [WARNING]: flush_handlers task does not support when conditional

2023-02-15 21:10:20,196 p=6025 u=root n=ansible | RUNNING HANDLER [openvswitch : Restart openvswitch-db-server container] ********
2023-02-15 21:10:28,762 p=6025 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "msg": "'Traceback (most recent call last):\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/client.py\", line 268, in _raise_for_status\\n    response.raise_for_status()\\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 1021, in raise_for_status\\n    raise HTTPError(http_error_msg, response=self)\\nrequests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.42/images/create?tag=14.6.0&fromImage=kolla%2Fopenvswitch-db-server\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \"/tmp/ansible_kolla_docker_payload_d80iu_xn/ansible_kolla_docker_payload.zip/ansible/modules/kolla_docker.py\", line 404, in main\\n  File \"/tmp/ansible_kolla_docker_payload_d80iu_xn/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 654, in recreate_or_restart_container\\n    self.start_container()\\n  File \"/tmp/ansible_kolla_docker_payload_d80iu_xn/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 672, in start_container\\n    self.pull_image()\\n  File \"/tmp/ansible_kolla_docker_payload_d80iu_xn/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 453, in pull_image\\n    json.loads(line.strip().decode(\\'utf-8\\')) for line in self.dc.pull(\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/image.py\", line 430, in pull\\n    self._raise_for_status(response)\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/client.py\", line 270, in _raise_for_status\\n    raise create_api_error_from_http_exception(e)\\n  File \"/usr/local/lib/python3.9/site-packages/docker/errors.py\", line 31, in create_api_error_from_http_exception\\n    raise cls(e, response=response, explanation=explanation)\\ndocker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.42/images/create?tag=14.6.0&fromImage=kolla%2Fopenvswitch-db-server: Not Found (\"manifest for kolla/openvswitch-db-server:14.6.0 not found: manifest unknown: manifest unknown\")\\n'"}
2023-02-15 21:10:28,764 p=6025 u=root n=ansible | RUNNING HANDLER [openvswitch : Restart openvswitch-vswitchd container] *********
2023-02-15 21:10:28,767 p=6025 u=root n=ansible | NO MORE HOSTS LEFT *************************************************************
2023-02-15 21:10:28,770 p=6025 u=root n=ansible | PLAY RECAP *********************************************************************
2023-02-15 21:10:28,771 p=6025 u=root n=ansible | localhost                  : ok=101  changed=78   unreachable=0    failed=1    skipped=38   rescued=0    ignored=0   
