2023-02-16 13:44:22,011 p=6013 u=root n=ansible | [WARNING]: Invalid characters were found in group names but not replaced, use
-vvvv to see details

2023-02-16 13:44:25,838 p=6013 u=root n=ansible | PLAY [Gather facts for all hosts] **********************************************
2023-02-16 13:44:26,104 p=6013 u=root n=ansible | TASK [Gather facts] ************************************************************
2023-02-16 13:44:28,364 p=6013 u=root n=ansible | ok: [localhost]
2023-02-16 13:44:28,446 p=6013 u=root n=ansible | TASK [Group hosts to determine when using --limit] *****************************
2023-02-16 13:44:28,512 p=6013 u=root n=ansible | ok: [localhost]
2023-02-16 13:44:28,683 p=6013 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
all_using_limit_True

2023-02-16 13:44:28,693 p=6013 u=root n=ansible | PLAY [Gather facts for all hosts (if using --limit)] ***************************
2023-02-16 13:44:28,693 p=6013 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:44:28,696 p=6013 u=root n=ansible | PLAY [Group hosts based on configuration] **************************************
2023-02-16 13:44:28,861 p=6013 u=root n=ansible | TASK [Group hosts based on Kolla action] ***************************************
2023-02-16 13:44:28,916 p=6013 u=root n=ansible | ok: [localhost]
2023-02-16 13:44:29,003 p=6013 u=root n=ansible | TASK [Group hosts based on enabled services] ***********************************
2023-02-16 13:44:29,232 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_aodh_False)
2023-02-16 13:44:29,248 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_barbican_False)
2023-02-16 13:44:29,266 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_blazar_False)
2023-02-16 13:44:29,282 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_ceilometer_False)
2023-02-16 13:44:29,298 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_ceph_rgw_False)
2023-02-16 13:44:29,314 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_cinder_False)
2023-02-16 13:44:29,331 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_cloudkitty_False)
2023-02-16 13:44:29,348 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_collectd_False)
2023-02-16 13:44:29,365 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_cyborg_False)
2023-02-16 13:44:29,382 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_designate_False)
2023-02-16 13:44:29,398 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_etcd_False)
2023-02-16 13:44:29,415 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_freezer_False)
2023-02-16 13:44:29,431 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_glance_False)
2023-02-16 13:44:29,447 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_gnocchi_False)
2023-02-16 13:44:29,463 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_grafana_False)
2023-02-16 13:44:29,479 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_hacluster_False)
2023-02-16 13:44:29,494 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_heat_False)
2023-02-16 13:44:29,510 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_horizon_False)
2023-02-16 13:44:29,525 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_influxdb_False)
2023-02-16 13:44:29,541 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_ironic_True)
2023-02-16 13:44:29,557 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_iscsid_False)
2023-02-16 13:44:29,572 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_keystone_True)
2023-02-16 13:44:29,585 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_kuryr_False)
2023-02-16 13:44:29,601 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_loadbalancer_False)
2023-02-16 13:44:29,615 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_magnum_False)
2023-02-16 13:44:29,630 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_manila_False)
2023-02-16 13:44:29,646 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_mariadb_False)
2023-02-16 13:44:29,662 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_masakari_False)
2023-02-16 13:44:29,676 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_memcached_False)
2023-02-16 13:44:29,692 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_mistral_False)
2023-02-16 13:44:29,705 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_multipathd_False)
2023-02-16 13:44:29,722 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_murano_False)
2023-02-16 13:44:29,738 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_neutron_True)
2023-02-16 13:44:29,755 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_nova_False)
2023-02-16 13:44:29,770 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_octavia_False)
2023-02-16 13:44:29,786 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_False)
2023-02-16 13:44:29,802 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_dashboards_False)
2023-02-16 13:44:29,816 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_openvswitch_False_enable_ovs_dpdk_False)
2023-02-16 13:44:29,830 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_outward_rabbitmq_False)
2023-02-16 13:44:29,845 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_ovn_False)
2023-02-16 13:44:29,860 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_placement_False)
2023-02-16 13:44:29,876 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_prometheus_False)
2023-02-16 13:44:29,891 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_rabbitmq_True)
2023-02-16 13:44:29,905 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_redis_False)
2023-02-16 13:44:29,921 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_sahara_False)
2023-02-16 13:44:29,935 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_senlin_False)
2023-02-16 13:44:29,950 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_skydive_False)
2023-02-16 13:44:29,965 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_solum_False)
2023-02-16 13:44:29,983 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_swift_False)
2023-02-16 13:44:29,998 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_tacker_False)
2023-02-16 13:44:30,014 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_telegraf_False)
2023-02-16 13:44:30,030 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_trove_False)
2023-02-16 13:44:30,047 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_venus_False)
2023-02-16 13:44:30,061 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_vitrage_False)
2023-02-16 13:44:30,076 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_watcher_False)
2023-02-16 13:44:30,086 p=6013 u=root n=ansible | ok: [localhost] => (item=enable_zun_False)
2023-02-16 13:44:30,415 p=6013 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
kolla_action_precheck

2023-02-16 13:44:30,417 p=6013 u=root n=ansible | PLAY [Apply role prechecks] ****************************************************
2023-02-16 13:44:30,417 p=6013 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:44:30,431 p=6013 u=root n=ansible | PLAY [Apply role common] *******************************************************
2023-02-16 13:44:30,637 p=6013 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-16 13:44:30,874 p=6013 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/common/tasks/deploy.yml for localhost
2023-02-16 13:44:30,981 p=6013 u=root n=ansible | TASK [common : Ensuring config directories exist] ******************************
2023-02-16 13:44:32,012 p=6013 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'cron'}, 'cron'])
2023-02-16 13:44:32,073 p=6013 u=root n=ansible | skipping: [localhost] => (item=[{'service_name': 'fluentd'}, 'fluentd']) 
2023-02-16 13:44:32,565 p=6013 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'kolla-toolbox'}, 'kolla-toolbox'])
2023-02-16 13:44:32,667 p=6013 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-16 13:44:32,716 p=6013 u=root n=ansible | skipping: [localhost]
2023-02-16 13:44:32,821 p=6013 u=root n=ansible | TASK [common : Copying over config.json files for services] ********************
2023-02-16 13:44:32,931 p=6013 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-16 13:44:34,619 p=6013 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-16 13:44:35,542 p=6013 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-16 13:44:35,836 p=6013 u=root n=ansible | TASK [common : Find custom fluentd input config files] *************************
2023-02-16 13:44:35,949 p=6013 u=root n=ansible | skipping: [localhost]
2023-02-16 13:44:36,190 p=6013 u=root n=ansible | TASK [common : Find custom fluentd filter config files] ************************
2023-02-16 13:44:36,293 p=6013 u=root n=ansible | skipping: [localhost]
2023-02-16 13:44:36,501 p=6013 u=root n=ansible | TASK [common : Find custom fluentd format config files] ************************
2023-02-16 13:44:36,603 p=6013 u=root n=ansible | skipping: [localhost]
2023-02-16 13:44:36,848 p=6013 u=root n=ansible | TASK [common : Find custom fluentd output config files] ************************
2023-02-16 13:44:36,947 p=6013 u=root n=ansible | skipping: [localhost]
2023-02-16 13:44:37,050 p=6013 u=root n=ansible | TASK [common : Copying over td-agent.conf] *************************************
2023-02-16 13:44:37,151 p=6013 u=root n=ansible | skipping: [localhost]
2023-02-16 13:44:37,281 p=6013 u=root n=ansible | TASK [common : Copying over cron logrotate config file] ************************
2023-02-16 13:44:38,519 p=6013 u=root n=ansible | changed: [localhost]
2023-02-16 13:44:38,665 p=6013 u=root n=ansible | TASK [common : Ensure RabbitMQ Erlang cookie exists] ***************************
2023-02-16 13:44:39,727 p=6013 u=root n=ansible | changed: [localhost]
2023-02-16 13:44:39,830 p=6013 u=root n=ansible | TASK [common : Ensuring config directories have correct owner and permission] ***
2023-02-16 13:44:39,953 p=6013 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-16 13:44:39,969 p=6013 u=root n=ansible | skipping: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-16 13:44:40,423 p=6013 u=root n=ansible | ok: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-16 13:44:40,528 p=6013 u=root n=ansible | TASK [common : Copy rabbitmq-env.conf to kolla toolbox] ************************
2023-02-16 13:44:41,699 p=6013 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/rabbitmq-env.conf.j2)
2023-02-16 13:44:41,831 p=6013 u=root n=ansible | TASK [common : Copy rabbitmq erl_inetrc to kolla toolbox] **********************
2023-02-16 13:44:42,949 p=6013 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/erl_inetrc.j2)
2023-02-16 13:44:43,105 p=6013 u=root n=ansible | TASK [common : Check common containers] ****************************************
2023-02-16 13:44:43,231 p=6013 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-16 13:44:45,060 p=6013 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-16 13:44:46,096 p=6013 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-16 13:44:46,217 p=6013 u=root n=ansible | TASK [common : Creating log volume] ********************************************
2023-02-16 13:44:47,431 p=6013 u=root n=ansible | changed: [localhost]
2023-02-16 13:44:47,557 p=6013 u=root n=ansible | TASK [common : Link kolla_logs volume to /var/log/kolla] ***********************
2023-02-16 13:44:48,196 p=6013 u=root n=ansible | changed: [localhost]
2023-02-16 13:44:48,302 p=6013 u=root n=ansible | TASK [common : Flush handlers] *************************************************
2023-02-16 13:44:48,303 p=6013 u=root n=ansible | RUNNING HANDLER [common : Restart kolla-toolbox container] *********************
2023-02-16 13:44:50,730 p=6013 u=root n=ansible | changed: [localhost]
2023-02-16 13:44:50,732 p=6013 u=root n=ansible | RUNNING HANDLER [common : Initializing toolbox container using normal user] ****
2023-02-16 13:44:56,430 p=6013 u=root n=ansible | ok: [localhost]
2023-02-16 13:44:56,432 p=6013 u=root n=ansible | RUNNING HANDLER [common : Restart cron container] ******************************
2023-02-16 13:44:58,154 p=6013 u=root n=ansible | changed: [localhost]
2023-02-16 13:44:58,477 p=6013 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_loadbalancer_True

2023-02-16 13:44:58,486 p=6013 u=root n=ansible | PLAY [Apply role loadbalancer] *************************************************
2023-02-16 13:44:58,486 p=6013 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:44:58,488 p=6013 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_collectd_True

2023-02-16 13:44:58,494 p=6013 u=root n=ansible | PLAY [Apply role collectd] *****************************************************
2023-02-16 13:44:58,495 p=6013 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:44:58,496 p=6013 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_influxdb_True

2023-02-16 13:44:58,502 p=6013 u=root n=ansible | PLAY [Apply role influxdb] *****************************************************
2023-02-16 13:44:58,502 p=6013 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:44:58,504 p=6013 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_telegraf_True

2023-02-16 13:44:58,509 p=6013 u=root n=ansible | PLAY [Apply role telegraf] *****************************************************
2023-02-16 13:44:58,510 p=6013 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:44:58,511 p=6013 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_redis_True

2023-02-16 13:44:58,517 p=6013 u=root n=ansible | PLAY [Apply role redis] ********************************************************
2023-02-16 13:44:58,517 p=6013 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:44:58,519 p=6013 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_mariadb_True

2023-02-16 13:44:58,520 p=6013 u=root n=ansible | PLAY [Apply role mariadb] ******************************************************
2023-02-16 13:44:58,521 p=6013 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:44:58,522 p=6013 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_memcached_True

2023-02-16 13:44:58,527 p=6013 u=root n=ansible | PLAY [Apply role memcached] ****************************************************
2023-02-16 13:44:58,527 p=6013 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:44:58,533 p=6013 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_prometheus_True

2023-02-16 13:44:58,540 p=6013 u=root n=ansible | PLAY [Apply role prometheus] ***************************************************
2023-02-16 13:44:58,540 p=6013 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:44:58,542 p=6013 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_iscsid_True

2023-02-16 13:44:58,549 p=6013 u=root n=ansible | PLAY [Apply role iscsi] ********************************************************
2023-02-16 13:44:58,549 p=6013 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:44:58,551 p=6013 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_multipathd_True

2023-02-16 13:44:58,557 p=6013 u=root n=ansible | PLAY [Apply role multipathd] ***************************************************
2023-02-16 13:44:58,557 p=6013 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:44:58,562 p=6013 u=root n=ansible | PLAY [Apply role rabbitmq] *****************************************************
2023-02-16 13:44:58,760 p=6013 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-16 13:44:59,028 p=6013 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/deploy.yml for localhost
2023-02-16 13:44:59,140 p=6013 u=root n=ansible | TASK [rabbitmq : Ensuring config directories exist] ****************************
2023-02-16 13:44:59,763 p=6013 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-16 13:44:59,866 p=6013 u=root n=ansible | TASK [rabbitmq : Copying over config.json files for services] ******************
2023-02-16 13:45:01,102 p=6013 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-16 13:45:01,207 p=6013 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq-env.conf] *******************************
2023-02-16 13:45:02,713 p=6013 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq-env.conf.j2)
2023-02-16 13:45:02,825 p=6013 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq.conf] ***********************************
2023-02-16 13:45:04,342 p=6013 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq.conf.j2)
2023-02-16 13:45:04,460 p=6013 u=root n=ansible | TASK [rabbitmq : Copying over erl_inetrc] **************************************
2023-02-16 13:45:05,608 p=6013 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/erl_inetrc.j2)
2023-02-16 13:45:05,712 p=6013 u=root n=ansible | TASK [rabbitmq : Copying over advanced.config] *********************************
2023-02-16 13:45:06,914 p=6013 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/advanced.config.j2)
2023-02-16 13:45:07,051 p=6013 u=root n=ansible | TASK [rabbitmq : Copying over definitions.json] ********************************
2023-02-16 13:45:08,390 p=6013 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/definitions.json.j2)
2023-02-16 13:45:08,518 p=6013 u=root n=ansible | TASK [rabbitmq : Copying over enabled_plugins] *********************************
2023-02-16 13:45:09,802 p=6013 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/enabled_plugins.j2)
2023-02-16 13:45:09,908 p=6013 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-16 13:45:09,950 p=6013 u=root n=ansible | skipping: [localhost]
2023-02-16 13:45:10,066 p=6013 u=root n=ansible | TASK [rabbitmq : Check rabbitmq containers] ************************************
2023-02-16 13:45:11,264 p=6013 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-16 13:45:11,371 p=6013 u=root n=ansible | TASK [rabbitmq : Creating rabbitmq volume] *************************************
2023-02-16 13:45:12,539 p=6013 u=root n=ansible | changed: [localhost]
2023-02-16 13:45:12,645 p=6013 u=root n=ansible | TASK [rabbitmq : Running RabbitMQ bootstrap container] *************************
2023-02-16 13:45:14,549 p=6013 u=root n=ansible | changed: [localhost]
2023-02-16 13:45:14,651 p=6013 u=root n=ansible | TASK [rabbitmq : Flush handlers] ***********************************************
2023-02-16 13:45:14,652 p=6013 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart first rabbitmq container] ******************
2023-02-16 13:45:14,966 p=6013 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/restart_services.yml for localhost
2023-02-16 13:45:14,967 p=6013 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart rabbitmq container] ************************
2023-02-16 13:45:16,568 p=6013 u=root n=ansible | changed: [localhost]
2023-02-16 13:45:16,569 p=6013 u=root n=ansible | RUNNING HANDLER [rabbitmq : Waiting for rabbitmq to start] *********************
2023-02-16 13:45:32,599 p=6013 u=root n=ansible | changed: [localhost]
2023-02-16 13:45:32,602 p=6013 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart remaining rabbitmq containers] *************
2023-02-16 13:45:32,910 p=6013 u=root n=ansible | skipping: [localhost] => (item=localhost) 
2023-02-16 13:45:33,224 p=6013 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_outward_rabbitmq_True

2023-02-16 13:45:33,226 p=6013 u=root n=ansible | PLAY [Apply role rabbitmq (outward)] *******************************************
2023-02-16 13:45:33,227 p=6013 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:45:33,228 p=6013 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_etcd_True

2023-02-16 13:45:33,238 p=6013 u=root n=ansible | PLAY [Apply role etcd] *********************************************************
2023-02-16 13:45:33,238 p=6013 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:45:33,249 p=6013 u=root n=ansible | PLAY [Apply role keystone] *****************************************************
2023-02-16 13:45:33,448 p=6013 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-16 13:45:33,749 p=6013 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/deploy.yml for localhost
2023-02-16 13:45:33,869 p=6013 u=root n=ansible | TASK [keystone : Ensuring config directories exist] ****************************
2023-02-16 13:45:34,712 p=6013 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-16 13:45:35,251 p=6013 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-16 13:45:35,917 p=6013 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-16 13:45:36,080 p=6013 u=root n=ansible | TASK [keystone : Check if policies shall be overwritten] ***********************
2023-02-16 13:45:36,245 p=6013 u=root n=ansible | TASK [keystone : Set keystone policy file] *************************************
2023-02-16 13:45:36,291 p=6013 u=root n=ansible | skipping: [localhost]
2023-02-16 13:45:36,506 p=6013 u=root n=ansible | TASK [keystone : Check if Keystone domain-specific config is supplied] *********
2023-02-16 13:45:37,148 p=6013 u=root n=ansible | ok: [localhost]
2023-02-16 13:45:37,326 p=6013 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-16 13:45:37,422 p=6013 u=root n=ansible | skipping: [localhost]
2023-02-16 13:45:37,599 p=6013 u=root n=ansible | TASK [keystone : Copying over config.json files for services] ******************
2023-02-16 13:45:39,090 p=6013 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-16 13:45:40,068 p=6013 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-16 13:45:41,043 p=6013 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-16 13:45:41,179 p=6013 u=root n=ansible | TASK [keystone : Copying over keystone.conf] ***********************************
2023-02-16 13:45:43,006 p=6013 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-16 13:45:43,033 p=6013 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-16 13:45:44,775 p=6013 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-16 13:45:44,885 p=6013 u=root n=ansible | TASK [keystone : Copying keystone-startup script for keystone] *****************
2023-02-16 13:45:46,421 p=6013 u=root n=ansible | changed: [localhost]
2023-02-16 13:45:46,534 p=6013 u=root n=ansible | TASK [keystone : Create Keystone domain-specific config directory] *************
2023-02-16 13:45:47,080 p=6013 u=root n=ansible | skipping: [localhost]
2023-02-16 13:45:47,298 p=6013 u=root n=ansible | TASK [keystone : Get file list in custom domains folder] ***********************
2023-02-16 13:45:47,344 p=6013 u=root n=ansible | skipping: [localhost]
2023-02-16 13:45:47,453 p=6013 u=root n=ansible | TASK [keystone : Copying Keystone Domain specific settings] ********************
2023-02-16 13:45:47,612 p=6013 u=root n=ansible | TASK [keystone : Copying over existing policy file] ****************************
2023-02-16 13:45:47,909 p=6013 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}}) 
2023-02-16 13:45:47,924 p=6013 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-16 13:45:47,940 p=6013 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-16 13:45:48,051 p=6013 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-16 13:45:48,112 p=6013 u=root n=ansible | skipping: [localhost]
2023-02-16 13:45:48,244 p=6013 u=root n=ansible | TASK [keystone : Copying over wsgi-keystone.conf] ******************************
2023-02-16 13:45:49,936 p=6013 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/keystone/templates/wsgi-keystone.conf.j2)
2023-02-16 13:45:50,232 p=6013 u=root n=ansible | TASK [keystone : Checking whether keystone-paste.ini file exists] **************
2023-02-16 13:45:50,906 p=6013 u=root n=ansible | ok: [localhost]
2023-02-16 13:45:51,023 p=6013 u=root n=ansible | TASK [keystone : Copying over keystone-paste.ini] ******************************
2023-02-16 13:45:51,502 p=6013 u=root n=ansible | skipping: [localhost]
2023-02-16 13:45:51,776 p=6013 u=root n=ansible | TASK [keystone : Generate the required cron jobs for the node] *****************
2023-02-16 13:45:52,578 p=6013 u=root n=ansible | ok: [localhost]
2023-02-16 13:45:52,691 p=6013 u=root n=ansible | TASK [keystone : Set fact with the generated cron jobs for building the crontab later] ***
2023-02-16 13:45:52,765 p=6013 u=root n=ansible | ok: [localhost]
2023-02-16 13:45:52,877 p=6013 u=root n=ansible | TASK [keystone : Copying files for keystone-fernet] ****************************
2023-02-16 13:45:54,628 p=6013 u=root n=ansible | changed: [localhost] => (item={'src': 'crontab.j2', 'dest': 'crontab'})
2023-02-16 13:45:56,044 p=6013 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-rotate.sh.j2', 'dest': 'fernet-rotate.sh'})
2023-02-16 13:45:57,414 p=6013 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-node-sync.sh.j2', 'dest': 'fernet-node-sync.sh'})
2023-02-16 13:45:58,806 p=6013 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-push.sh.j2', 'dest': 'fernet-push.sh'})
2023-02-16 13:46:00,192 p=6013 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-healthcheck.sh.j2', 'dest': 'fernet-healthcheck.sh'})
2023-02-16 13:46:01,615 p=6013 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa', 'dest': 'id_rsa'})
2023-02-16 13:46:03,061 p=6013 u=root n=ansible | changed: [localhost] => (item={'src': 'ssh_config.j2', 'dest': 'ssh_config'})
2023-02-16 13:46:03,173 p=6013 u=root n=ansible | TASK [keystone : Copying files for keystone-ssh] *******************************
2023-02-16 13:46:04,779 p=6013 u=root n=ansible | changed: [localhost] => (item={'src': 'sshd_config.j2', 'dest': 'sshd_config'})
2023-02-16 13:46:06,151 p=6013 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa.pub', 'dest': 'id_rsa.pub'})
2023-02-16 13:46:06,306 p=6013 u=root n=ansible | TASK [keystone : Check keystone containers] ************************************
2023-02-16 13:46:07,585 p=6013 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-16 13:46:08,697 p=6013 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-16 13:46:09,746 p=6013 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-16 13:46:09,942 p=6013 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-16 13:46:10,002 p=6013 u=root n=ansible | skipping: [localhost]
2023-02-16 13:46:10,211 p=6013 u=root n=ansible | TASK [keystone : Creating keystone database] ***********************************
