2023-02-10 09:35:12,213 p=5552 u=root n=ansible | [WARNING]: Invalid characters were found in group names but not replaced, use
-vvvv to see details

2023-02-10 09:35:16,290 p=5552 u=root n=ansible | PLAY [Gather facts for all hosts] **********************************************
2023-02-10 09:35:16,618 p=5552 u=root n=ansible | TASK [Gather facts] ************************************************************
2023-02-10 09:35:18,905 p=5552 u=root n=ansible | ok: [localhost]
2023-02-10 09:35:19,031 p=5552 u=root n=ansible | TASK [Group hosts to determine when using --limit] *****************************
2023-02-10 09:35:19,140 p=5552 u=root n=ansible | ok: [localhost]
2023-02-10 09:35:19,401 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
all_using_limit_True

2023-02-10 09:35:19,415 p=5552 u=root n=ansible | PLAY [Gather facts for all hosts (if using --limit)] ***************************
2023-02-10 09:35:19,415 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:35:19,420 p=5552 u=root n=ansible | PLAY [Group hosts based on configuration] **************************************
2023-02-10 09:35:19,659 p=5552 u=root n=ansible | TASK [Group hosts based on Kolla action] ***************************************
2023-02-10 09:35:19,715 p=5552 u=root n=ansible | ok: [localhost]
2023-02-10 09:35:19,800 p=5552 u=root n=ansible | TASK [Group hosts based on enabled services] ***********************************
2023-02-10 09:35:20,078 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_aodh_False)
2023-02-10 09:35:20,103 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_barbican_False)
2023-02-10 09:35:20,130 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_blazar_False)
2023-02-10 09:35:20,156 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_ceilometer_False)
2023-02-10 09:35:20,179 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_ceph_rgw_False)
2023-02-10 09:35:20,205 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_cinder_False)
2023-02-10 09:35:20,227 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_cloudkitty_False)
2023-02-10 09:35:20,252 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_collectd_False)
2023-02-10 09:35:20,276 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_cyborg_False)
2023-02-10 09:35:20,300 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_designate_False)
2023-02-10 09:35:20,323 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_etcd_False)
2023-02-10 09:35:20,348 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_freezer_False)
2023-02-10 09:35:20,371 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_glance_False)
2023-02-10 09:35:20,396 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_gnocchi_False)
2023-02-10 09:35:20,420 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_grafana_False)
2023-02-10 09:35:20,443 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_hacluster_False)
2023-02-10 09:35:20,466 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_heat_False)
2023-02-10 09:35:20,490 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_horizon_False)
2023-02-10 09:35:20,514 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_influxdb_False)
2023-02-10 09:35:20,537 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_ironic_False)
2023-02-10 09:35:20,561 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_iscsid_False)
2023-02-10 09:35:20,583 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_keystone_True)
2023-02-10 09:35:20,605 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_kuryr_False)
2023-02-10 09:35:20,627 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_loadbalancer_False)
2023-02-10 09:35:20,650 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_magnum_False)
2023-02-10 09:35:20,671 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_manila_False)
2023-02-10 09:35:20,694 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_mariadb_False)
2023-02-10 09:35:20,715 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_masakari_False)
2023-02-10 09:35:20,737 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_memcached_False)
2023-02-10 09:35:20,761 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_mistral_False)
2023-02-10 09:35:20,798 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_multipathd_False)
2023-02-10 09:35:20,823 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_murano_False)
2023-02-10 09:35:20,844 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_neutron_False)
2023-02-10 09:35:20,866 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_nova_False)
2023-02-10 09:35:20,889 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_octavia_False)
2023-02-10 09:35:20,912 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_False)
2023-02-10 09:35:20,933 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_dashboards_False)
2023-02-10 09:35:20,956 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_openvswitch_False_enable_ovs_dpdk_False)
2023-02-10 09:35:20,979 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_outward_rabbitmq_False)
2023-02-10 09:35:21,000 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_ovn_False)
2023-02-10 09:35:21,019 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_placement_False)
2023-02-10 09:35:21,031 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_prometheus_False)
2023-02-10 09:35:21,044 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_rabbitmq_True)
2023-02-10 09:35:21,057 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_redis_False)
2023-02-10 09:35:21,070 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_sahara_False)
2023-02-10 09:35:21,082 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_senlin_False)
2023-02-10 09:35:21,094 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_skydive_False)
2023-02-10 09:35:21,106 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_solum_False)
2023-02-10 09:35:21,119 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_swift_False)
2023-02-10 09:35:21,132 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_tacker_False)
2023-02-10 09:35:21,144 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_telegraf_False)
2023-02-10 09:35:21,157 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_trove_False)
2023-02-10 09:35:21,169 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_venus_False)
2023-02-10 09:35:21,181 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_vitrage_False)
2023-02-10 09:35:21,193 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_watcher_False)
2023-02-10 09:35:21,202 p=5552 u=root n=ansible | ok: [localhost] => (item=enable_zun_False)
2023-02-10 09:35:21,652 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
kolla_action_precheck

2023-02-10 09:35:21,654 p=5552 u=root n=ansible | PLAY [Apply role prechecks] ****************************************************
2023-02-10 09:35:21,654 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:35:21,666 p=5552 u=root n=ansible | PLAY [Apply role common] *******************************************************
2023-02-10 09:35:21,836 p=5552 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-10 09:35:22,031 p=5552 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/common/tasks/deploy.yml for localhost
2023-02-10 09:35:22,131 p=5552 u=root n=ansible | TASK [common : Ensuring config directories exist] ******************************
2023-02-10 09:35:23,263 p=5552 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'cron'}, 'cron'])
2023-02-10 09:35:23,372 p=5552 u=root n=ansible | skipping: [localhost] => (item=[{'service_name': 'fluentd'}, 'fluentd']) 
2023-02-10 09:35:23,968 p=5552 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'kolla-toolbox'}, 'kolla-toolbox'])
2023-02-10 09:35:24,059 p=5552 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-10 09:35:24,103 p=5552 u=root n=ansible | skipping: [localhost]
2023-02-10 09:35:24,205 p=5552 u=root n=ansible | TASK [common : Copying over config.json files for services] ********************
2023-02-10 09:35:24,379 p=5552 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-10 09:35:26,059 p=5552 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-10 09:35:27,069 p=5552 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-10 09:35:27,400 p=5552 u=root n=ansible | TASK [common : Find custom fluentd input config files] *************************
2023-02-10 09:35:27,536 p=5552 u=root n=ansible | skipping: [localhost]
2023-02-10 09:35:27,809 p=5552 u=root n=ansible | TASK [common : Find custom fluentd filter config files] ************************
2023-02-10 09:35:27,945 p=5552 u=root n=ansible | skipping: [localhost]
2023-02-10 09:35:28,200 p=5552 u=root n=ansible | TASK [common : Find custom fluentd format config files] ************************
2023-02-10 09:35:28,305 p=5552 u=root n=ansible | skipping: [localhost]
2023-02-10 09:35:28,602 p=5552 u=root n=ansible | TASK [common : Find custom fluentd output config files] ************************
2023-02-10 09:35:28,745 p=5552 u=root n=ansible | skipping: [localhost]
2023-02-10 09:35:28,903 p=5552 u=root n=ansible | TASK [common : Copying over td-agent.conf] *************************************
2023-02-10 09:35:29,020 p=5552 u=root n=ansible | skipping: [localhost]
2023-02-10 09:35:29,182 p=5552 u=root n=ansible | TASK [common : Copying over cron logrotate config file] ************************
2023-02-10 09:35:30,530 p=5552 u=root n=ansible | changed: [localhost]
2023-02-10 09:35:30,676 p=5552 u=root n=ansible | TASK [common : Ensure RabbitMQ Erlang cookie exists] ***************************
2023-02-10 09:35:31,971 p=5552 u=root n=ansible | changed: [localhost]
2023-02-10 09:35:32,132 p=5552 u=root n=ansible | TASK [common : Ensuring config directories have correct owner and permission] ***
2023-02-10 09:35:32,309 p=5552 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-10 09:35:32,327 p=5552 u=root n=ansible | skipping: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-10 09:35:32,966 p=5552 u=root n=ansible | ok: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-10 09:35:33,092 p=5552 u=root n=ansible | TASK [common : Copy rabbitmq-env.conf to kolla toolbox] ************************
2023-02-10 09:35:34,626 p=5552 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/rabbitmq-env.conf.j2)
2023-02-10 09:35:34,770 p=5552 u=root n=ansible | TASK [common : Copy rabbitmq erl_inetrc to kolla toolbox] **********************
2023-02-10 09:35:35,994 p=5552 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/erl_inetrc.j2)
2023-02-10 09:35:36,141 p=5552 u=root n=ansible | TASK [common : Check common containers] ****************************************
2023-02-10 09:35:36,315 p=5552 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-10 09:35:38,386 p=5552 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-10 09:35:39,352 p=5552 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-10 09:35:39,451 p=5552 u=root n=ansible | TASK [common : Creating log volume] ********************************************
2023-02-10 09:35:40,703 p=5552 u=root n=ansible | changed: [localhost]
2023-02-10 09:35:40,861 p=5552 u=root n=ansible | TASK [common : Link kolla_logs volume to /var/log/kolla] ***********************
2023-02-10 09:35:41,423 p=5552 u=root n=ansible | changed: [localhost]
2023-02-10 09:35:41,576 p=5552 u=root n=ansible | TASK [common : Flush handlers] *************************************************
2023-02-10 09:35:41,577 p=5552 u=root n=ansible | RUNNING HANDLER [common : Restart kolla-toolbox container] *********************
2023-02-10 09:35:44,170 p=5552 u=root n=ansible | changed: [localhost]
2023-02-10 09:35:44,171 p=5552 u=root n=ansible | RUNNING HANDLER [common : Initializing toolbox container using normal user] ****
2023-02-10 09:35:48,681 p=5552 u=root n=ansible | ok: [localhost]
2023-02-10 09:35:48,683 p=5552 u=root n=ansible | RUNNING HANDLER [common : Restart cron container] ******************************
2023-02-10 09:35:50,501 p=5552 u=root n=ansible | changed: [localhost]
2023-02-10 09:35:50,802 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_loadbalancer_True

2023-02-10 09:35:50,810 p=5552 u=root n=ansible | PLAY [Apply role loadbalancer] *************************************************
2023-02-10 09:35:50,811 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:35:50,812 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_collectd_True

2023-02-10 09:35:50,817 p=5552 u=root n=ansible | PLAY [Apply role collectd] *****************************************************
2023-02-10 09:35:50,818 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:35:50,819 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_influxdb_True

2023-02-10 09:35:50,824 p=5552 u=root n=ansible | PLAY [Apply role influxdb] *****************************************************
2023-02-10 09:35:50,824 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:35:50,826 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_telegraf_True

2023-02-10 09:35:50,830 p=5552 u=root n=ansible | PLAY [Apply role telegraf] *****************************************************
2023-02-10 09:35:50,831 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:35:50,832 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_redis_True

2023-02-10 09:35:50,837 p=5552 u=root n=ansible | PLAY [Apply role redis] ********************************************************
2023-02-10 09:35:50,837 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:35:50,838 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_mariadb_True

2023-02-10 09:35:50,840 p=5552 u=root n=ansible | PLAY [Apply role mariadb] ******************************************************
2023-02-10 09:35:50,840 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:35:50,841 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_memcached_True

2023-02-10 09:35:50,846 p=5552 u=root n=ansible | PLAY [Apply role memcached] ****************************************************
2023-02-10 09:35:50,846 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:35:50,851 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_prometheus_True

2023-02-10 09:35:50,856 p=5552 u=root n=ansible | PLAY [Apply role prometheus] ***************************************************
2023-02-10 09:35:50,856 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:35:50,858 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_iscsid_True

2023-02-10 09:35:50,863 p=5552 u=root n=ansible | PLAY [Apply role iscsi] ********************************************************
2023-02-10 09:35:50,863 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:35:50,864 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_multipathd_True

2023-02-10 09:35:50,869 p=5552 u=root n=ansible | PLAY [Apply role multipathd] ***************************************************
2023-02-10 09:35:50,869 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:35:50,874 p=5552 u=root n=ansible | PLAY [Apply role rabbitmq] *****************************************************
2023-02-10 09:35:51,056 p=5552 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-10 09:35:51,231 p=5552 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/deploy.yml for localhost
2023-02-10 09:35:51,325 p=5552 u=root n=ansible | TASK [rabbitmq : Ensuring config directories exist] ****************************
2023-02-10 09:35:51,855 p=5552 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-10 09:35:51,996 p=5552 u=root n=ansible | TASK [rabbitmq : Copying over config.json files for services] ******************
2023-02-10 09:35:53,392 p=5552 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-10 09:35:53,553 p=5552 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq-env.conf] *******************************
2023-02-10 09:35:55,238 p=5552 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq-env.conf.j2)
2023-02-10 09:35:55,404 p=5552 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq.conf] ***********************************
2023-02-10 09:35:57,109 p=5552 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq.conf.j2)
2023-02-10 09:35:57,255 p=5552 u=root n=ansible | TASK [rabbitmq : Copying over erl_inetrc] **************************************
2023-02-10 09:35:58,677 p=5552 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/erl_inetrc.j2)
2023-02-10 09:35:58,819 p=5552 u=root n=ansible | TASK [rabbitmq : Copying over advanced.config] *********************************
2023-02-10 09:36:00,379 p=5552 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/advanced.config.j2)
2023-02-10 09:36:00,511 p=5552 u=root n=ansible | TASK [rabbitmq : Copying over definitions.json] ********************************
2023-02-10 09:36:01,873 p=5552 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/definitions.json.j2)
2023-02-10 09:36:02,031 p=5552 u=root n=ansible | TASK [rabbitmq : Copying over enabled_plugins] *********************************
2023-02-10 09:36:03,519 p=5552 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/enabled_plugins.j2)
2023-02-10 09:36:03,634 p=5552 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-10 09:36:03,697 p=5552 u=root n=ansible | skipping: [localhost]
2023-02-10 09:36:03,833 p=5552 u=root n=ansible | TASK [rabbitmq : Check rabbitmq containers] ************************************
2023-02-10 09:36:05,044 p=5552 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-10 09:36:05,142 p=5552 u=root n=ansible | TASK [rabbitmq : Creating rabbitmq volume] *************************************
2023-02-10 09:36:06,090 p=5552 u=root n=ansible | changed: [localhost]
2023-02-10 09:36:06,255 p=5552 u=root n=ansible | TASK [rabbitmq : Running RabbitMQ bootstrap container] *************************
2023-02-10 09:36:08,608 p=5552 u=root n=ansible | changed: [localhost]
2023-02-10 09:36:08,767 p=5552 u=root n=ansible | TASK [rabbitmq : Flush handlers] ***********************************************
2023-02-10 09:36:08,768 p=5552 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart first rabbitmq container] ******************
2023-02-10 09:36:09,156 p=5552 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/restart_services.yml for localhost
2023-02-10 09:36:09,157 p=5552 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart rabbitmq container] ************************
2023-02-10 09:36:11,163 p=5552 u=root n=ansible | changed: [localhost]
2023-02-10 09:36:11,165 p=5552 u=root n=ansible | RUNNING HANDLER [rabbitmq : Waiting for rabbitmq to start] *********************
2023-02-10 09:36:27,144 p=5552 u=root n=ansible | changed: [localhost]
2023-02-10 09:36:27,145 p=5552 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart remaining rabbitmq containers] *************
2023-02-10 09:36:27,404 p=5552 u=root n=ansible | skipping: [localhost] => (item=localhost) 
2023-02-10 09:36:27,711 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_outward_rabbitmq_True

2023-02-10 09:36:27,713 p=5552 u=root n=ansible | PLAY [Apply role rabbitmq (outward)] *******************************************
2023-02-10 09:36:27,714 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:36:27,715 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_etcd_True

2023-02-10 09:36:27,724 p=5552 u=root n=ansible | PLAY [Apply role etcd] *********************************************************
2023-02-10 09:36:27,725 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:36:27,734 p=5552 u=root n=ansible | PLAY [Apply role keystone] *****************************************************
2023-02-10 09:36:27,932 p=5552 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-10 09:36:28,173 p=5552 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/deploy.yml for localhost
2023-02-10 09:36:28,276 p=5552 u=root n=ansible | TASK [keystone : Ensuring config directories exist] ****************************
2023-02-10 09:36:29,167 p=5552 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-10 09:36:29,747 p=5552 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-10 09:36:30,223 p=5552 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-10 09:36:30,356 p=5552 u=root n=ansible | TASK [keystone : Check if policies shall be overwritten] ***********************
2023-02-10 09:36:30,550 p=5552 u=root n=ansible | TASK [keystone : Set keystone policy file] *************************************
2023-02-10 09:36:30,598 p=5552 u=root n=ansible | skipping: [localhost]
2023-02-10 09:36:30,894 p=5552 u=root n=ansible | TASK [keystone : Check if Keystone domain-specific config is supplied] *********
2023-02-10 09:36:31,368 p=5552 u=root n=ansible | ok: [localhost]
2023-02-10 09:36:31,462 p=5552 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-10 09:36:31,513 p=5552 u=root n=ansible | skipping: [localhost]
2023-02-10 09:36:31,629 p=5552 u=root n=ansible | TASK [keystone : Copying over config.json files for services] ******************
2023-02-10 09:36:33,106 p=5552 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-10 09:36:34,144 p=5552 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-10 09:36:35,309 p=5552 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-10 09:36:35,500 p=5552 u=root n=ansible | TASK [keystone : Copying over keystone.conf] ***********************************
2023-02-10 09:36:37,606 p=5552 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-10 09:36:37,620 p=5552 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-10 09:36:39,470 p=5552 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-10 09:36:39,643 p=5552 u=root n=ansible | TASK [keystone : Copying keystone-startup script for keystone] *****************
2023-02-10 09:36:41,552 p=5552 u=root n=ansible | changed: [localhost]
2023-02-10 09:36:41,648 p=5552 u=root n=ansible | TASK [keystone : Create Keystone domain-specific config directory] *************
2023-02-10 09:36:42,141 p=5552 u=root n=ansible | skipping: [localhost]
2023-02-10 09:36:42,415 p=5552 u=root n=ansible | TASK [keystone : Get file list in custom domains folder] ***********************
2023-02-10 09:36:42,452 p=5552 u=root n=ansible | skipping: [localhost]
2023-02-10 09:36:42,553 p=5552 u=root n=ansible | TASK [keystone : Copying Keystone Domain specific settings] ********************
2023-02-10 09:36:42,719 p=5552 u=root n=ansible | TASK [keystone : Copying over existing policy file] ****************************
2023-02-10 09:36:43,145 p=5552 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}}) 
2023-02-10 09:36:43,153 p=5552 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-10 09:36:43,172 p=5552 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-10 09:36:43,324 p=5552 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-10 09:36:43,401 p=5552 u=root n=ansible | skipping: [localhost]
2023-02-10 09:36:43,566 p=5552 u=root n=ansible | TASK [keystone : Copying over wsgi-keystone.conf] ******************************
2023-02-10 09:36:45,291 p=5552 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/keystone/templates/wsgi-keystone.conf.j2)
2023-02-10 09:36:45,509 p=5552 u=root n=ansible | TASK [keystone : Checking whether keystone-paste.ini file exists] **************
2023-02-10 09:36:46,272 p=5552 u=root n=ansible | ok: [localhost]
2023-02-10 09:36:46,420 p=5552 u=root n=ansible | TASK [keystone : Copying over keystone-paste.ini] ******************************
2023-02-10 09:36:47,014 p=5552 u=root n=ansible | skipping: [localhost]
2023-02-10 09:36:47,258 p=5552 u=root n=ansible | TASK [keystone : Generate the required cron jobs for the node] *****************
2023-02-10 09:36:47,978 p=5552 u=root n=ansible | ok: [localhost]
2023-02-10 09:36:48,141 p=5552 u=root n=ansible | TASK [keystone : Set fact with the generated cron jobs for building the crontab later] ***
2023-02-10 09:36:48,233 p=5552 u=root n=ansible | ok: [localhost]
2023-02-10 09:36:48,399 p=5552 u=root n=ansible | TASK [keystone : Copying files for keystone-fernet] ****************************
2023-02-10 09:36:50,039 p=5552 u=root n=ansible | changed: [localhost] => (item={'src': 'crontab.j2', 'dest': 'crontab'})
2023-02-10 09:36:51,647 p=5552 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-rotate.sh.j2', 'dest': 'fernet-rotate.sh'})
2023-02-10 09:36:53,159 p=5552 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-node-sync.sh.j2', 'dest': 'fernet-node-sync.sh'})
2023-02-10 09:36:54,681 p=5552 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-push.sh.j2', 'dest': 'fernet-push.sh'})
2023-02-10 09:36:56,084 p=5552 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-healthcheck.sh.j2', 'dest': 'fernet-healthcheck.sh'})
2023-02-10 09:36:57,744 p=5552 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa', 'dest': 'id_rsa'})
2023-02-10 09:36:59,219 p=5552 u=root n=ansible | changed: [localhost] => (item={'src': 'ssh_config.j2', 'dest': 'ssh_config'})
2023-02-10 09:36:59,376 p=5552 u=root n=ansible | TASK [keystone : Copying files for keystone-ssh] *******************************
2023-02-10 09:37:01,038 p=5552 u=root n=ansible | changed: [localhost] => (item={'src': 'sshd_config.j2', 'dest': 'sshd_config'})
2023-02-10 09:37:02,670 p=5552 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa.pub', 'dest': 'id_rsa.pub'})
2023-02-10 09:37:02,838 p=5552 u=root n=ansible | TASK [keystone : Check keystone containers] ************************************
2023-02-10 09:37:04,078 p=5552 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-10 09:37:05,170 p=5552 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-10 09:37:06,117 p=5552 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-10 09:37:06,276 p=5552 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-10 09:37:06,344 p=5552 u=root n=ansible | skipping: [localhost]
2023-02-10 09:37:06,665 p=5552 u=root n=ansible | TASK [keystone : Creating keystone database] ***********************************
2023-02-10 09:37:11,081 p=5552 u=root n=ansible | changed: [localhost]
2023-02-10 09:37:11,411 p=5552 u=root n=ansible | TASK [keystone : Creating Keystone database user and setting permissions] ******
2023-02-10 09:37:15,119 p=5552 u=root n=ansible | changed: [localhost]
2023-02-10 09:37:15,263 p=5552 u=root n=ansible | TASK [keystone : Checking for any running keystone_fernet containers] **********
2023-02-10 09:37:16,691 p=5552 u=root n=ansible | ok: [localhost]
2023-02-10 09:37:16,852 p=5552 u=root n=ansible | TASK [keystone : Group nodes where keystone_fernet is running] *****************
2023-02-10 09:37:16,950 p=5552 u=root n=ansible | ok: [localhost]
2023-02-10 09:37:17,115 p=5552 u=root n=ansible | TASK [keystone : Fail if any hosts need bootstrapping and not all hosts targeted] ***
2023-02-10 09:37:17,215 p=5552 u=root n=ansible | skipping: [localhost]
2023-02-10 09:37:17,379 p=5552 u=root n=ansible | TASK [keystone : Running Keystone bootstrap container] *************************
2023-02-10 09:37:26,769 p=5552 u=root n=ansible | changed: [localhost]
2023-02-10 09:37:27,033 p=5552 u=root n=ansible | TASK [keystone : Running Keystone fernet bootstrap container] ******************
2023-02-10 09:37:34,398 p=5552 u=root n=ansible | changed: [localhost]
2023-02-10 09:37:34,571 p=5552 u=root n=ansible | TASK [keystone : Flush handlers] ***********************************************
2023-02-10 09:37:34,572 p=5552 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-ssh container] ********************
2023-02-10 09:37:36,756 p=5552 u=root n=ansible | changed: [localhost]
2023-02-10 09:37:36,760 p=5552 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-fernet container] *****************
2023-02-10 09:37:38,661 p=5552 u=root n=ansible | changed: [localhost]
2023-02-10 09:37:38,663 p=5552 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone container] ************************
2023-02-10 09:37:40,814 p=5552 u=root n=ansible | changed: [localhost]
2023-02-10 09:37:41,003 p=5552 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-10 09:37:41,160 p=5552 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/distribute_fernet.yml for localhost
2023-02-10 09:37:41,291 p=5552 u=root n=ansible | TASK [keystone : Waiting for Keystone SSH port to be UP] ***********************
2023-02-10 09:37:42,516 p=5552 u=root n=ansible | ok: [localhost]
2023-02-10 09:37:42,720 p=5552 u=root n=ansible | TASK [keystone : Run key distribution] *****************************************
2023-02-10 09:37:43,930 p=5552 u=root n=ansible | changed: [localhost]
2023-02-10 09:37:44,035 p=5552 u=root n=ansible | TASK [keystone : Creating admin project, user, role, service, and endpoint] ****
2023-02-10 09:37:52,549 p=5552 u=root n=ansible | changed: [localhost] => (item=RegionOne)
2023-02-10 09:37:52,661 p=5552 u=root n=ansible | TASK [service-ks-register : keystone | Creating services] **********************
2023-02-10 09:38:10,163 p=5552 u=root n=ansible | changed: [localhost] => (item={'name': 'keystone', 'service_type': 'identity'})
2023-02-10 09:38:10,337 p=5552 u=root n=ansible | TASK [service-ks-register : keystone | Creating endpoints] *********************
2023-02-10 09:38:16,987 p=5552 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.146:5000', 'interface': 'internal'})
2023-02-10 09:38:23,266 p=5552 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.146:5000', 'interface': 'public'})
2023-02-10 09:38:23,454 p=5552 u=root n=ansible | TASK [service-ks-register : keystone | Creating projects] **********************
2023-02-10 09:38:23,686 p=5552 u=root n=ansible | TASK [service-ks-register : keystone | Creating users] *************************
2023-02-10 09:38:23,893 p=5552 u=root n=ansible | TASK [service-ks-register : keystone | Creating roles] *************************
2023-02-10 09:38:24,045 p=5552 u=root n=ansible | TASK [service-ks-register : keystone | Granting user roles] ********************
2023-02-10 09:38:24,274 p=5552 u=root n=ansible | TASK [keystone : Creating default user role] ***********************************
2023-02-10 09:38:30,637 p=5552 u=root n=ansible | changed: [localhost]
2023-02-10 09:38:30,798 p=5552 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-10 09:38:30,872 p=5552 u=root n=ansible | skipping: [localhost]
2023-02-10 09:38:31,307 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_opensearch_True

2023-02-10 09:38:31,315 p=5552 u=root n=ansible | PLAY [Apply role opensearch] ***************************************************
2023-02-10 09:38:31,315 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,319 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_swift_True

2023-02-10 09:38:31,323 p=5552 u=root n=ansible | PLAY [Apply role swift] ********************************************************
2023-02-10 09:38:31,323 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,325 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_ceph_rgw_True

2023-02-10 09:38:31,329 p=5552 u=root n=ansible | PLAY [Apply role ceph-rgw] *****************************************************
2023-02-10 09:38:31,329 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,331 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_glance_True

2023-02-10 09:38:31,336 p=5552 u=root n=ansible | PLAY [Apply role glance] *******************************************************
2023-02-10 09:38:31,336 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,339 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_ironic_True

2023-02-10 09:38:31,344 p=5552 u=root n=ansible | PLAY [Apply role ironic] *******************************************************
2023-02-10 09:38:31,344 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,347 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_cinder_True

2023-02-10 09:38:31,352 p=5552 u=root n=ansible | PLAY [Apply role cinder] *******************************************************
2023-02-10 09:38:31,352 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,353 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_placement_True

2023-02-10 09:38:31,360 p=5552 u=root n=ansible | PLAY [Apply role placement] ****************************************************
2023-02-10 09:38:31,360 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,361 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_nova_True

2023-02-10 09:38:31,366 p=5552 u=root n=ansible | PLAY [Bootstrap nova API databases] ********************************************
2023-02-10 09:38:31,366 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,371 p=5552 u=root n=ansible | PLAY [Bootstrap nova cell databases] *******************************************
2023-02-10 09:38:31,371 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,377 p=5552 u=root n=ansible | PLAY [Apply role nova] *********************************************************
2023-02-10 09:38:31,378 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,384 p=5552 u=root n=ansible | PLAY [Apply role nova-cell] ****************************************************
2023-02-10 09:38:31,385 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,390 p=5552 u=root n=ansible | PLAY [Refresh nova scheduler cell cache] ***************************************
2023-02-10 09:38:31,390 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,395 p=5552 u=root n=ansible | PLAY [Reload global Nova super conductor services] *****************************
2023-02-10 09:38:31,395 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,401 p=5552 u=root n=ansible | PLAY [Reload Nova cell services] ***********************************************
2023-02-10 09:38:31,401 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,406 p=5552 u=root n=ansible | PLAY [Reload global Nova API services] *****************************************
2023-02-10 09:38:31,407 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,412 p=5552 u=root n=ansible | PLAY [Run Nova API online data migrations] *************************************
2023-02-10 09:38:31,412 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,418 p=5552 u=root n=ansible | PLAY [Run Nova cell online data migrations] ************************************
2023-02-10 09:38:31,418 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,419 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_openvswitch_True_enable_ovs_dpdk_False

2023-02-10 09:38:31,424 p=5552 u=root n=ansible | PLAY [Apply role openvswitch] **************************************************
2023-02-10 09:38:31,424 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,426 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_openvswitch_True_enable_ovs_dpdk_True

2023-02-10 09:38:31,431 p=5552 u=root n=ansible | PLAY [Apply role ovs-dpdk] *****************************************************
2023-02-10 09:38:31,431 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,433 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_ovn_True

2023-02-10 09:38:31,440 p=5552 u=root n=ansible | PLAY [Apply role ovn-db] *******************************************************
2023-02-10 09:38:31,440 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,445 p=5552 u=root n=ansible | PLAY [Apply role ovn-controller] ***********************************************
2023-02-10 09:38:31,446 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,450 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_neutron_True

2023-02-10 09:38:31,455 p=5552 u=root n=ansible | PLAY [Apply role neutron] ******************************************************
2023-02-10 09:38:31,456 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,457 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_kuryr_True

2023-02-10 09:38:31,461 p=5552 u=root n=ansible | PLAY [Apply role kuryr] ********************************************************
2023-02-10 09:38:31,461 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,463 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_hacluster_True

2023-02-10 09:38:31,467 p=5552 u=root n=ansible | PLAY [Apply role hacluster] ****************************************************
2023-02-10 09:38:31,468 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,470 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_heat_True

2023-02-10 09:38:31,474 p=5552 u=root n=ansible | PLAY [Apply role heat] *********************************************************
2023-02-10 09:38:31,474 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,476 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_horizon_True

2023-02-10 09:38:31,481 p=5552 u=root n=ansible | PLAY [Apply role horizon] ******************************************************
2023-02-10 09:38:31,481 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,482 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_murano_True

2023-02-10 09:38:31,487 p=5552 u=root n=ansible | PLAY [Apply role murano] *******************************************************
2023-02-10 09:38:31,487 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,490 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_solum_True

2023-02-10 09:38:31,495 p=5552 u=root n=ansible | PLAY [Apply role solum] ********************************************************
2023-02-10 09:38:31,495 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,497 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_magnum_True

2023-02-10 09:38:31,502 p=5552 u=root n=ansible | PLAY [Apply role magnum] *******************************************************
2023-02-10 09:38:31,502 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,504 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_mistral_True

2023-02-10 09:38:31,509 p=5552 u=root n=ansible | PLAY [Apply role mistral] ******************************************************
2023-02-10 09:38:31,509 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,511 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_sahara_True

2023-02-10 09:38:31,516 p=5552 u=root n=ansible | PLAY [Apply role sahara] *******************************************************
2023-02-10 09:38:31,516 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,518 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_manila_True

2023-02-10 09:38:31,523 p=5552 u=root n=ansible | PLAY [Apply role manila] *******************************************************
2023-02-10 09:38:31,523 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,525 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_gnocchi_True

2023-02-10 09:38:31,530 p=5552 u=root n=ansible | PLAY [Apply role gnocchi] ******************************************************
2023-02-10 09:38:31,530 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,532 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_ceilometer_True

2023-02-10 09:38:31,537 p=5552 u=root n=ansible | PLAY [Apply role ceilometer] ***************************************************
2023-02-10 09:38:31,537 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,539 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_aodh_True

2023-02-10 09:38:31,544 p=5552 u=root n=ansible | PLAY [Apply role aodh] *********************************************************
2023-02-10 09:38:31,544 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,547 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_barbican_True

2023-02-10 09:38:31,554 p=5552 u=root n=ansible | PLAY [Apply role barbican] *****************************************************
2023-02-10 09:38:31,554 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,556 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_cyborg_True

2023-02-10 09:38:31,561 p=5552 u=root n=ansible | PLAY [Apply role cyborg] *******************************************************
2023-02-10 09:38:31,561 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,564 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_designate_True

2023-02-10 09:38:31,569 p=5552 u=root n=ansible | PLAY [Apply role designate] ****************************************************
2023-02-10 09:38:31,569 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,571 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_trove_True

2023-02-10 09:38:31,576 p=5552 u=root n=ansible | PLAY [Apply role trove] ********************************************************
2023-02-10 09:38:31,576 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,578 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_watcher_True

2023-02-10 09:38:31,583 p=5552 u=root n=ansible | PLAY [Apply role watcher] ******************************************************
2023-02-10 09:38:31,583 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,584 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_grafana_True

2023-02-10 09:38:31,589 p=5552 u=root n=ansible | PLAY [Apply role grafana] ******************************************************
2023-02-10 09:38:31,589 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,591 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_cloudkitty_True

2023-02-10 09:38:31,595 p=5552 u=root n=ansible | PLAY [Apply role cloudkitty] ***************************************************
2023-02-10 09:38:31,596 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,597 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_freezer_True

2023-02-10 09:38:31,602 p=5552 u=root n=ansible | PLAY [Apply role freezer] ******************************************************
2023-02-10 09:38:31,602 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,604 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_senlin_True

2023-02-10 09:38:31,609 p=5552 u=root n=ansible | PLAY [Apply role senlin] *******************************************************
2023-02-10 09:38:31,609 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,611 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_tacker_True

2023-02-10 09:38:31,615 p=5552 u=root n=ansible | PLAY [Apply role tacker] *******************************************************
2023-02-10 09:38:31,616 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,618 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_octavia_True

2023-02-10 09:38:31,623 p=5552 u=root n=ansible | PLAY [Apply role octavia] ******************************************************
2023-02-10 09:38:31,623 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,626 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_zun_True

2023-02-10 09:38:31,630 p=5552 u=root n=ansible | PLAY [Apply role zun] **********************************************************
2023-02-10 09:38:31,631 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,632 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_skydive_True

2023-02-10 09:38:31,637 p=5552 u=root n=ansible | PLAY [Apply role skydive] ******************************************************
2023-02-10 09:38:31,637 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,640 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_vitrage_True

2023-02-10 09:38:31,644 p=5552 u=root n=ansible | PLAY [Apply role vitrage] ******************************************************
2023-02-10 09:38:31,645 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,646 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_blazar_True

2023-02-10 09:38:31,651 p=5552 u=root n=ansible | PLAY [Apply role blazar] *******************************************************
2023-02-10 09:38:31,652 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,654 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_masakari_True

2023-02-10 09:38:31,661 p=5552 u=root n=ansible | PLAY [Apply role masakari] *****************************************************
2023-02-10 09:38:31,662 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,663 p=5552 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_venus_True

2023-02-10 09:38:31,668 p=5552 u=root n=ansible | PLAY [Apply role venus] ********************************************************
2023-02-10 09:38:31,668 p=5552 u=root n=ansible | skipping: no hosts matched
2023-02-10 09:38:31,669 p=5552 u=root n=ansible | PLAY RECAP *********************************************************************
2023-02-10 09:38:31,669 p=5552 u=root n=ansible | localhost                  : ok=62   changed=43   unreachable=0    failed=0    skipped=24   rescued=0    ignored=0   
