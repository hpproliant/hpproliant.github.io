2023-02-10 18:56:35,748 p=5577 u=root n=ansible | [WARNING]: Invalid characters were found in group names but not replaced, use
-vvvv to see details

2023-02-10 18:56:39,903 p=5577 u=root n=ansible | PLAY [Gather facts for all hosts] **********************************************
2023-02-10 18:56:40,275 p=5577 u=root n=ansible | TASK [Gather facts] ************************************************************
2023-02-10 18:56:42,576 p=5577 u=root n=ansible | ok: [localhost]
2023-02-10 18:56:42,725 p=5577 u=root n=ansible | TASK [Group hosts to determine when using --limit] *****************************
2023-02-10 18:56:42,823 p=5577 u=root n=ansible | ok: [localhost]
2023-02-10 18:56:43,119 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
all_using_limit_True

2023-02-10 18:56:43,133 p=5577 u=root n=ansible | PLAY [Gather facts for all hosts (if using --limit)] ***************************
2023-02-10 18:56:43,133 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 18:56:43,139 p=5577 u=root n=ansible | PLAY [Group hosts based on configuration] **************************************
2023-02-10 18:56:43,360 p=5577 u=root n=ansible | TASK [Group hosts based on Kolla action] ***************************************
2023-02-10 18:56:43,418 p=5577 u=root n=ansible | ok: [localhost]
2023-02-10 18:56:43,557 p=5577 u=root n=ansible | TASK [Group hosts based on enabled services] ***********************************
2023-02-10 18:56:43,788 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_aodh_False)
2023-02-10 18:56:43,807 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_barbican_False)
2023-02-10 18:56:43,822 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_blazar_False)
2023-02-10 18:56:43,836 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_ceilometer_False)
2023-02-10 18:56:43,848 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_ceph_rgw_False)
2023-02-10 18:56:43,861 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_cinder_False)
2023-02-10 18:56:43,874 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_cloudkitty_False)
2023-02-10 18:56:43,887 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_collectd_False)
2023-02-10 18:56:43,902 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_cyborg_False)
2023-02-10 18:56:43,916 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_designate_False)
2023-02-10 18:56:43,931 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_etcd_False)
2023-02-10 18:56:43,946 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_freezer_False)
2023-02-10 18:56:43,960 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_glance_False)
2023-02-10 18:56:43,975 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_gnocchi_False)
2023-02-10 18:56:43,989 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_grafana_False)
2023-02-10 18:56:44,005 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_hacluster_False)
2023-02-10 18:56:44,018 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_heat_False)
2023-02-10 18:56:44,033 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_horizon_False)
2023-02-10 18:56:44,047 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_influxdb_False)
2023-02-10 18:56:44,063 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_ironic_False)
2023-02-10 18:56:44,077 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_iscsid_False)
2023-02-10 18:56:44,092 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_keystone_True)
2023-02-10 18:56:44,106 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_kuryr_False)
2023-02-10 18:56:44,121 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_loadbalancer_False)
2023-02-10 18:56:44,136 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_magnum_False)
2023-02-10 18:56:44,150 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_manila_False)
2023-02-10 18:56:44,164 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_mariadb_False)
2023-02-10 18:56:44,179 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_masakari_False)
2023-02-10 18:56:44,193 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_memcached_False)
2023-02-10 18:56:44,208 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_mistral_False)
2023-02-10 18:56:44,222 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_multipathd_False)
2023-02-10 18:56:44,237 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_murano_False)
2023-02-10 18:56:44,252 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_neutron_False)
2023-02-10 18:56:44,269 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_nova_False)
2023-02-10 18:56:44,285 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_octavia_False)
2023-02-10 18:56:44,303 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_False)
2023-02-10 18:56:44,322 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_dashboards_False)
2023-02-10 18:56:44,344 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_openvswitch_False_enable_ovs_dpdk_False)
2023-02-10 18:56:44,366 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_outward_rabbitmq_False)
2023-02-10 18:56:44,387 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_ovn_False)
2023-02-10 18:56:44,408 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_placement_False)
2023-02-10 18:56:44,429 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_prometheus_False)
2023-02-10 18:56:44,448 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_rabbitmq_True)
2023-02-10 18:56:44,468 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_redis_False)
2023-02-10 18:56:44,487 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_sahara_False)
2023-02-10 18:56:44,507 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_senlin_False)
2023-02-10 18:56:44,527 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_skydive_False)
2023-02-10 18:56:44,546 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_solum_False)
2023-02-10 18:56:44,566 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_swift_False)
2023-02-10 18:56:44,586 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_tacker_False)
2023-02-10 18:56:44,606 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_telegraf_False)
2023-02-10 18:56:44,627 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_trove_False)
2023-02-10 18:56:44,646 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_venus_False)
2023-02-10 18:56:44,666 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_vitrage_False)
2023-02-10 18:56:44,682 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_watcher_False)
2023-02-10 18:56:44,690 p=5577 u=root n=ansible | ok: [localhost] => (item=enable_zun_False)
2023-02-10 18:56:45,080 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
kolla_action_precheck

2023-02-10 18:56:45,082 p=5577 u=root n=ansible | PLAY [Apply role prechecks] ****************************************************
2023-02-10 18:56:45,083 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 18:56:45,095 p=5577 u=root n=ansible | PLAY [Apply role common] *******************************************************
2023-02-10 18:56:45,273 p=5577 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-10 18:56:45,471 p=5577 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/common/tasks/deploy.yml for localhost
2023-02-10 18:56:45,579 p=5577 u=root n=ansible | TASK [common : Ensuring config directories exist] ******************************
2023-02-10 18:56:46,578 p=5577 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'cron'}, 'cron'])
2023-02-10 18:56:46,655 p=5577 u=root n=ansible | skipping: [localhost] => (item=[{'service_name': 'fluentd'}, 'fluentd']) 
2023-02-10 18:56:47,249 p=5577 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'kolla-toolbox'}, 'kolla-toolbox'])
2023-02-10 18:56:47,340 p=5577 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-10 18:56:47,383 p=5577 u=root n=ansible | skipping: [localhost]
2023-02-10 18:56:47,483 p=5577 u=root n=ansible | TASK [common : Copying over config.json files for services] ********************
2023-02-10 18:56:47,645 p=5577 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-10 18:56:49,539 p=5577 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-10 18:56:50,634 p=5577 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-10 18:56:50,872 p=5577 u=root n=ansible | TASK [common : Find custom fluentd input config files] *************************
2023-02-10 18:56:51,014 p=5577 u=root n=ansible | skipping: [localhost]
2023-02-10 18:56:51,313 p=5577 u=root n=ansible | TASK [common : Find custom fluentd filter config files] ************************
2023-02-10 18:56:51,458 p=5577 u=root n=ansible | skipping: [localhost]
2023-02-10 18:56:51,668 p=5577 u=root n=ansible | TASK [common : Find custom fluentd format config files] ************************
2023-02-10 18:56:51,780 p=5577 u=root n=ansible | skipping: [localhost]
2023-02-10 18:56:52,060 p=5577 u=root n=ansible | TASK [common : Find custom fluentd output config files] ************************
2023-02-10 18:56:52,206 p=5577 u=root n=ansible | skipping: [localhost]
2023-02-10 18:56:52,363 p=5577 u=root n=ansible | TASK [common : Copying over td-agent.conf] *************************************
2023-02-10 18:56:52,506 p=5577 u=root n=ansible | skipping: [localhost]
2023-02-10 18:56:52,664 p=5577 u=root n=ansible | TASK [common : Copying over cron logrotate config file] ************************
2023-02-10 18:56:54,023 p=5577 u=root n=ansible | changed: [localhost]
2023-02-10 18:56:54,115 p=5577 u=root n=ansible | TASK [common : Ensure RabbitMQ Erlang cookie exists] ***************************
2023-02-10 18:56:55,377 p=5577 u=root n=ansible | changed: [localhost]
2023-02-10 18:56:55,471 p=5577 u=root n=ansible | TASK [common : Ensuring config directories have correct owner and permission] ***
2023-02-10 18:56:55,628 p=5577 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-10 18:56:55,650 p=5577 u=root n=ansible | skipping: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-10 18:56:56,198 p=5577 u=root n=ansible | ok: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-10 18:56:56,294 p=5577 u=root n=ansible | TASK [common : Copy rabbitmq-env.conf to kolla toolbox] ************************
2023-02-10 18:56:57,595 p=5577 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/rabbitmq-env.conf.j2)
2023-02-10 18:56:57,694 p=5577 u=root n=ansible | TASK [common : Copy rabbitmq erl_inetrc to kolla toolbox] **********************
2023-02-10 18:56:59,476 p=5577 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/erl_inetrc.j2)
2023-02-10 18:56:59,641 p=5577 u=root n=ansible | TASK [common : Check common containers] ****************************************
2023-02-10 18:56:59,816 p=5577 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-10 18:57:01,935 p=5577 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-10 18:57:03,138 p=5577 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-10 18:57:03,318 p=5577 u=root n=ansible | TASK [common : Creating log volume] ********************************************
2023-02-10 18:57:04,412 p=5577 u=root n=ansible | changed: [localhost]
2023-02-10 18:57:04,640 p=5577 u=root n=ansible | TASK [common : Link kolla_logs volume to /var/log/kolla] ***********************
2023-02-10 18:57:05,305 p=5577 u=root n=ansible | changed: [localhost]
2023-02-10 18:57:05,406 p=5577 u=root n=ansible | TASK [common : Flush handlers] *************************************************
2023-02-10 18:57:05,407 p=5577 u=root n=ansible | RUNNING HANDLER [common : Restart kolla-toolbox container] *********************
2023-02-10 18:57:08,064 p=5577 u=root n=ansible | changed: [localhost]
2023-02-10 18:57:08,065 p=5577 u=root n=ansible | RUNNING HANDLER [common : Initializing toolbox container using normal user] ****
2023-02-10 18:57:13,836 p=5577 u=root n=ansible | ok: [localhost]
2023-02-10 18:57:13,838 p=5577 u=root n=ansible | RUNNING HANDLER [common : Restart cron container] ******************************
2023-02-10 18:57:15,843 p=5577 u=root n=ansible | changed: [localhost]
2023-02-10 18:57:16,279 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_loadbalancer_True

2023-02-10 18:57:16,288 p=5577 u=root n=ansible | PLAY [Apply role loadbalancer] *************************************************
2023-02-10 18:57:16,288 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 18:57:16,289 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_collectd_True

2023-02-10 18:57:16,295 p=5577 u=root n=ansible | PLAY [Apply role collectd] *****************************************************
2023-02-10 18:57:16,296 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 18:57:16,297 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_influxdb_True

2023-02-10 18:57:16,303 p=5577 u=root n=ansible | PLAY [Apply role influxdb] *****************************************************
2023-02-10 18:57:16,303 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 18:57:16,304 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_telegraf_True

2023-02-10 18:57:16,309 p=5577 u=root n=ansible | PLAY [Apply role telegraf] *****************************************************
2023-02-10 18:57:16,310 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 18:57:16,311 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_redis_True

2023-02-10 18:57:16,316 p=5577 u=root n=ansible | PLAY [Apply role redis] ********************************************************
2023-02-10 18:57:16,316 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 18:57:16,318 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_mariadb_True

2023-02-10 18:57:16,319 p=5577 u=root n=ansible | PLAY [Apply role mariadb] ******************************************************
2023-02-10 18:57:16,320 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 18:57:16,321 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_memcached_True

2023-02-10 18:57:16,326 p=5577 u=root n=ansible | PLAY [Apply role memcached] ****************************************************
2023-02-10 18:57:16,326 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 18:57:16,332 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_prometheus_True

2023-02-10 18:57:16,337 p=5577 u=root n=ansible | PLAY [Apply role prometheus] ***************************************************
2023-02-10 18:57:16,338 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 18:57:16,339 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_iscsid_True

2023-02-10 18:57:16,344 p=5577 u=root n=ansible | PLAY [Apply role iscsi] ********************************************************
2023-02-10 18:57:16,345 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 18:57:16,346 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_multipathd_True

2023-02-10 18:57:16,351 p=5577 u=root n=ansible | PLAY [Apply role multipathd] ***************************************************
2023-02-10 18:57:16,351 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 18:57:16,356 p=5577 u=root n=ansible | PLAY [Apply role rabbitmq] *****************************************************
2023-02-10 18:57:16,538 p=5577 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-10 18:57:16,742 p=5577 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/deploy.yml for localhost
2023-02-10 18:57:16,862 p=5577 u=root n=ansible | TASK [rabbitmq : Ensuring config directories exist] ****************************
2023-02-10 18:57:17,615 p=5577 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-10 18:57:17,716 p=5577 u=root n=ansible | TASK [rabbitmq : Copying over config.json files for services] ******************
2023-02-10 18:57:19,022 p=5577 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-10 18:57:19,130 p=5577 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq-env.conf] *******************************
2023-02-10 18:57:20,614 p=5577 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq-env.conf.j2)
2023-02-10 18:57:20,746 p=5577 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq.conf] ***********************************
2023-02-10 18:57:22,529 p=5577 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq.conf.j2)
2023-02-10 18:57:22,694 p=5577 u=root n=ansible | TASK [rabbitmq : Copying over erl_inetrc] **************************************
2023-02-10 18:57:24,139 p=5577 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/erl_inetrc.j2)
2023-02-10 18:57:24,305 p=5577 u=root n=ansible | TASK [rabbitmq : Copying over advanced.config] *********************************
2023-02-10 18:57:26,028 p=5577 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/advanced.config.j2)
2023-02-10 18:57:26,141 p=5577 u=root n=ansible | TASK [rabbitmq : Copying over definitions.json] ********************************
2023-02-10 18:57:27,790 p=5577 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/definitions.json.j2)
2023-02-10 18:57:27,942 p=5577 u=root n=ansible | TASK [rabbitmq : Copying over enabled_plugins] *********************************
2023-02-10 18:57:29,275 p=5577 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/enabled_plugins.j2)
2023-02-10 18:57:29,433 p=5577 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-10 18:57:29,482 p=5577 u=root n=ansible | skipping: [localhost]
2023-02-10 18:57:29,587 p=5577 u=root n=ansible | TASK [rabbitmq : Check rabbitmq containers] ************************************
2023-02-10 18:57:30,825 p=5577 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-10 18:57:30,990 p=5577 u=root n=ansible | TASK [rabbitmq : Creating rabbitmq volume] *************************************
2023-02-10 18:57:32,099 p=5577 u=root n=ansible | changed: [localhost]
2023-02-10 18:57:32,201 p=5577 u=root n=ansible | TASK [rabbitmq : Running RabbitMQ bootstrap container] *************************
2023-02-10 18:57:34,338 p=5577 u=root n=ansible | changed: [localhost]
2023-02-10 18:57:34,437 p=5577 u=root n=ansible | TASK [rabbitmq : Flush handlers] ***********************************************
2023-02-10 18:57:34,437 p=5577 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart first rabbitmq container] ******************
2023-02-10 18:57:34,739 p=5577 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/restart_services.yml for localhost
2023-02-10 18:57:34,740 p=5577 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart rabbitmq container] ************************
2023-02-10 18:57:36,338 p=5577 u=root n=ansible | changed: [localhost]
2023-02-10 18:57:36,340 p=5577 u=root n=ansible | RUNNING HANDLER [rabbitmq : Waiting for rabbitmq to start] *********************
2023-02-10 18:57:52,752 p=5577 u=root n=ansible | changed: [localhost]
2023-02-10 18:57:52,754 p=5577 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart remaining rabbitmq containers] *************
2023-02-10 18:57:53,176 p=5577 u=root n=ansible | skipping: [localhost] => (item=localhost) 
2023-02-10 18:57:53,665 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_outward_rabbitmq_True

2023-02-10 18:57:53,669 p=5577 u=root n=ansible | PLAY [Apply role rabbitmq (outward)] *******************************************
2023-02-10 18:57:53,674 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 18:57:53,677 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_etcd_True

2023-02-10 18:57:53,693 p=5577 u=root n=ansible | PLAY [Apply role etcd] *********************************************************
2023-02-10 18:57:53,693 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 18:57:53,710 p=5577 u=root n=ansible | PLAY [Apply role keystone] *****************************************************
2023-02-10 18:57:54,022 p=5577 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-10 18:57:54,428 p=5577 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/deploy.yml for localhost
2023-02-10 18:57:54,602 p=5577 u=root n=ansible | TASK [keystone : Ensuring config directories exist] ****************************
2023-02-10 18:57:55,461 p=5577 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-10 18:57:55,959 p=5577 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-10 18:57:56,557 p=5577 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-10 18:57:56,735 p=5577 u=root n=ansible | TASK [keystone : Check if policies shall be overwritten] ***********************
2023-02-10 18:57:56,973 p=5577 u=root n=ansible | TASK [keystone : Set keystone policy file] *************************************
2023-02-10 18:57:57,031 p=5577 u=root n=ansible | skipping: [localhost]
2023-02-10 18:57:57,329 p=5577 u=root n=ansible | TASK [keystone : Check if Keystone domain-specific config is supplied] *********
2023-02-10 18:57:57,831 p=5577 u=root n=ansible | ok: [localhost]
2023-02-10 18:57:57,954 p=5577 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-10 18:57:58,006 p=5577 u=root n=ansible | skipping: [localhost]
2023-02-10 18:57:58,133 p=5577 u=root n=ansible | TASK [keystone : Copying over config.json files for services] ******************
2023-02-10 18:57:59,681 p=5577 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-10 18:58:00,761 p=5577 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-10 18:58:01,890 p=5577 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-10 18:58:02,046 p=5577 u=root n=ansible | TASK [keystone : Copying over keystone.conf] ***********************************
2023-02-10 18:58:04,068 p=5577 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-10 18:58:04,088 p=5577 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-10 18:58:05,910 p=5577 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-10 18:58:06,089 p=5577 u=root n=ansible | TASK [keystone : Copying keystone-startup script for keystone] *****************
2023-02-10 18:58:07,656 p=5577 u=root n=ansible | changed: [localhost]
2023-02-10 18:58:07,765 p=5577 u=root n=ansible | TASK [keystone : Create Keystone domain-specific config directory] *************
2023-02-10 18:58:08,234 p=5577 u=root n=ansible | skipping: [localhost]
2023-02-10 18:58:08,550 p=5577 u=root n=ansible | TASK [keystone : Get file list in custom domains folder] ***********************
2023-02-10 18:58:08,603 p=5577 u=root n=ansible | skipping: [localhost]
2023-02-10 18:58:08,767 p=5577 u=root n=ansible | TASK [keystone : Copying Keystone Domain specific settings] ********************
2023-02-10 18:58:08,993 p=5577 u=root n=ansible | TASK [keystone : Copying over existing policy file] ****************************
2023-02-10 18:58:09,354 p=5577 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}}) 
2023-02-10 18:58:09,372 p=5577 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-10 18:58:09,389 p=5577 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-10 18:58:09,514 p=5577 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-10 18:58:09,581 p=5577 u=root n=ansible | skipping: [localhost]
2023-02-10 18:58:09,708 p=5577 u=root n=ansible | TASK [keystone : Copying over wsgi-keystone.conf] ******************************
2023-02-10 18:58:11,603 p=5577 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/keystone/templates/wsgi-keystone.conf.j2)
2023-02-10 18:58:11,857 p=5577 u=root n=ansible | TASK [keystone : Checking whether keystone-paste.ini file exists] **************
2023-02-10 18:58:12,774 p=5577 u=root n=ansible | ok: [localhost]
2023-02-10 18:58:12,929 p=5577 u=root n=ansible | TASK [keystone : Copying over keystone-paste.ini] ******************************
2023-02-10 18:58:13,651 p=5577 u=root n=ansible | skipping: [localhost]
2023-02-10 18:58:13,889 p=5577 u=root n=ansible | TASK [keystone : Generate the required cron jobs for the node] *****************
2023-02-10 18:58:14,536 p=5577 u=root n=ansible | ok: [localhost]
2023-02-10 18:58:14,691 p=5577 u=root n=ansible | TASK [keystone : Set fact with the generated cron jobs for building the crontab later] ***
2023-02-10 18:58:14,799 p=5577 u=root n=ansible | ok: [localhost]
2023-02-10 18:58:14,972 p=5577 u=root n=ansible | TASK [keystone : Copying files for keystone-fernet] ****************************
2023-02-10 18:58:16,537 p=5577 u=root n=ansible | changed: [localhost] => (item={'src': 'crontab.j2', 'dest': 'crontab'})
2023-02-10 18:58:18,074 p=5577 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-rotate.sh.j2', 'dest': 'fernet-rotate.sh'})
2023-02-10 18:58:19,556 p=5577 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-node-sync.sh.j2', 'dest': 'fernet-node-sync.sh'})
2023-02-10 18:58:20,966 p=5577 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-push.sh.j2', 'dest': 'fernet-push.sh'})
2023-02-10 18:58:22,504 p=5577 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-healthcheck.sh.j2', 'dest': 'fernet-healthcheck.sh'})
2023-02-10 18:58:23,982 p=5577 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa', 'dest': 'id_rsa'})
2023-02-10 18:58:25,374 p=5577 u=root n=ansible | changed: [localhost] => (item={'src': 'ssh_config.j2', 'dest': 'ssh_config'})
2023-02-10 18:58:25,507 p=5577 u=root n=ansible | TASK [keystone : Copying files for keystone-ssh] *******************************
2023-02-10 18:58:27,239 p=5577 u=root n=ansible | changed: [localhost] => (item={'src': 'sshd_config.j2', 'dest': 'sshd_config'})
2023-02-10 18:58:28,973 p=5577 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa.pub', 'dest': 'id_rsa.pub'})
2023-02-10 18:58:29,101 p=5577 u=root n=ansible | TASK [keystone : Check keystone containers] ************************************
2023-02-10 18:58:30,425 p=5577 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-10 18:58:31,381 p=5577 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-10 18:58:32,397 p=5577 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-10 18:58:32,526 p=5577 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-10 18:58:32,588 p=5577 u=root n=ansible | skipping: [localhost]
2023-02-10 18:58:32,894 p=5577 u=root n=ansible | TASK [keystone : Creating keystone database] ***********************************
2023-02-10 18:58:37,817 p=5577 u=root n=ansible | changed: [localhost]
2023-02-10 18:58:38,177 p=5577 u=root n=ansible | TASK [keystone : Creating Keystone database user and setting permissions] ******
2023-02-10 18:58:42,522 p=5577 u=root n=ansible | changed: [localhost]
2023-02-10 18:58:42,705 p=5577 u=root n=ansible | TASK [keystone : Checking for any running keystone_fernet containers] **********
2023-02-10 18:58:44,389 p=5577 u=root n=ansible | ok: [localhost]
2023-02-10 18:58:44,568 p=5577 u=root n=ansible | TASK [keystone : Group nodes where keystone_fernet is running] *****************
2023-02-10 18:58:44,687 p=5577 u=root n=ansible | ok: [localhost]
2023-02-10 18:58:44,899 p=5577 u=root n=ansible | TASK [keystone : Fail if any hosts need bootstrapping and not all hosts targeted] ***
2023-02-10 18:58:45,021 p=5577 u=root n=ansible | skipping: [localhost]
2023-02-10 18:58:45,216 p=5577 u=root n=ansible | TASK [keystone : Running Keystone bootstrap container] *************************
2023-02-10 18:58:55,440 p=5577 u=root n=ansible | changed: [localhost]
2023-02-10 18:58:55,669 p=5577 u=root n=ansible | TASK [keystone : Running Keystone fernet bootstrap container] ******************
2023-02-10 18:59:03,452 p=5577 u=root n=ansible | changed: [localhost]
2023-02-10 18:59:03,558 p=5577 u=root n=ansible | TASK [keystone : Flush handlers] ***********************************************
2023-02-10 18:59:03,559 p=5577 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-ssh container] ********************
2023-02-10 18:59:05,925 p=5577 u=root n=ansible | changed: [localhost]
2023-02-10 18:59:05,928 p=5577 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-fernet container] *****************
2023-02-10 18:59:08,197 p=5577 u=root n=ansible | changed: [localhost]
2023-02-10 18:59:08,206 p=5577 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone container] ************************
2023-02-10 18:59:10,704 p=5577 u=root n=ansible | changed: [localhost]
2023-02-10 18:59:10,831 p=5577 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-10 18:59:10,979 p=5577 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/distribute_fernet.yml for localhost
2023-02-10 18:59:11,119 p=5577 u=root n=ansible | TASK [keystone : Waiting for Keystone SSH port to be UP] ***********************
2023-02-10 18:59:12,792 p=5577 u=root n=ansible | ok: [localhost]
2023-02-10 18:59:13,024 p=5577 u=root n=ansible | TASK [keystone : Run key distribution] *****************************************
2023-02-10 18:59:14,450 p=5577 u=root n=ansible | changed: [localhost]
2023-02-10 18:59:14,580 p=5577 u=root n=ansible | TASK [keystone : Creating admin project, user, role, service, and endpoint] ****
2023-02-10 18:59:23,426 p=5577 u=root n=ansible | changed: [localhost] => (item=RegionOne)
2023-02-10 18:59:23,566 p=5577 u=root n=ansible | TASK [service-ks-register : keystone | Creating services] **********************
2023-02-10 18:59:42,573 p=5577 u=root n=ansible | changed: [localhost] => (item={'name': 'keystone', 'service_type': 'identity'})
2023-02-10 18:59:42,778 p=5577 u=root n=ansible | TASK [service-ks-register : keystone | Creating endpoints] *********************
2023-02-10 18:59:49,820 p=5577 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.143:5000', 'interface': 'internal'})
2023-02-10 18:59:56,881 p=5577 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.143:5000', 'interface': 'public'})
2023-02-10 18:59:57,094 p=5577 u=root n=ansible | TASK [service-ks-register : keystone | Creating projects] **********************
2023-02-10 18:59:57,377 p=5577 u=root n=ansible | TASK [service-ks-register : keystone | Creating users] *************************
2023-02-10 18:59:57,620 p=5577 u=root n=ansible | TASK [service-ks-register : keystone | Creating roles] *************************
2023-02-10 18:59:57,880 p=5577 u=root n=ansible | TASK [service-ks-register : keystone | Granting user roles] ********************
2023-02-10 18:59:58,192 p=5577 u=root n=ansible | TASK [keystone : Creating default user role] ***********************************
2023-02-10 19:00:05,837 p=5577 u=root n=ansible | changed: [localhost]
2023-02-10 19:00:05,996 p=5577 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-10 19:00:06,086 p=5577 u=root n=ansible | skipping: [localhost]
2023-02-10 19:00:06,470 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_opensearch_True

2023-02-10 19:00:06,478 p=5577 u=root n=ansible | PLAY [Apply role opensearch] ***************************************************
2023-02-10 19:00:06,478 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,481 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_swift_True

2023-02-10 19:00:06,487 p=5577 u=root n=ansible | PLAY [Apply role swift] ********************************************************
2023-02-10 19:00:06,488 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,489 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_ceph_rgw_True

2023-02-10 19:00:06,494 p=5577 u=root n=ansible | PLAY [Apply role ceph-rgw] *****************************************************
2023-02-10 19:00:06,494 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,495 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_glance_True

2023-02-10 19:00:06,501 p=5577 u=root n=ansible | PLAY [Apply role glance] *******************************************************
2023-02-10 19:00:06,502 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,505 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_ironic_True

2023-02-10 19:00:06,511 p=5577 u=root n=ansible | PLAY [Apply role ironic] *******************************************************
2023-02-10 19:00:06,511 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,514 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_cinder_True

2023-02-10 19:00:06,519 p=5577 u=root n=ansible | PLAY [Apply role cinder] *******************************************************
2023-02-10 19:00:06,519 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,521 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_placement_True

2023-02-10 19:00:06,526 p=5577 u=root n=ansible | PLAY [Apply role placement] ****************************************************
2023-02-10 19:00:06,526 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,528 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_nova_True

2023-02-10 19:00:06,540 p=5577 u=root n=ansible | PLAY [Bootstrap nova API databases] ********************************************
2023-02-10 19:00:06,541 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,564 p=5577 u=root n=ansible | PLAY [Bootstrap nova cell databases] *******************************************
2023-02-10 19:00:06,564 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,583 p=5577 u=root n=ansible | PLAY [Apply role nova] *********************************************************
2023-02-10 19:00:06,583 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,605 p=5577 u=root n=ansible | PLAY [Apply role nova-cell] ****************************************************
2023-02-10 19:00:06,606 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,620 p=5577 u=root n=ansible | PLAY [Refresh nova scheduler cell cache] ***************************************
2023-02-10 19:00:06,621 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,636 p=5577 u=root n=ansible | PLAY [Reload global Nova super conductor services] *****************************
2023-02-10 19:00:06,637 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,652 p=5577 u=root n=ansible | PLAY [Reload Nova cell services] ***********************************************
2023-02-10 19:00:06,653 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,667 p=5577 u=root n=ansible | PLAY [Reload global Nova API services] *****************************************
2023-02-10 19:00:06,667 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,683 p=5577 u=root n=ansible | PLAY [Run Nova API online data migrations] *************************************
2023-02-10 19:00:06,683 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,696 p=5577 u=root n=ansible | PLAY [Run Nova cell online data migrations] ************************************
2023-02-10 19:00:06,697 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,703 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_openvswitch_True_enable_ovs_dpdk_False

2023-02-10 19:00:06,715 p=5577 u=root n=ansible | PLAY [Apply role openvswitch] **************************************************
2023-02-10 19:00:06,716 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,719 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_openvswitch_True_enable_ovs_dpdk_True

2023-02-10 19:00:06,734 p=5577 u=root n=ansible | PLAY [Apply role ovs-dpdk] *****************************************************
2023-02-10 19:00:06,735 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,740 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_ovn_True

2023-02-10 19:00:06,758 p=5577 u=root n=ansible | PLAY [Apply role ovn-db] *******************************************************
2023-02-10 19:00:06,759 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,774 p=5577 u=root n=ansible | PLAY [Apply role ovn-controller] ***********************************************
2023-02-10 19:00:06,776 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,787 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_neutron_True

2023-02-10 19:00:06,795 p=5577 u=root n=ansible | PLAY [Apply role neutron] ******************************************************
2023-02-10 19:00:06,795 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,797 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_kuryr_True

2023-02-10 19:00:06,810 p=5577 u=root n=ansible | PLAY [Apply role kuryr] ********************************************************
2023-02-10 19:00:06,810 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,812 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_hacluster_True

2023-02-10 19:00:06,819 p=5577 u=root n=ansible | PLAY [Apply role hacluster] ****************************************************
2023-02-10 19:00:06,819 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,823 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_heat_True

2023-02-10 19:00:06,830 p=5577 u=root n=ansible | PLAY [Apply role heat] *********************************************************
2023-02-10 19:00:06,830 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,832 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_horizon_True

2023-02-10 19:00:06,838 p=5577 u=root n=ansible | PLAY [Apply role horizon] ******************************************************
2023-02-10 19:00:06,839 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,841 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_murano_True

2023-02-10 19:00:06,849 p=5577 u=root n=ansible | PLAY [Apply role murano] *******************************************************
2023-02-10 19:00:06,849 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,853 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_solum_True

2023-02-10 19:00:06,859 p=5577 u=root n=ansible | PLAY [Apply role solum] ********************************************************
2023-02-10 19:00:06,860 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,862 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_magnum_True

2023-02-10 19:00:06,868 p=5577 u=root n=ansible | PLAY [Apply role magnum] *******************************************************
2023-02-10 19:00:06,869 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,873 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_mistral_True

2023-02-10 19:00:06,880 p=5577 u=root n=ansible | PLAY [Apply role mistral] ******************************************************
2023-02-10 19:00:06,880 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,883 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_sahara_True

2023-02-10 19:00:06,889 p=5577 u=root n=ansible | PLAY [Apply role sahara] *******************************************************
2023-02-10 19:00:06,889 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,892 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_manila_True

2023-02-10 19:00:06,900 p=5577 u=root n=ansible | PLAY [Apply role manila] *******************************************************
2023-02-10 19:00:06,901 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,903 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_gnocchi_True

2023-02-10 19:00:06,910 p=5577 u=root n=ansible | PLAY [Apply role gnocchi] ******************************************************
2023-02-10 19:00:06,910 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,914 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_ceilometer_True

2023-02-10 19:00:06,922 p=5577 u=root n=ansible | PLAY [Apply role ceilometer] ***************************************************
2023-02-10 19:00:06,922 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,925 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_aodh_True

2023-02-10 19:00:06,932 p=5577 u=root n=ansible | PLAY [Apply role aodh] *********************************************************
2023-02-10 19:00:06,932 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,935 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_barbican_True

2023-02-10 19:00:06,943 p=5577 u=root n=ansible | PLAY [Apply role barbican] *****************************************************
2023-02-10 19:00:06,944 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,947 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_cyborg_True

2023-02-10 19:00:06,953 p=5577 u=root n=ansible | PLAY [Apply role cyborg] *******************************************************
2023-02-10 19:00:06,953 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,958 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_designate_True

2023-02-10 19:00:06,965 p=5577 u=root n=ansible | PLAY [Apply role designate] ****************************************************
2023-02-10 19:00:06,965 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,969 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_trove_True

2023-02-10 19:00:06,979 p=5577 u=root n=ansible | PLAY [Apply role trove] ********************************************************
2023-02-10 19:00:06,979 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,982 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_watcher_True

2023-02-10 19:00:06,989 p=5577 u=root n=ansible | PLAY [Apply role watcher] ******************************************************
2023-02-10 19:00:06,990 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:06,992 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_grafana_True

2023-02-10 19:00:06,999 p=5577 u=root n=ansible | PLAY [Apply role grafana] ******************************************************
2023-02-10 19:00:06,999 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:07,002 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_cloudkitty_True

2023-02-10 19:00:07,008 p=5577 u=root n=ansible | PLAY [Apply role cloudkitty] ***************************************************
2023-02-10 19:00:07,008 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:07,011 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_freezer_True

2023-02-10 19:00:07,019 p=5577 u=root n=ansible | PLAY [Apply role freezer] ******************************************************
2023-02-10 19:00:07,019 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:07,023 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_senlin_True

2023-02-10 19:00:07,029 p=5577 u=root n=ansible | PLAY [Apply role senlin] *******************************************************
2023-02-10 19:00:07,029 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:07,032 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_tacker_True

2023-02-10 19:00:07,040 p=5577 u=root n=ansible | PLAY [Apply role tacker] *******************************************************
2023-02-10 19:00:07,040 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:07,044 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_octavia_True

2023-02-10 19:00:07,050 p=5577 u=root n=ansible | PLAY [Apply role octavia] ******************************************************
2023-02-10 19:00:07,050 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:07,053 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_zun_True

2023-02-10 19:00:07,060 p=5577 u=root n=ansible | PLAY [Apply role zun] **********************************************************
2023-02-10 19:00:07,060 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:07,064 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_skydive_True

2023-02-10 19:00:07,071 p=5577 u=root n=ansible | PLAY [Apply role skydive] ******************************************************
2023-02-10 19:00:07,071 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:07,074 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_vitrage_True

2023-02-10 19:00:07,082 p=5577 u=root n=ansible | PLAY [Apply role vitrage] ******************************************************
2023-02-10 19:00:07,082 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:07,084 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_blazar_True

2023-02-10 19:00:07,092 p=5577 u=root n=ansible | PLAY [Apply role blazar] *******************************************************
2023-02-10 19:00:07,093 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:07,097 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_masakari_True

2023-02-10 19:00:07,103 p=5577 u=root n=ansible | PLAY [Apply role masakari] *****************************************************
2023-02-10 19:00:07,104 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:07,106 p=5577 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_venus_True

2023-02-10 19:00:07,115 p=5577 u=root n=ansible | PLAY [Apply role venus] ********************************************************
2023-02-10 19:00:07,115 p=5577 u=root n=ansible | skipping: no hosts matched
2023-02-10 19:00:07,115 p=5577 u=root n=ansible | PLAY RECAP *********************************************************************
2023-02-10 19:00:07,116 p=5577 u=root n=ansible | localhost                  : ok=62   changed=43   unreachable=0    failed=0    skipped=24   rescued=0    ignored=0   
