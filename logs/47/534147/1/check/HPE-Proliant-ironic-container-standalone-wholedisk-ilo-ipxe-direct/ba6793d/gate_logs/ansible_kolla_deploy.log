2023-02-16 13:44:34,298 p=5998 u=root n=ansible | [WARNING]: Invalid characters were found in group names but not replaced, use
-vvvv to see details

2023-02-16 13:44:38,204 p=5998 u=root n=ansible | PLAY [Gather facts for all hosts] **********************************************
2023-02-16 13:44:38,492 p=5998 u=root n=ansible | TASK [Gather facts] ************************************************************
2023-02-16 13:44:40,752 p=5998 u=root n=ansible | ok: [localhost]
2023-02-16 13:44:40,837 p=5998 u=root n=ansible | TASK [Group hosts to determine when using --limit] *****************************
2023-02-16 13:44:40,916 p=5998 u=root n=ansible | ok: [localhost]
2023-02-16 13:44:41,087 p=5998 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
all_using_limit_True

2023-02-16 13:44:41,096 p=5998 u=root n=ansible | PLAY [Gather facts for all hosts (if using --limit)] ***************************
2023-02-16 13:44:41,097 p=5998 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:44:41,100 p=5998 u=root n=ansible | PLAY [Group hosts based on configuration] **************************************
2023-02-16 13:44:41,262 p=5998 u=root n=ansible | TASK [Group hosts based on Kolla action] ***************************************
2023-02-16 13:44:41,324 p=5998 u=root n=ansible | ok: [localhost]
2023-02-16 13:44:41,410 p=5998 u=root n=ansible | TASK [Group hosts based on enabled services] ***********************************
2023-02-16 13:44:41,600 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_aodh_False)
2023-02-16 13:44:41,616 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_barbican_False)
2023-02-16 13:44:41,630 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_blazar_False)
2023-02-16 13:44:41,645 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_ceilometer_False)
2023-02-16 13:44:41,659 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_ceph_rgw_False)
2023-02-16 13:44:41,673 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_cinder_False)
2023-02-16 13:44:41,686 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_cloudkitty_False)
2023-02-16 13:44:41,700 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_collectd_False)
2023-02-16 13:44:41,714 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_cyborg_False)
2023-02-16 13:44:41,730 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_designate_False)
2023-02-16 13:44:41,743 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_etcd_False)
2023-02-16 13:44:41,758 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_freezer_False)
2023-02-16 13:44:41,771 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_glance_False)
2023-02-16 13:44:41,785 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_gnocchi_False)
2023-02-16 13:44:41,800 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_grafana_False)
2023-02-16 13:44:41,814 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_hacluster_False)
2023-02-16 13:44:41,829 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_heat_False)
2023-02-16 13:44:41,844 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_horizon_False)
2023-02-16 13:44:41,857 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_influxdb_False)
2023-02-16 13:44:41,871 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_ironic_True)
2023-02-16 13:44:41,902 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_iscsid_False)
2023-02-16 13:44:41,932 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_keystone_True)
2023-02-16 13:44:41,951 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_kuryr_False)
2023-02-16 13:44:41,967 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_loadbalancer_False)
2023-02-16 13:44:41,982 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_magnum_False)
2023-02-16 13:44:41,999 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_manila_False)
2023-02-16 13:44:42,015 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_mariadb_False)
2023-02-16 13:44:42,033 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_masakari_False)
2023-02-16 13:44:42,049 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_memcached_False)
2023-02-16 13:44:42,067 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_mistral_False)
2023-02-16 13:44:42,084 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_multipathd_False)
2023-02-16 13:44:42,101 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_murano_False)
2023-02-16 13:44:42,118 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_neutron_True)
2023-02-16 13:44:42,136 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_nova_False)
2023-02-16 13:44:42,153 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_octavia_False)
2023-02-16 13:44:42,179 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_False)
2023-02-16 13:44:42,213 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_dashboards_False)
2023-02-16 13:44:42,236 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_openvswitch_False_enable_ovs_dpdk_False)
2023-02-16 13:44:42,250 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_outward_rabbitmq_False)
2023-02-16 13:44:42,269 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_ovn_False)
2023-02-16 13:44:42,284 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_placement_False)
2023-02-16 13:44:42,302 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_prometheus_False)
2023-02-16 13:44:42,327 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_rabbitmq_True)
2023-02-16 13:44:42,347 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_redis_False)
2023-02-16 13:44:42,379 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_sahara_False)
2023-02-16 13:44:42,414 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_senlin_False)
2023-02-16 13:44:42,434 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_skydive_False)
2023-02-16 13:44:42,454 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_solum_False)
2023-02-16 13:44:42,474 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_swift_False)
2023-02-16 13:44:42,496 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_tacker_False)
2023-02-16 13:44:42,515 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_telegraf_False)
2023-02-16 13:44:42,537 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_trove_False)
2023-02-16 13:44:42,560 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_venus_False)
2023-02-16 13:44:42,580 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_vitrage_False)
2023-02-16 13:44:42,599 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_watcher_False)
2023-02-16 13:44:42,615 p=5998 u=root n=ansible | ok: [localhost] => (item=enable_zun_False)
2023-02-16 13:44:42,927 p=5998 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
kolla_action_precheck

2023-02-16 13:44:42,929 p=5998 u=root n=ansible | PLAY [Apply role prechecks] ****************************************************
2023-02-16 13:44:42,930 p=5998 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:44:42,944 p=5998 u=root n=ansible | PLAY [Apply role common] *******************************************************
2023-02-16 13:44:43,135 p=5998 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-16 13:44:43,349 p=5998 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/common/tasks/deploy.yml for localhost
2023-02-16 13:44:43,454 p=5998 u=root n=ansible | TASK [common : Ensuring config directories exist] ******************************
2023-02-16 13:44:44,445 p=5998 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'cron'}, 'cron'])
2023-02-16 13:44:44,509 p=5998 u=root n=ansible | skipping: [localhost] => (item=[{'service_name': 'fluentd'}, 'fluentd']) 
2023-02-16 13:44:45,014 p=5998 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'kolla-toolbox'}, 'kolla-toolbox'])
2023-02-16 13:44:45,116 p=5998 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-16 13:44:45,159 p=5998 u=root n=ansible | skipping: [localhost]
2023-02-16 13:44:45,264 p=5998 u=root n=ansible | TASK [common : Copying over config.json files for services] ********************
2023-02-16 13:44:45,382 p=5998 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-16 13:44:47,053 p=5998 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-16 13:44:48,116 p=5998 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-16 13:44:48,320 p=5998 u=root n=ansible | TASK [common : Find custom fluentd input config files] *************************
2023-02-16 13:44:48,436 p=5998 u=root n=ansible | skipping: [localhost]
2023-02-16 13:44:48,633 p=5998 u=root n=ansible | TASK [common : Find custom fluentd filter config files] ************************
2023-02-16 13:44:48,741 p=5998 u=root n=ansible | skipping: [localhost]
2023-02-16 13:44:48,931 p=5998 u=root n=ansible | TASK [common : Find custom fluentd format config files] ************************
2023-02-16 13:44:49,033 p=5998 u=root n=ansible | skipping: [localhost]
2023-02-16 13:44:49,248 p=5998 u=root n=ansible | TASK [common : Find custom fluentd output config files] ************************
2023-02-16 13:44:49,398 p=5998 u=root n=ansible | skipping: [localhost]
2023-02-16 13:44:49,561 p=5998 u=root n=ansible | TASK [common : Copying over td-agent.conf] *************************************
2023-02-16 13:44:49,745 p=5998 u=root n=ansible | skipping: [localhost]
2023-02-16 13:44:49,914 p=5998 u=root n=ansible | TASK [common : Copying over cron logrotate config file] ************************
2023-02-16 13:44:51,248 p=5998 u=root n=ansible | changed: [localhost]
2023-02-16 13:44:51,464 p=5998 u=root n=ansible | TASK [common : Ensure RabbitMQ Erlang cookie exists] ***************************
2023-02-16 13:44:52,622 p=5998 u=root n=ansible | changed: [localhost]
2023-02-16 13:44:52,734 p=5998 u=root n=ansible | TASK [common : Ensuring config directories have correct owner and permission] ***
2023-02-16 13:44:52,873 p=5998 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-16 13:44:52,898 p=5998 u=root n=ansible | skipping: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-16 13:44:53,370 p=5998 u=root n=ansible | ok: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-16 13:44:53,497 p=5998 u=root n=ansible | TASK [common : Copy rabbitmq-env.conf to kolla toolbox] ************************
2023-02-16 13:44:54,870 p=5998 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/rabbitmq-env.conf.j2)
2023-02-16 13:44:55,002 p=5998 u=root n=ansible | TASK [common : Copy rabbitmq erl_inetrc to kolla toolbox] **********************
2023-02-16 13:44:56,102 p=5998 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/erl_inetrc.j2)
2023-02-16 13:44:56,207 p=5998 u=root n=ansible | TASK [common : Check common containers] ****************************************
2023-02-16 13:44:56,318 p=5998 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-16 13:44:58,102 p=5998 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-16 13:44:59,115 p=5998 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-16 13:44:59,225 p=5998 u=root n=ansible | TASK [common : Creating log volume] ********************************************
2023-02-16 13:45:00,289 p=5998 u=root n=ansible | changed: [localhost]
2023-02-16 13:45:00,457 p=5998 u=root n=ansible | TASK [common : Link kolla_logs volume to /var/log/kolla] ***********************
2023-02-16 13:45:01,069 p=5998 u=root n=ansible | changed: [localhost]
2023-02-16 13:45:01,171 p=5998 u=root n=ansible | TASK [common : Flush handlers] *************************************************
2023-02-16 13:45:01,172 p=5998 u=root n=ansible | RUNNING HANDLER [common : Restart kolla-toolbox container] *********************
2023-02-16 13:45:03,781 p=5998 u=root n=ansible | changed: [localhost]
2023-02-16 13:45:03,783 p=5998 u=root n=ansible | RUNNING HANDLER [common : Initializing toolbox container using normal user] ****
2023-02-16 13:45:08,482 p=5998 u=root n=ansible | ok: [localhost]
2023-02-16 13:45:08,484 p=5998 u=root n=ansible | RUNNING HANDLER [common : Restart cron container] ******************************
2023-02-16 13:45:10,144 p=5998 u=root n=ansible | changed: [localhost]
2023-02-16 13:45:10,505 p=5998 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_loadbalancer_True

2023-02-16 13:45:10,514 p=5998 u=root n=ansible | PLAY [Apply role loadbalancer] *************************************************
2023-02-16 13:45:10,515 p=5998 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:45:10,516 p=5998 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_collectd_True

2023-02-16 13:45:10,522 p=5998 u=root n=ansible | PLAY [Apply role collectd] *****************************************************
2023-02-16 13:45:10,522 p=5998 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:45:10,524 p=5998 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_influxdb_True

2023-02-16 13:45:10,529 p=5998 u=root n=ansible | PLAY [Apply role influxdb] *****************************************************
2023-02-16 13:45:10,529 p=5998 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:45:10,530 p=5998 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_telegraf_True

2023-02-16 13:45:10,536 p=5998 u=root n=ansible | PLAY [Apply role telegraf] *****************************************************
2023-02-16 13:45:10,536 p=5998 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:45:10,538 p=5998 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_redis_True

2023-02-16 13:45:10,542 p=5998 u=root n=ansible | PLAY [Apply role redis] ********************************************************
2023-02-16 13:45:10,542 p=5998 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:45:10,544 p=5998 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_mariadb_True

2023-02-16 13:45:10,545 p=5998 u=root n=ansible | PLAY [Apply role mariadb] ******************************************************
2023-02-16 13:45:10,546 p=5998 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:45:10,547 p=5998 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_memcached_True

2023-02-16 13:45:10,551 p=5998 u=root n=ansible | PLAY [Apply role memcached] ****************************************************
2023-02-16 13:45:10,551 p=5998 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:45:10,557 p=5998 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_prometheus_True

2023-02-16 13:45:10,562 p=5998 u=root n=ansible | PLAY [Apply role prometheus] ***************************************************
2023-02-16 13:45:10,562 p=5998 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:45:10,563 p=5998 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_iscsid_True

2023-02-16 13:45:10,569 p=5998 u=root n=ansible | PLAY [Apply role iscsi] ********************************************************
2023-02-16 13:45:10,569 p=5998 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:45:10,570 p=5998 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_multipathd_True

2023-02-16 13:45:10,575 p=5998 u=root n=ansible | PLAY [Apply role multipathd] ***************************************************
2023-02-16 13:45:10,576 p=5998 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:45:10,580 p=5998 u=root n=ansible | PLAY [Apply role rabbitmq] *****************************************************
2023-02-16 13:45:10,782 p=5998 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-16 13:45:10,987 p=5998 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/deploy.yml for localhost
2023-02-16 13:45:11,104 p=5998 u=root n=ansible | TASK [rabbitmq : Ensuring config directories exist] ****************************
2023-02-16 13:45:11,826 p=5998 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-16 13:45:11,998 p=5998 u=root n=ansible | TASK [rabbitmq : Copying over config.json files for services] ******************
2023-02-16 13:45:13,050 p=5998 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-16 13:45:13,155 p=5998 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq-env.conf] *******************************
2023-02-16 13:45:14,424 p=5998 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq-env.conf.j2)
2023-02-16 13:45:14,529 p=5998 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq.conf] ***********************************
2023-02-16 13:45:15,980 p=5998 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq.conf.j2)
2023-02-16 13:45:16,085 p=5998 u=root n=ansible | TASK [rabbitmq : Copying over erl_inetrc] **************************************
2023-02-16 13:45:17,216 p=5998 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/erl_inetrc.j2)
2023-02-16 13:45:17,318 p=5998 u=root n=ansible | TASK [rabbitmq : Copying over advanced.config] *********************************
2023-02-16 13:45:18,568 p=5998 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/advanced.config.j2)
2023-02-16 13:45:18,703 p=5998 u=root n=ansible | TASK [rabbitmq : Copying over definitions.json] ********************************
2023-02-16 13:45:20,076 p=5998 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/definitions.json.j2)
2023-02-16 13:45:20,196 p=5998 u=root n=ansible | TASK [rabbitmq : Copying over enabled_plugins] *********************************
2023-02-16 13:45:21,586 p=5998 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/enabled_plugins.j2)
2023-02-16 13:45:21,721 p=5998 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-16 13:45:21,764 p=5998 u=root n=ansible | skipping: [localhost]
2023-02-16 13:45:21,868 p=5998 u=root n=ansible | TASK [rabbitmq : Check rabbitmq containers] ************************************
2023-02-16 13:45:22,935 p=5998 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-16 13:45:23,070 p=5998 u=root n=ansible | TASK [rabbitmq : Creating rabbitmq volume] *************************************
2023-02-16 13:45:24,459 p=5998 u=root n=ansible | changed: [localhost]
2023-02-16 13:45:24,600 p=5998 u=root n=ansible | TASK [rabbitmq : Running RabbitMQ bootstrap container] *************************
2023-02-16 13:45:26,883 p=5998 u=root n=ansible | changed: [localhost]
2023-02-16 13:45:27,008 p=5998 u=root n=ansible | TASK [rabbitmq : Flush handlers] ***********************************************
2023-02-16 13:45:27,009 p=5998 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart first rabbitmq container] ******************
2023-02-16 13:45:27,361 p=5998 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/restart_services.yml for localhost
2023-02-16 13:45:27,362 p=5998 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart rabbitmq container] ************************
2023-02-16 13:45:29,057 p=5998 u=root n=ansible | changed: [localhost]
2023-02-16 13:45:29,059 p=5998 u=root n=ansible | RUNNING HANDLER [rabbitmq : Waiting for rabbitmq to start] *********************
2023-02-16 13:45:46,197 p=5998 u=root n=ansible | changed: [localhost]
2023-02-16 13:45:46,200 p=5998 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart remaining rabbitmq containers] *************
2023-02-16 13:45:46,490 p=5998 u=root n=ansible | skipping: [localhost] => (item=localhost) 
2023-02-16 13:45:46,866 p=5998 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_outward_rabbitmq_True

2023-02-16 13:45:46,869 p=5998 u=root n=ansible | PLAY [Apply role rabbitmq (outward)] *******************************************
2023-02-16 13:45:46,869 p=5998 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:45:46,871 p=5998 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_etcd_True

2023-02-16 13:45:46,883 p=5998 u=root n=ansible | PLAY [Apply role etcd] *********************************************************
2023-02-16 13:45:46,884 p=5998 u=root n=ansible | skipping: no hosts matched
2023-02-16 13:45:46,898 p=5998 u=root n=ansible | PLAY [Apply role keystone] *****************************************************
2023-02-16 13:45:47,109 p=5998 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-16 13:45:47,384 p=5998 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/deploy.yml for localhost
2023-02-16 13:45:47,501 p=5998 u=root n=ansible | TASK [keystone : Ensuring config directories exist] ****************************
2023-02-16 13:45:48,291 p=5998 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-16 13:45:48,767 p=5998 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-16 13:45:49,207 p=5998 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-16 13:45:49,347 p=5998 u=root n=ansible | TASK [keystone : Check if policies shall be overwritten] ***********************
2023-02-16 13:45:49,543 p=5998 u=root n=ansible | TASK [keystone : Set keystone policy file] *************************************
2023-02-16 13:45:49,585 p=5998 u=root n=ansible | skipping: [localhost]
2023-02-16 13:45:49,805 p=5998 u=root n=ansible | TASK [keystone : Check if Keystone domain-specific config is supplied] *********
2023-02-16 13:45:50,353 p=5998 u=root n=ansible | ok: [localhost]
2023-02-16 13:45:50,462 p=5998 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-16 13:45:50,524 p=5998 u=root n=ansible | skipping: [localhost]
2023-02-16 13:45:50,636 p=5998 u=root n=ansible | TASK [keystone : Copying over config.json files for services] ******************
2023-02-16 13:45:52,070 p=5998 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-16 13:45:53,285 p=5998 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-16 13:45:54,478 p=5998 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-16 13:45:54,668 p=5998 u=root n=ansible | TASK [keystone : Copying over keystone.conf] ***********************************
2023-02-16 13:45:56,565 p=5998 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-16 13:45:56,580 p=5998 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-16 13:45:58,240 p=5998 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-16 13:45:58,381 p=5998 u=root n=ansible | TASK [keystone : Copying keystone-startup script for keystone] *****************
2023-02-16 13:46:00,248 p=5998 u=root n=ansible | changed: [localhost]
2023-02-16 13:46:00,362 p=5998 u=root n=ansible | TASK [keystone : Create Keystone domain-specific config directory] *************
2023-02-16 13:46:00,895 p=5998 u=root n=ansible | skipping: [localhost]
2023-02-16 13:46:01,190 p=5998 u=root n=ansible | TASK [keystone : Get file list in custom domains folder] ***********************
2023-02-16 13:46:01,228 p=5998 u=root n=ansible | skipping: [localhost]
2023-02-16 13:46:01,328 p=5998 u=root n=ansible | TASK [keystone : Copying Keystone Domain specific settings] ********************
2023-02-16 13:46:01,470 p=5998 u=root n=ansible | TASK [keystone : Copying over existing policy file] ****************************
2023-02-16 13:46:01,754 p=5998 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}}) 
2023-02-16 13:46:01,761 p=5998 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-16 13:46:01,782 p=5998 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-16 13:46:01,881 p=5998 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-16 13:46:01,936 p=5998 u=root n=ansible | skipping: [localhost]
2023-02-16 13:46:02,036 p=5998 u=root n=ansible | TASK [keystone : Copying over wsgi-keystone.conf] ******************************
2023-02-16 13:46:03,753 p=5998 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/keystone/templates/wsgi-keystone.conf.j2)
2023-02-16 13:46:03,947 p=5998 u=root n=ansible | TASK [keystone : Checking whether keystone-paste.ini file exists] **************
2023-02-16 13:46:04,678 p=5998 u=root n=ansible | ok: [localhost]
2023-02-16 13:46:04,782 p=5998 u=root n=ansible | TASK [keystone : Copying over keystone-paste.ini] ******************************
2023-02-16 13:46:05,240 p=5998 u=root n=ansible | skipping: [localhost]
2023-02-16 13:46:05,441 p=5998 u=root n=ansible | TASK [keystone : Generate the required cron jobs for the node] *****************
2023-02-16 13:46:06,015 p=5998 u=root n=ansible | ok: [localhost]
2023-02-16 13:46:06,116 p=5998 u=root n=ansible | TASK [keystone : Set fact with the generated cron jobs for building the crontab later] ***
2023-02-16 13:46:06,211 p=5998 u=root n=ansible | ok: [localhost]
2023-02-16 13:46:06,374 p=5998 u=root n=ansible | TASK [keystone : Copying files for keystone-fernet] ****************************
2023-02-16 13:46:07,929 p=5998 u=root n=ansible | changed: [localhost] => (item={'src': 'crontab.j2', 'dest': 'crontab'})
2023-02-16 13:46:09,403 p=5998 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-rotate.sh.j2', 'dest': 'fernet-rotate.sh'})
2023-02-16 13:46:10,837 p=5998 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-node-sync.sh.j2', 'dest': 'fernet-node-sync.sh'})
2023-02-16 13:46:12,577 p=5998 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-push.sh.j2', 'dest': 'fernet-push.sh'})
2023-02-16 13:46:14,225 p=5998 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-healthcheck.sh.j2', 'dest': 'fernet-healthcheck.sh'})
2023-02-16 13:46:15,673 p=5998 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa', 'dest': 'id_rsa'})
2023-02-16 13:46:17,323 p=5998 u=root n=ansible | changed: [localhost] => (item={'src': 'ssh_config.j2', 'dest': 'ssh_config'})
2023-02-16 13:46:17,436 p=5998 u=root n=ansible | TASK [keystone : Copying files for keystone-ssh] *******************************
2023-02-16 13:46:19,104 p=5998 u=root n=ansible | changed: [localhost] => (item={'src': 'sshd_config.j2', 'dest': 'sshd_config'})
2023-02-16 13:46:20,630 p=5998 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa.pub', 'dest': 'id_rsa.pub'})
2023-02-16 13:46:20,749 p=5998 u=root n=ansible | TASK [keystone : Check keystone containers] ************************************
2023-02-16 13:46:22,113 p=5998 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-16 13:46:23,277 p=5998 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-16 13:46:24,288 p=5998 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-16 13:46:24,393 p=5998 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-16 13:46:24,447 p=5998 u=root n=ansible | skipping: [localhost]
2023-02-16 13:46:24,650 p=5998 u=root n=ansible | TASK [keystone : Creating keystone database] ***********************************
2023-02-16 13:46:29,701 p=5998 u=root n=ansible | changed: [localhost]
2023-02-16 13:46:29,950 p=5998 u=root n=ansible | TASK [keystone : Creating Keystone database user and setting permissions] ******
2023-02-16 13:46:34,141 p=5998 u=root n=ansible | changed: [localhost]
2023-02-16 13:46:34,255 p=5998 u=root n=ansible | TASK [keystone : Checking for any running keystone_fernet containers] **********
