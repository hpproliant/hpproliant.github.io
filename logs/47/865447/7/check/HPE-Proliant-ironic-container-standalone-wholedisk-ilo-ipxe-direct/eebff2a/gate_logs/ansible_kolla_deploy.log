2023-02-15 15:36:32,517 p=6014 u=root n=ansible | [WARNING]: Invalid characters were found in group names but not replaced, use
-vvvv to see details

2023-02-15 15:36:36,082 p=6014 u=root n=ansible | PLAY [Gather facts for all hosts] **********************************************
2023-02-15 15:36:36,382 p=6014 u=root n=ansible | TASK [Gather facts] ************************************************************
2023-02-15 15:36:38,733 p=6014 u=root n=ansible | ok: [localhost]
2023-02-15 15:36:38,869 p=6014 u=root n=ansible | TASK [Group hosts to determine when using --limit] *****************************
2023-02-15 15:36:38,954 p=6014 u=root n=ansible | ok: [localhost]
2023-02-15 15:36:39,184 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
all_using_limit_True

2023-02-15 15:36:39,193 p=6014 u=root n=ansible | PLAY [Gather facts for all hosts (if using --limit)] ***************************
2023-02-15 15:36:39,193 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:39,196 p=6014 u=root n=ansible | PLAY [Group hosts based on configuration] **************************************
2023-02-15 15:36:39,361 p=6014 u=root n=ansible | TASK [Group hosts based on Kolla action] ***************************************
2023-02-15 15:36:39,425 p=6014 u=root n=ansible | ok: [localhost]
2023-02-15 15:36:39,517 p=6014 u=root n=ansible | TASK [Group hosts based on enabled services] ***********************************
2023-02-15 15:36:39,777 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_aodh_False)
2023-02-15 15:36:39,796 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_barbican_False)
2023-02-15 15:36:39,814 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_blazar_False)
2023-02-15 15:36:39,838 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_ceilometer_False)
2023-02-15 15:36:39,854 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_ceph_rgw_False)
2023-02-15 15:36:39,868 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_cinder_False)
2023-02-15 15:36:39,885 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_cloudkitty_False)
2023-02-15 15:36:39,898 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_collectd_False)
2023-02-15 15:36:39,915 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_cyborg_False)
2023-02-15 15:36:39,932 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_designate_False)
2023-02-15 15:36:39,949 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_etcd_False)
2023-02-15 15:36:39,981 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_freezer_False)
2023-02-15 15:36:39,999 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_glance_False)
2023-02-15 15:36:40,012 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_gnocchi_False)
2023-02-15 15:36:40,026 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_grafana_False)
2023-02-15 15:36:40,040 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_hacluster_False)
2023-02-15 15:36:40,052 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_heat_False)
2023-02-15 15:36:40,066 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_horizon_False)
2023-02-15 15:36:40,080 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_influxdb_False)
2023-02-15 15:36:40,097 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_ironic_True)
2023-02-15 15:36:40,114 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_iscsid_False)
2023-02-15 15:36:40,130 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_keystone_True)
2023-02-15 15:36:40,144 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_kuryr_False)
2023-02-15 15:36:40,159 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_loadbalancer_False)
2023-02-15 15:36:40,174 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_magnum_False)
2023-02-15 15:36:40,189 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_manila_False)
2023-02-15 15:36:40,202 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_mariadb_False)
2023-02-15 15:36:40,217 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_masakari_False)
2023-02-15 15:36:40,232 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_memcached_False)
2023-02-15 15:36:40,247 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_mistral_False)
2023-02-15 15:36:40,261 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_multipathd_False)
2023-02-15 15:36:40,277 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_murano_False)
2023-02-15 15:36:40,291 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_neutron_True)
2023-02-15 15:36:40,306 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_nova_False)
2023-02-15 15:36:40,321 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_octavia_False)
2023-02-15 15:36:40,336 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_False)
2023-02-15 15:36:40,351 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_dashboards_False)
2023-02-15 15:36:40,366 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_openvswitch_True_enable_ovs_dpdk_False)
2023-02-15 15:36:40,380 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_outward_rabbitmq_False)
2023-02-15 15:36:40,395 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_ovn_False)
2023-02-15 15:36:40,409 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_placement_False)
2023-02-15 15:36:40,424 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_prometheus_False)
2023-02-15 15:36:40,438 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_rabbitmq_True)
2023-02-15 15:36:40,454 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_redis_False)
2023-02-15 15:36:40,468 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_sahara_False)
2023-02-15 15:36:40,485 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_senlin_False)
2023-02-15 15:36:40,499 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_skydive_False)
2023-02-15 15:36:40,514 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_solum_False)
2023-02-15 15:36:40,530 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_swift_False)
2023-02-15 15:36:40,546 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_tacker_False)
2023-02-15 15:36:40,562 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_telegraf_False)
2023-02-15 15:36:40,578 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_trove_False)
2023-02-15 15:36:40,594 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_venus_False)
2023-02-15 15:36:40,611 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_vitrage_False)
2023-02-15 15:36:40,627 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_watcher_False)
2023-02-15 15:36:40,638 p=6014 u=root n=ansible | ok: [localhost] => (item=enable_zun_False)
2023-02-15 15:36:40,956 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
kolla_action_precheck

2023-02-15 15:36:40,958 p=6014 u=root n=ansible | PLAY [Apply role prechecks] ****************************************************
2023-02-15 15:36:40,958 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:40,974 p=6014 u=root n=ansible | PLAY [Apply role common] *******************************************************
2023-02-15 15:36:41,193 p=6014 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-15 15:36:41,408 p=6014 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/common/tasks/deploy.yml for localhost
2023-02-15 15:36:41,511 p=6014 u=root n=ansible | TASK [common : Ensuring config directories exist] ******************************
2023-02-15 15:36:42,617 p=6014 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'cron'}, 'cron'])
2023-02-15 15:36:42,702 p=6014 u=root n=ansible | skipping: [localhost] => (item=[{'service_name': 'fluentd'}, 'fluentd']) 
2023-02-15 15:36:43,185 p=6014 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'kolla-toolbox'}, 'kolla-toolbox'])
2023-02-15 15:36:43,288 p=6014 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-15 15:36:43,332 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:43,463 p=6014 u=root n=ansible | TASK [common : Copying over config.json files for services] ********************
2023-02-15 15:36:43,602 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:36:45,425 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:36:46,627 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:36:46,866 p=6014 u=root n=ansible | TASK [common : Find custom fluentd input config files] *************************
2023-02-15 15:36:47,034 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:47,323 p=6014 u=root n=ansible | TASK [common : Find custom fluentd filter config files] ************************
2023-02-15 15:36:47,424 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:47,625 p=6014 u=root n=ansible | TASK [common : Find custom fluentd format config files] ************************
2023-02-15 15:36:47,727 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:47,944 p=6014 u=root n=ansible | TASK [common : Find custom fluentd output config files] ************************
2023-02-15 15:36:48,056 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:48,163 p=6014 u=root n=ansible | TASK [common : Copying over td-agent.conf] *************************************
2023-02-15 15:36:48,302 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:48,415 p=6014 u=root n=ansible | TASK [common : Copying over cron logrotate config file] ************************
2023-02-15 15:36:50,033 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:36:50,206 p=6014 u=root n=ansible | TASK [common : Ensure RabbitMQ Erlang cookie exists] ***************************
2023-02-15 15:36:51,375 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:36:51,524 p=6014 u=root n=ansible | TASK [common : Ensuring config directories have correct owner and permission] ***
2023-02-15 15:36:51,717 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:36:51,749 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:36:52,341 p=6014 u=root n=ansible | ok: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:36:52,521 p=6014 u=root n=ansible | TASK [common : Copy rabbitmq-env.conf to kolla toolbox] ************************
2023-02-15 15:36:54,050 p=6014 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/rabbitmq-env.conf.j2)
2023-02-15 15:36:54,152 p=6014 u=root n=ansible | TASK [common : Copy rabbitmq erl_inetrc to kolla toolbox] **********************
2023-02-15 15:36:55,301 p=6014 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/erl_inetrc.j2)
2023-02-15 15:36:55,412 p=6014 u=root n=ansible | TASK [common : Check common containers] ****************************************
2023-02-15 15:36:55,532 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:36:57,291 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:36:58,261 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:36:58,366 p=6014 u=root n=ansible | TASK [common : Creating log volume] ********************************************
2023-02-15 15:36:59,562 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:36:59,666 p=6014 u=root n=ansible | TASK [common : Link kolla_logs volume to /var/log/kolla] ***********************
2023-02-15 15:37:00,242 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:00,369 p=6014 u=root n=ansible | TASK [common : Flush handlers] *************************************************
2023-02-15 15:37:00,369 p=6014 u=root n=ansible | RUNNING HANDLER [common : Restart kolla-toolbox container] *********************
2023-02-15 15:37:03,226 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:03,230 p=6014 u=root n=ansible | RUNNING HANDLER [common : Initializing toolbox container using normal user] ****
2023-02-15 15:37:07,744 p=6014 u=root n=ansible | ok: [localhost]
2023-02-15 15:37:07,746 p=6014 u=root n=ansible | RUNNING HANDLER [common : Restart cron container] ******************************
2023-02-15 15:37:09,734 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:10,118 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_loadbalancer_True

2023-02-15 15:37:10,127 p=6014 u=root n=ansible | PLAY [Apply role loadbalancer] *************************************************
2023-02-15 15:37:10,127 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:10,131 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_collectd_True

2023-02-15 15:37:10,138 p=6014 u=root n=ansible | PLAY [Apply role collectd] *****************************************************
2023-02-15 15:37:10,138 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:10,140 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_influxdb_True

2023-02-15 15:37:10,146 p=6014 u=root n=ansible | PLAY [Apply role influxdb] *****************************************************
2023-02-15 15:37:10,146 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:10,148 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_telegraf_True

2023-02-15 15:37:10,153 p=6014 u=root n=ansible | PLAY [Apply role telegraf] *****************************************************
2023-02-15 15:37:10,153 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:10,155 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_redis_True

2023-02-15 15:37:10,160 p=6014 u=root n=ansible | PLAY [Apply role redis] ********************************************************
2023-02-15 15:37:10,160 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:10,162 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_mariadb_True

2023-02-15 15:37:10,165 p=6014 u=root n=ansible | PLAY [Apply role mariadb] ******************************************************
2023-02-15 15:37:10,165 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:10,167 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_memcached_True

2023-02-15 15:37:10,171 p=6014 u=root n=ansible | PLAY [Apply role memcached] ****************************************************
2023-02-15 15:37:10,172 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:10,177 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_prometheus_True

2023-02-15 15:37:10,183 p=6014 u=root n=ansible | PLAY [Apply role prometheus] ***************************************************
2023-02-15 15:37:10,183 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:10,185 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_iscsid_True

2023-02-15 15:37:10,189 p=6014 u=root n=ansible | PLAY [Apply role iscsi] ********************************************************
2023-02-15 15:37:10,190 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:10,191 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_multipathd_True

2023-02-15 15:37:10,196 p=6014 u=root n=ansible | PLAY [Apply role multipathd] ***************************************************
2023-02-15 15:37:10,197 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:10,201 p=6014 u=root n=ansible | PLAY [Apply role rabbitmq] *****************************************************
2023-02-15 15:37:10,396 p=6014 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-15 15:37:10,595 p=6014 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/deploy.yml for localhost
2023-02-15 15:37:10,701 p=6014 u=root n=ansible | TASK [rabbitmq : Ensuring config directories exist] ****************************
2023-02-15 15:37:11,310 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 15:37:11,420 p=6014 u=root n=ansible | TASK [rabbitmq : Copying over config.json files for services] ******************
2023-02-15 15:37:12,508 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 15:37:12,641 p=6014 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq-env.conf] *******************************
2023-02-15 15:37:14,084 p=6014 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq-env.conf.j2)
2023-02-15 15:37:14,192 p=6014 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq.conf] ***********************************
2023-02-15 15:37:15,781 p=6014 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq.conf.j2)
2023-02-15 15:37:15,926 p=6014 u=root n=ansible | TASK [rabbitmq : Copying over erl_inetrc] **************************************
2023-02-15 15:37:17,220 p=6014 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/erl_inetrc.j2)
2023-02-15 15:37:17,331 p=6014 u=root n=ansible | TASK [rabbitmq : Copying over advanced.config] *********************************
2023-02-15 15:37:18,577 p=6014 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/advanced.config.j2)
2023-02-15 15:37:18,681 p=6014 u=root n=ansible | TASK [rabbitmq : Copying over definitions.json] ********************************
2023-02-15 15:37:19,950 p=6014 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/definitions.json.j2)
2023-02-15 15:37:20,059 p=6014 u=root n=ansible | TASK [rabbitmq : Copying over enabled_plugins] *********************************
2023-02-15 15:37:21,327 p=6014 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/enabled_plugins.j2)
2023-02-15 15:37:21,436 p=6014 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-15 15:37:21,483 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:37:21,587 p=6014 u=root n=ansible | TASK [rabbitmq : Check rabbitmq containers] ************************************
2023-02-15 15:37:22,746 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 15:37:22,895 p=6014 u=root n=ansible | TASK [rabbitmq : Creating rabbitmq volume] *************************************
2023-02-15 15:37:24,007 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:24,116 p=6014 u=root n=ansible | TASK [rabbitmq : Running RabbitMQ bootstrap container] *************************
2023-02-15 15:37:26,227 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:26,363 p=6014 u=root n=ansible | TASK [rabbitmq : Flush handlers] ***********************************************
2023-02-15 15:37:26,364 p=6014 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart first rabbitmq container] ******************
2023-02-15 15:37:26,750 p=6014 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/restart_services.yml for localhost
2023-02-15 15:37:26,751 p=6014 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart rabbitmq container] ************************
2023-02-15 15:37:28,519 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:28,521 p=6014 u=root n=ansible | RUNNING HANDLER [rabbitmq : Waiting for rabbitmq to start] *********************
2023-02-15 15:37:45,960 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:45,963 p=6014 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart remaining rabbitmq containers] *************
2023-02-15 15:37:46,275 p=6014 u=root n=ansible | skipping: [localhost] => (item=localhost) 
2023-02-15 15:37:46,580 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_outward_rabbitmq_True

2023-02-15 15:37:46,582 p=6014 u=root n=ansible | PLAY [Apply role rabbitmq (outward)] *******************************************
2023-02-15 15:37:46,582 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:46,584 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_etcd_True

2023-02-15 15:37:46,593 p=6014 u=root n=ansible | PLAY [Apply role etcd] *********************************************************
2023-02-15 15:37:46,594 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:46,604 p=6014 u=root n=ansible | PLAY [Apply role keystone] *****************************************************
2023-02-15 15:37:46,809 p=6014 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:37:47,073 p=6014 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/deploy.yml for localhost
2023-02-15 15:37:47,181 p=6014 u=root n=ansible | TASK [keystone : Ensuring config directories exist] ****************************
2023-02-15 15:37:48,056 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 15:37:48,593 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:37:49,113 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:37:49,236 p=6014 u=root n=ansible | TASK [keystone : Check if policies shall be overwritten] ***********************
2023-02-15 15:37:49,408 p=6014 u=root n=ansible | TASK [keystone : Set keystone policy file] *************************************
2023-02-15 15:37:49,449 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:37:49,664 p=6014 u=root n=ansible | TASK [keystone : Check if Keystone domain-specific config is supplied] *********
2023-02-15 15:37:50,170 p=6014 u=root n=ansible | ok: [localhost]
2023-02-15 15:37:50,299 p=6014 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:37:50,352 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:37:50,456 p=6014 u=root n=ansible | TASK [keystone : Copying over config.json files for services] ******************
2023-02-15 15:37:52,028 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 15:37:53,160 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:37:54,180 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:37:54,317 p=6014 u=root n=ansible | TASK [keystone : Copying over keystone.conf] ***********************************
2023-02-15 15:37:56,314 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 15:37:56,344 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:37:57,890 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:37:58,032 p=6014 u=root n=ansible | TASK [keystone : Copying keystone-startup script for keystone] *****************
2023-02-15 15:37:59,626 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:59,748 p=6014 u=root n=ansible | TASK [keystone : Create Keystone domain-specific config directory] *************
2023-02-15 15:38:00,267 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:38:00,506 p=6014 u=root n=ansible | TASK [keystone : Get file list in custom domains folder] ***********************
2023-02-15 15:38:00,544 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:38:00,648 p=6014 u=root n=ansible | TASK [keystone : Copying Keystone Domain specific settings] ********************
2023-02-15 15:38:00,790 p=6014 u=root n=ansible | TASK [keystone : Copying over existing policy file] ****************************
2023-02-15 15:38:01,142 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}}) 
2023-02-15 15:38:01,158 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:38:01,186 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:38:01,305 p=6014 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:38:01,362 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:38:01,507 p=6014 u=root n=ansible | TASK [keystone : Copying over wsgi-keystone.conf] ******************************
2023-02-15 15:38:03,152 p=6014 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/keystone/templates/wsgi-keystone.conf.j2)
2023-02-15 15:38:03,348 p=6014 u=root n=ansible | TASK [keystone : Checking whether keystone-paste.ini file exists] **************
2023-02-15 15:38:04,052 p=6014 u=root n=ansible | ok: [localhost]
2023-02-15 15:38:04,163 p=6014 u=root n=ansible | TASK [keystone : Copying over keystone-paste.ini] ******************************
2023-02-15 15:38:04,646 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:38:04,894 p=6014 u=root n=ansible | TASK [keystone : Generate the required cron jobs for the node] *****************
2023-02-15 15:38:05,464 p=6014 u=root n=ansible | ok: [localhost]
2023-02-15 15:38:05,575 p=6014 u=root n=ansible | TASK [keystone : Set fact with the generated cron jobs for building the crontab later] ***
2023-02-15 15:38:05,670 p=6014 u=root n=ansible | ok: [localhost]
2023-02-15 15:38:05,815 p=6014 u=root n=ansible | TASK [keystone : Copying files for keystone-fernet] ****************************
2023-02-15 15:38:07,452 p=6014 u=root n=ansible | changed: [localhost] => (item={'src': 'crontab.j2', 'dest': 'crontab'})
2023-02-15 15:38:09,016 p=6014 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-rotate.sh.j2', 'dest': 'fernet-rotate.sh'})
2023-02-15 15:38:10,571 p=6014 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-node-sync.sh.j2', 'dest': 'fernet-node-sync.sh'})
2023-02-15 15:38:12,028 p=6014 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-push.sh.j2', 'dest': 'fernet-push.sh'})
2023-02-15 15:38:13,472 p=6014 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-healthcheck.sh.j2', 'dest': 'fernet-healthcheck.sh'})
2023-02-15 15:38:14,896 p=6014 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa', 'dest': 'id_rsa'})
2023-02-15 15:38:16,377 p=6014 u=root n=ansible | changed: [localhost] => (item={'src': 'ssh_config.j2', 'dest': 'ssh_config'})
2023-02-15 15:38:16,539 p=6014 u=root n=ansible | TASK [keystone : Copying files for keystone-ssh] *******************************
2023-02-15 15:38:18,151 p=6014 u=root n=ansible | changed: [localhost] => (item={'src': 'sshd_config.j2', 'dest': 'sshd_config'})
2023-02-15 15:38:19,616 p=6014 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa.pub', 'dest': 'id_rsa.pub'})
2023-02-15 15:38:19,762 p=6014 u=root n=ansible | TASK [keystone : Check keystone containers] ************************************
2023-02-15 15:38:21,144 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 15:38:22,253 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:38:23,307 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:38:23,438 p=6014 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:38:23,508 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:38:23,800 p=6014 u=root n=ansible | TASK [keystone : Creating keystone database] ***********************************
2023-02-15 15:38:28,487 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:28,712 p=6014 u=root n=ansible | TASK [keystone : Creating Keystone database user and setting permissions] ******
2023-02-15 15:38:32,730 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:32,884 p=6014 u=root n=ansible | TASK [keystone : Checking for any running keystone_fernet containers] **********
2023-02-15 15:38:34,624 p=6014 u=root n=ansible | ok: [localhost]
2023-02-15 15:38:34,727 p=6014 u=root n=ansible | TASK [keystone : Group nodes where keystone_fernet is running] *****************
2023-02-15 15:38:34,792 p=6014 u=root n=ansible | ok: [localhost]
2023-02-15 15:38:34,900 p=6014 u=root n=ansible | TASK [keystone : Fail if any hosts need bootstrapping and not all hosts targeted] ***
2023-02-15 15:38:34,972 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:38:35,073 p=6014 u=root n=ansible | TASK [keystone : Running Keystone bootstrap container] *************************
2023-02-15 15:38:48,401 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:48,666 p=6014 u=root n=ansible | TASK [keystone : Running Keystone fernet bootstrap container] ******************
2023-02-15 15:38:56,036 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:56,140 p=6014 u=root n=ansible | TASK [keystone : Flush handlers] ***********************************************
2023-02-15 15:38:56,140 p=6014 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-ssh container] ********************
2023-02-15 15:38:58,020 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:58,022 p=6014 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-fernet container] *****************
2023-02-15 15:39:00,003 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:39:00,005 p=6014 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone container] ************************
2023-02-15 15:39:01,971 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:39:02,087 p=6014 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:39:02,235 p=6014 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/distribute_fernet.yml for localhost
2023-02-15 15:39:02,375 p=6014 u=root n=ansible | TASK [keystone : Waiting for Keystone SSH port to be UP] ***********************
2023-02-15 15:39:03,519 p=6014 u=root n=ansible | ok: [localhost]
2023-02-15 15:39:03,745 p=6014 u=root n=ansible | TASK [keystone : Run key distribution] *****************************************
2023-02-15 15:39:04,994 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:39:05,149 p=6014 u=root n=ansible | TASK [keystone : Creating admin project, user, role, service, and endpoint] ****
2023-02-15 15:39:14,894 p=6014 u=root n=ansible | changed: [localhost] => (item=RegionOne)
2023-02-15 15:39:15,009 p=6014 u=root n=ansible | TASK [service-ks-register : keystone | Creating services] **********************
2023-02-15 15:39:41,906 p=6014 u=root n=ansible | changed: [localhost] => (item={'name': 'keystone', 'service_type': 'identity'})
2023-02-15 15:39:42,065 p=6014 u=root n=ansible | TASK [service-ks-register : keystone | Creating endpoints] *********************
2023-02-15 15:39:49,181 p=6014 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.175:5000', 'interface': 'internal'})
2023-02-15 15:39:56,210 p=6014 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.175:5000', 'interface': 'public'})
2023-02-15 15:39:56,387 p=6014 u=root n=ansible | TASK [service-ks-register : keystone | Creating projects] **********************
2023-02-15 15:39:56,556 p=6014 u=root n=ansible | TASK [service-ks-register : keystone | Creating users] *************************
2023-02-15 15:39:56,724 p=6014 u=root n=ansible | TASK [service-ks-register : keystone | Creating roles] *************************
2023-02-15 15:39:56,971 p=6014 u=root n=ansible | TASK [service-ks-register : keystone | Granting user roles] ********************
2023-02-15 15:39:57,258 p=6014 u=root n=ansible | TASK [keystone : Creating default user role] ***********************************
2023-02-15 15:40:03,985 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:40:04,102 p=6014 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:40:04,158 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:40:04,524 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_opensearch_True

2023-02-15 15:40:04,537 p=6014 u=root n=ansible | PLAY [Apply role opensearch] ***************************************************
2023-02-15 15:40:04,537 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:40:04,543 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_swift_True

2023-02-15 15:40:04,552 p=6014 u=root n=ansible | PLAY [Apply role swift] ********************************************************
2023-02-15 15:40:04,552 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:40:04,554 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_ceph_rgw_True

2023-02-15 15:40:04,562 p=6014 u=root n=ansible | PLAY [Apply role ceph-rgw] *****************************************************
2023-02-15 15:40:04,563 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:40:04,565 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_glance_True

2023-02-15 15:40:04,572 p=6014 u=root n=ansible | PLAY [Apply role glance] *******************************************************
2023-02-15 15:40:04,572 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:40:04,587 p=6014 u=root n=ansible | PLAY [Apply role ironic] *******************************************************
2023-02-15 15:40:04,797 p=6014 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 15:40:05,123 p=6014 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/ironic/tasks/deploy.yml for localhost
2023-02-15 15:40:05,246 p=6014 u=root n=ansible | TASK [service-ks-register : ironic | Creating services] ************************
2023-02-15 15:40:12,918 p=6014 u=root n=ansible | changed: [localhost] => (item={'name': 'ironic', 'service_type': 'baremetal'})
2023-02-15 15:40:20,147 p=6014 u=root n=ansible | changed: [localhost] => (item={'name': 'ironic-inspector', 'service_type': 'baremetal-introspection'})
2023-02-15 15:40:20,274 p=6014 u=root n=ansible | TASK [service-ks-register : ironic | Creating endpoints] ***********************
2023-02-15 15:40:27,816 p=6014 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic', 'url': 'http://169.16.1.175:6385', 'interface': 'internal'})
2023-02-15 15:40:35,290 p=6014 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic', 'url': 'http://169.16.1.175:6385', 'interface': 'public'})
2023-02-15 15:40:43,282 p=6014 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic-inspector', 'url': 'http://169.16.1.175:5050', 'interface': 'internal'})
2023-02-15 15:40:50,888 p=6014 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic-inspector', 'url': 'http://169.16.1.175:5050', 'interface': 'public'})
2023-02-15 15:40:51,020 p=6014 u=root n=ansible | TASK [service-ks-register : ironic | Creating projects] ************************
2023-02-15 15:40:59,318 p=6014 u=root n=ansible | changed: [localhost] => (item=service)
2023-02-15 15:40:59,479 p=6014 u=root n=ansible | TASK [service-ks-register : ironic | Creating users] ***************************
2023-02-15 15:41:08,623 p=6014 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic', 'project': 'service'})
2023-02-15 15:41:17,635 p=6014 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic-inspector', 'project': 'service'})
2023-02-15 15:41:17,639 p=6014 u=root n=ansible | [WARNING]: Module did not set no_log for update_password

2023-02-15 15:41:17,758 p=6014 u=root n=ansible | TASK [service-ks-register : ironic | Creating roles] ***************************
2023-02-15 15:41:24,228 p=6014 u=root n=ansible | ok: [localhost] => (item=admin)
2023-02-15 15:41:24,360 p=6014 u=root n=ansible | TASK [service-ks-register : ironic | Granting user roles] **********************
2023-02-15 15:41:37,512 p=6014 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic', 'role': 'admin', 'project': 'service'})
2023-02-15 15:41:49,989 p=6014 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic-inspector', 'role': 'admin', 'project': 'service'})
2023-02-15 15:41:50,233 p=6014 u=root n=ansible | TASK [module-load : Load modules] **********************************************
2023-02-15 15:41:51,470 p=6014 u=root n=ansible | changed: [localhost] => (item=iscsi_tcp)
2023-02-15 15:41:51,589 p=6014 u=root n=ansible | TASK [module-load : Persist modules via modules-load.d] ************************
2023-02-15 15:41:52,789 p=6014 u=root n=ansible | changed: [localhost] => (item=iscsi_tcp)
2023-02-15 15:41:52,912 p=6014 u=root n=ansible | TASK [module-load : Drop module persistence] ***********************************
2023-02-15 15:41:53,004 p=6014 u=root n=ansible | skipping: [localhost] => (item=iscsi_tcp) 
2023-02-15 15:41:53,232 p=6014 u=root n=ansible | TASK [ironic : Ensuring config directories exist] ******************************
2023-02-15 15:41:54,206 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 15:41:54,801 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:41:55,284 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 15:41:55,776 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:41:56,396 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:41:57,001 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:41:57,141 p=6014 u=root n=ansible | TASK [ironic : Check if Ironic policies shall be overwritten] ******************
2023-02-15 15:41:57,410 p=6014 u=root n=ansible | TASK [ironic : Check if Ironic Inspector policies shall be overwritten] ********
2023-02-15 15:41:57,607 p=6014 u=root n=ansible | TASK [ironic : Set ironic policy file] *****************************************
2023-02-15 15:41:57,647 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:41:57,764 p=6014 u=root n=ansible | TASK [ironic : Set ironic-inspector policy file] *******************************
2023-02-15 15:41:57,806 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:41:57,913 p=6014 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 15:41:57,965 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:41:58,069 p=6014 u=root n=ansible | TASK [ironic : Copying over config.json files for services] ********************
2023-02-15 15:41:59,524 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 15:42:00,521 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:42:01,577 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 15:42:02,633 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:42:03,681 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:42:05,063 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:42:05,240 p=6014 u=root n=ansible | TASK [ironic : Copying over ironic.conf] ***************************************
2023-02-15 15:42:07,443 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 15:42:09,215 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:42:09,228 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 15:42:09,238 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:42:09,247 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:42:09,250 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:42:09,369 p=6014 u=root n=ansible | TASK [ironic : Copying over inspector.conf] ************************************
2023-02-15 15:42:11,516 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:42:11,619 p=6014 u=root n=ansible | TASK [ironic : Copying over dnsmasq.conf] **************************************
2023-02-15 15:42:13,497 p=6014 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic-dnsmasq.conf.j2)
2023-02-15 15:42:13,620 p=6014 u=root n=ansible | TASK [ironic : Copying pxelinux.cfg default] ***********************************
2023-02-15 15:42:14,269 p=6014 u=root n=ansible | skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/pxelinux.default.j2) 
2023-02-15 15:42:14,393 p=6014 u=root n=ansible | TASK [ironic : Copying ironic_pxe_uefi.cfg default] ****************************
2023-02-15 15:42:15,102 p=6014 u=root n=ansible | skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic_pxe_uefi.default.j2) 
2023-02-15 15:42:15,251 p=6014 u=root n=ansible | TASK [ironic : Copying ironic-agent kernel and initramfs (PXE)] ****************
2023-02-15 15:42:15,952 p=6014 u=root n=ansible | skipping: [localhost] => (item=ironic-agent.kernel) 
2023-02-15 15:42:16,519 p=6014 u=root n=ansible | skipping: [localhost] => (item=ironic-agent.initramfs) 
2023-02-15 15:42:17,061 p=6014 u=root n=ansible | skipping: [localhost] => (item=ir-deploy-redfish.efiboot) 
2023-02-15 15:42:17,632 p=6014 u=root n=ansible | skipping: [localhost] => (item=rhel009_wholedisk_image.qcow2) 
2023-02-15 15:42:17,777 p=6014 u=root n=ansible | TASK [ironic : Copying ironic-agent kernel and initramfs (iPXE)] ***************
2023-02-15 15:42:20,643 p=6014 u=root n=ansible | changed: [localhost] => (item=ironic-agent.kernel)
2023-02-15 15:42:32,784 p=6014 u=root n=ansible | changed: [localhost] => (item=ironic-agent.initramfs)
2023-02-15 15:42:34,488 p=6014 u=root n=ansible | changed: [localhost] => (item=ir-deploy-redfish.efiboot)
2023-02-15 15:42:46,606 p=6014 u=root n=ansible | changed: [localhost] => (item=rhel009_wholedisk_image.qcow2)
2023-02-15 15:42:46,724 p=6014 u=root n=ansible | TASK [ironic : Copying inspector.ipxe] *****************************************
2023-02-15 15:42:48,639 p=6014 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/inspector.ipxe.j2)
2023-02-15 15:42:48,767 p=6014 u=root n=ansible | TASK [ironic : Copying ironic-http-httpd.conf] *********************************
2023-02-15 15:42:50,676 p=6014 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic-http-httpd.conf.j2)
2023-02-15 15:42:50,796 p=6014 u=root n=ansible | TASK [ironic : Copying over existing Ironic policy file] ***********************
2023-02-15 15:42:51,161 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}}) 
2023-02-15 15:42:51,165 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:42:51,175 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 15:42:51,185 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:42:51,195 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:42:51,201 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:42:51,323 p=6014 u=root n=ansible | TASK [ironic : Copying over existing Ironic Inspector policy file] *************
2023-02-15 15:42:51,727 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}}) 
2023-02-15 15:42:51,734 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:42:51,743 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 15:42:51,752 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:42:51,762 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:42:51,767 p=6014 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:42:51,884 p=6014 u=root n=ansible | TASK [ironic : Copying over ironic-api-wsgi.conf] ******************************
2023-02-15 15:42:53,454 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:42:53,613 p=6014 u=root n=ansible | TASK [ironic : Check ironic containers] ****************************************
2023-02-15 15:42:54,991 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 15:42:56,076 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:42:57,173 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 15:42:58,213 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:42:59,224 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:43:00,212 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:43:00,326 p=6014 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 15:43:00,376 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:43:00,609 p=6014 u=root n=ansible | TASK [ironic : Creating Ironic database] ***************************************
2023-02-15 15:43:04,279 p=6014 u=root n=ansible | changed: [localhost] => (item={'database_name': 'ironic', 'group': 'ironic-api'})
2023-02-15 15:43:07,954 p=6014 u=root n=ansible | changed: [localhost] => (item={'database_name': 'ironic_inspector', 'group': 'ironic-inspector'})
2023-02-15 15:43:08,185 p=6014 u=root n=ansible | TASK [ironic : Creating Ironic database user and setting permissions] **********
2023-02-15 15:43:11,932 p=6014 u=root n=ansible | changed: [localhost] => (item=ironic)
2023-02-15 15:43:15,667 p=6014 u=root n=ansible | changed: [localhost] => (item=ironic_inspector)
2023-02-15 15:43:16,202 p=6014 u=root n=ansible | TASK [ironic : Running Ironic bootstrap container] *****************************
2023-02-15 15:43:29,865 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:30,428 p=6014 u=root n=ansible | TASK [ironic : Running Ironic Inspector bootstrap container] *******************
2023-02-15 15:43:36,245 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:36,363 p=6014 u=root n=ansible | TASK [ironic : Running ironic-tftp bootstrap container] ************************
2023-02-15 15:43:39,250 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:39,366 p=6014 u=root n=ansible | TASK [ironic : Flush handlers] *************************************************
2023-02-15 15:43:39,366 p=6014 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-conductor container] ******************
2023-02-15 15:43:41,573 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:41,575 p=6014 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-api container] ************************
2023-02-15 15:43:43,702 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:43,704 p=6014 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-inspector container] ******************
2023-02-15 15:43:46,087 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:46,092 p=6014 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-tftp container] ***********************
2023-02-15 15:43:49,215 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:49,219 p=6014 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-http container] ***********************
2023-02-15 15:43:52,958 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:52,970 p=6014 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-dnsmasq container] ********************
2023-02-15 15:44:01,063 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:01,235 p=6014 u=root n=ansible | TASK [ironic : Flush and delete ironic-inspector iptables chain] ***************
2023-02-15 15:44:02,872 p=6014 u=root n=ansible | ok: [localhost] => (item=flush)
2023-02-15 15:44:03,431 p=6014 u=root n=ansible | ok: [localhost] => (item=delete-chain)
2023-02-15 15:44:03,784 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_cinder_True

2023-02-15 15:44:03,795 p=6014 u=root n=ansible | PLAY [Apply role cinder] *******************************************************
2023-02-15 15:44:03,795 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:03,797 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_placement_True

2023-02-15 15:44:03,805 p=6014 u=root n=ansible | PLAY [Apply role placement] ****************************************************
2023-02-15 15:44:03,806 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:03,808 p=6014 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_nova_True

2023-02-15 15:44:03,813 p=6014 u=root n=ansible | PLAY [Bootstrap nova API databases] ********************************************
2023-02-15 15:44:03,814 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:03,820 p=6014 u=root n=ansible | PLAY [Bootstrap nova cell databases] *******************************************
2023-02-15 15:44:03,820 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:03,827 p=6014 u=root n=ansible | PLAY [Apply role nova] *********************************************************
2023-02-15 15:44:03,827 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:03,836 p=6014 u=root n=ansible | PLAY [Apply role nova-cell] ****************************************************
2023-02-15 15:44:03,837 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:03,845 p=6014 u=root n=ansible | PLAY [Refresh nova scheduler cell cache] ***************************************
2023-02-15 15:44:03,845 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:03,851 p=6014 u=root n=ansible | PLAY [Reload global Nova super conductor services] *****************************
2023-02-15 15:44:03,852 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:03,859 p=6014 u=root n=ansible | PLAY [Reload Nova cell services] ***********************************************
2023-02-15 15:44:03,859 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:03,866 p=6014 u=root n=ansible | PLAY [Reload global Nova API services] *****************************************
2023-02-15 15:44:03,866 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:03,873 p=6014 u=root n=ansible | PLAY [Run Nova API online data migrations] *************************************
2023-02-15 15:44:03,873 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:03,879 p=6014 u=root n=ansible | PLAY [Run Nova cell online data migrations] ************************************
2023-02-15 15:44:03,880 p=6014 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:03,890 p=6014 u=root n=ansible | PLAY [Apply role openvswitch] **************************************************
2023-02-15 15:44:04,095 p=6014 u=root n=ansible | TASK [openvswitch : include_tasks] *********************************************
2023-02-15 15:44:04,359 p=6014 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/openvswitch/tasks/deploy.yml for localhost
2023-02-15 15:44:04,465 p=6014 u=root n=ansible | TASK [module-load : Load modules] **********************************************
2023-02-15 15:44:05,282 p=6014 u=root n=ansible | changed: [localhost] => (item=openvswitch)
2023-02-15 15:44:05,406 p=6014 u=root n=ansible | TASK [module-load : Persist modules via modules-load.d] ************************
2023-02-15 15:44:06,795 p=6014 u=root n=ansible | changed: [localhost] => (item=openvswitch)
2023-02-15 15:44:06,938 p=6014 u=root n=ansible | TASK [module-load : Drop module persistence] ***********************************
2023-02-15 15:44:07,052 p=6014 u=root n=ansible | skipping: [localhost] => (item=openvswitch) 
2023-02-15 15:44:07,267 p=6014 u=root n=ansible | TASK [openvswitch : Ensuring config directories exist] *************************
2023-02-15 15:44:08,055 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:08,654 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:08,770 p=6014 u=root n=ansible | TASK [openvswitch : Copying over config.json files for services] ***************
2023-02-15 15:44:10,207 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:11,494 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:11,620 p=6014 u=root n=ansible | TASK [openvswitch : Copying over start-ovs file for openvswitch-vswitchd] ******
2023-02-15 15:44:12,963 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:13,086 p=6014 u=root n=ansible | TASK [openvswitch : Copying over start-ovsdb-server files for openvswitch-db-server] ***
2023-02-15 15:44:14,460 p=6014 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:14,568 p=6014 u=root n=ansible | TASK [openvswitch : Copying over ovs-vsctl wrapper] ****************************
2023-02-15 15:44:14,790 p=6014 u=root n=ansible | skipping: [localhost]
2023-02-15 15:44:14,898 p=6014 u=root n=ansible | TASK [openvswitch : Check openvswitch containers] ******************************
2023-02-15 15:44:16,316 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:17,411 p=6014 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:17,522 p=6014 u=root n=ansible | TASK [openvswitch : Flush Handlers] ********************************************
2023-02-15 15:44:17,522 p=6014 u=root n=ansible | [WARNING]: flush_handlers task does not support when conditional

2023-02-15 15:44:17,523 p=6014 u=root n=ansible | RUNNING HANDLER [openvswitch : Restart openvswitch-db-server container] ********
2023-02-15 15:44:25,820 p=6014 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "msg": "'Traceback (most recent call last):\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/client.py\", line 268, in _raise_for_status\\n    response.raise_for_status()\\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 1021, in raise_for_status\\n    raise HTTPError(http_error_msg, response=self)\\nrequests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.42/images/create?tag=14.6.0&fromImage=kolla%2Fopenvswitch-db-server\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \"/tmp/ansible_kolla_docker_payload_8g7gc1il/ansible_kolla_docker_payload.zip/ansible/modules/kolla_docker.py\", line 404, in main\\n  File \"/tmp/ansible_kolla_docker_payload_8g7gc1il/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 654, in recreate_or_restart_container\\n    self.start_container()\\n  File \"/tmp/ansible_kolla_docker_payload_8g7gc1il/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 672, in start_container\\n    self.pull_image()\\n  File \"/tmp/ansible_kolla_docker_payload_8g7gc1il/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 453, in pull_image\\n    json.loads(line.strip().decode(\\'utf-8\\')) for line in self.dc.pull(\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/image.py\", line 430, in pull\\n    self._raise_for_status(response)\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/client.py\", line 270, in _raise_for_status\\n    raise create_api_error_from_http_exception(e)\\n  File \"/usr/local/lib/python3.9/site-packages/docker/errors.py\", line 31, in create_api_error_from_http_exception\\n    raise cls(e, response=response, explanation=explanation)\\ndocker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.42/images/create?tag=14.6.0&fromImage=kolla%2Fopenvswitch-db-server: Not Found (\"manifest for kolla/openvswitch-db-server:14.6.0 not found: manifest unknown: manifest unknown\")\\n'"}
2023-02-15 15:44:25,822 p=6014 u=root n=ansible | RUNNING HANDLER [openvswitch : Restart openvswitch-vswitchd container] *********
2023-02-15 15:44:25,825 p=6014 u=root n=ansible | NO MORE HOSTS LEFT *************************************************************
2023-02-15 15:44:25,830 p=6014 u=root n=ansible | PLAY RECAP *********************************************************************
2023-02-15 15:44:25,831 p=6014 u=root n=ansible | localhost                  : ok=101  changed=78   unreachable=0    failed=1    skipped=38   rescued=0    ignored=0   
