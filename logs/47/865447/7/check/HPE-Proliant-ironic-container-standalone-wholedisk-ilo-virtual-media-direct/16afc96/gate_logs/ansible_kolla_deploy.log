2023-02-15 15:36:19,971 p=6070 u=root n=ansible | [WARNING]: Invalid characters were found in group names but not replaced, use
-vvvv to see details

2023-02-15 15:36:23,571 p=6070 u=root n=ansible | PLAY [Gather facts for all hosts] **********************************************
2023-02-15 15:36:23,947 p=6070 u=root n=ansible | TASK [Gather facts] ************************************************************
2023-02-15 15:36:26,505 p=6070 u=root n=ansible | ok: [localhost]
2023-02-15 15:36:26,590 p=6070 u=root n=ansible | TASK [Group hosts to determine when using --limit] *****************************
2023-02-15 15:36:26,668 p=6070 u=root n=ansible | ok: [localhost]
2023-02-15 15:36:26,843 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
all_using_limit_True

2023-02-15 15:36:26,853 p=6070 u=root n=ansible | PLAY [Gather facts for all hosts (if using --limit)] ***************************
2023-02-15 15:36:26,853 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:26,857 p=6070 u=root n=ansible | PLAY [Group hosts based on configuration] **************************************
2023-02-15 15:36:27,027 p=6070 u=root n=ansible | TASK [Group hosts based on Kolla action] ***************************************
2023-02-15 15:36:27,107 p=6070 u=root n=ansible | ok: [localhost]
2023-02-15 15:36:27,192 p=6070 u=root n=ansible | TASK [Group hosts based on enabled services] ***********************************
2023-02-15 15:36:27,455 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_aodh_False)
2023-02-15 15:36:27,469 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_barbican_False)
2023-02-15 15:36:27,483 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_blazar_False)
2023-02-15 15:36:27,500 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_ceilometer_False)
2023-02-15 15:36:27,516 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_ceph_rgw_False)
2023-02-15 15:36:27,532 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_cinder_False)
2023-02-15 15:36:27,548 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_cloudkitty_False)
2023-02-15 15:36:27,562 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_collectd_False)
2023-02-15 15:36:27,576 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_cyborg_False)
2023-02-15 15:36:27,590 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_designate_False)
2023-02-15 15:36:27,603 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_etcd_False)
2023-02-15 15:36:27,617 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_freezer_False)
2023-02-15 15:36:27,631 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_glance_False)
2023-02-15 15:36:27,644 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_gnocchi_False)
2023-02-15 15:36:27,656 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_grafana_False)
2023-02-15 15:36:27,670 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_hacluster_False)
2023-02-15 15:36:27,684 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_heat_False)
2023-02-15 15:36:27,697 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_horizon_False)
2023-02-15 15:36:27,710 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_influxdb_False)
2023-02-15 15:36:27,723 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_ironic_True)
2023-02-15 15:36:27,735 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_iscsid_False)
2023-02-15 15:36:27,749 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_keystone_True)
2023-02-15 15:36:27,762 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_kuryr_False)
2023-02-15 15:36:27,775 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_loadbalancer_False)
2023-02-15 15:36:27,788 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_magnum_False)
2023-02-15 15:36:27,801 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_manila_False)
2023-02-15 15:36:27,814 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_mariadb_False)
2023-02-15 15:36:27,827 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_masakari_False)
2023-02-15 15:36:27,840 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_memcached_False)
2023-02-15 15:36:27,854 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_mistral_False)
2023-02-15 15:36:27,868 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_multipathd_False)
2023-02-15 15:36:27,888 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_murano_False)
2023-02-15 15:36:27,901 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_neutron_True)
2023-02-15 15:36:27,914 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_nova_False)
2023-02-15 15:36:27,928 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_octavia_False)
2023-02-15 15:36:27,942 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_False)
2023-02-15 15:36:27,957 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_dashboards_False)
2023-02-15 15:36:27,973 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_openvswitch_True_enable_ovs_dpdk_False)
2023-02-15 15:36:27,987 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_outward_rabbitmq_False)
2023-02-15 15:36:28,003 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_ovn_False)
2023-02-15 15:36:28,019 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_placement_False)
2023-02-15 15:36:28,036 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_prometheus_False)
2023-02-15 15:36:28,052 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_rabbitmq_True)
2023-02-15 15:36:28,067 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_redis_False)
2023-02-15 15:36:28,082 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_sahara_False)
2023-02-15 15:36:28,097 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_senlin_False)
2023-02-15 15:36:28,111 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_skydive_False)
2023-02-15 15:36:28,126 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_solum_False)
2023-02-15 15:36:28,140 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_swift_False)
2023-02-15 15:36:28,155 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_tacker_False)
2023-02-15 15:36:28,169 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_telegraf_False)
2023-02-15 15:36:28,183 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_trove_False)
2023-02-15 15:36:28,197 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_venus_False)
2023-02-15 15:36:28,212 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_vitrage_False)
2023-02-15 15:36:28,225 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_watcher_False)
2023-02-15 15:36:28,235 p=6070 u=root n=ansible | ok: [localhost] => (item=enable_zun_False)
2023-02-15 15:36:28,631 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
kolla_action_precheck

2023-02-15 15:36:28,634 p=6070 u=root n=ansible | PLAY [Apply role prechecks] ****************************************************
2023-02-15 15:36:28,634 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:28,652 p=6070 u=root n=ansible | PLAY [Apply role common] *******************************************************
2023-02-15 15:36:28,881 p=6070 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-15 15:36:29,082 p=6070 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/common/tasks/deploy.yml for localhost
2023-02-15 15:36:29,182 p=6070 u=root n=ansible | TASK [common : Ensuring config directories exist] ******************************
2023-02-15 15:36:30,228 p=6070 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'cron'}, 'cron'])
2023-02-15 15:36:30,298 p=6070 u=root n=ansible | skipping: [localhost] => (item=[{'service_name': 'fluentd'}, 'fluentd']) 
2023-02-15 15:36:30,834 p=6070 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'kolla-toolbox'}, 'kolla-toolbox'])
2023-02-15 15:36:30,939 p=6070 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-15 15:36:30,987 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:31,100 p=6070 u=root n=ansible | TASK [common : Copying over config.json files for services] ********************
2023-02-15 15:36:31,221 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:36:33,202 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:36:34,371 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:36:34,591 p=6070 u=root n=ansible | TASK [common : Find custom fluentd input config files] *************************
2023-02-15 15:36:34,731 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:35,042 p=6070 u=root n=ansible | TASK [common : Find custom fluentd filter config files] ************************
2023-02-15 15:36:35,195 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:35,494 p=6070 u=root n=ansible | TASK [common : Find custom fluentd format config files] ************************
2023-02-15 15:36:35,630 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:35,866 p=6070 u=root n=ansible | TASK [common : Find custom fluentd output config files] ************************
2023-02-15 15:36:35,999 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:36,136 p=6070 u=root n=ansible | TASK [common : Copying over td-agent.conf] *************************************
2023-02-15 15:36:36,307 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:36,440 p=6070 u=root n=ansible | TASK [common : Copying over cron logrotate config file] ************************
2023-02-15 15:36:37,939 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:36:38,158 p=6070 u=root n=ansible | TASK [common : Ensure RabbitMQ Erlang cookie exists] ***************************
2023-02-15 15:36:39,229 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:36:39,329 p=6070 u=root n=ansible | TASK [common : Ensuring config directories have correct owner and permission] ***
2023-02-15 15:36:39,473 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:36:39,492 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:36:40,000 p=6070 u=root n=ansible | ok: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:36:40,123 p=6070 u=root n=ansible | TASK [common : Copy rabbitmq-env.conf to kolla toolbox] ************************
2023-02-15 15:36:41,329 p=6070 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/rabbitmq-env.conf.j2)
2023-02-15 15:36:41,459 p=6070 u=root n=ansible | TASK [common : Copy rabbitmq erl_inetrc to kolla toolbox] **********************
2023-02-15 15:36:42,865 p=6070 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/erl_inetrc.j2)
2023-02-15 15:36:42,977 p=6070 u=root n=ansible | TASK [common : Check common containers] ****************************************
2023-02-15 15:36:43,114 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:36:44,996 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:36:46,071 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:36:46,209 p=6070 u=root n=ansible | TASK [common : Creating log volume] ********************************************
2023-02-15 15:36:47,416 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:36:47,532 p=6070 u=root n=ansible | TASK [common : Link kolla_logs volume to /var/log/kolla] ***********************
2023-02-15 15:36:48,139 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:36:48,311 p=6070 u=root n=ansible | TASK [common : Flush handlers] *************************************************
2023-02-15 15:36:48,312 p=6070 u=root n=ansible | RUNNING HANDLER [common : Restart kolla-toolbox container] *********************
2023-02-15 15:36:51,636 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:36:51,638 p=6070 u=root n=ansible | RUNNING HANDLER [common : Initializing toolbox container using normal user] ****
2023-02-15 15:36:56,262 p=6070 u=root n=ansible | ok: [localhost]
2023-02-15 15:36:56,266 p=6070 u=root n=ansible | RUNNING HANDLER [common : Restart cron container] ******************************
2023-02-15 15:36:58,408 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:36:58,956 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_loadbalancer_True

2023-02-15 15:36:58,970 p=6070 u=root n=ansible | PLAY [Apply role loadbalancer] *************************************************
2023-02-15 15:36:58,970 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:58,972 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_collectd_True

2023-02-15 15:36:58,980 p=6070 u=root n=ansible | PLAY [Apply role collectd] *****************************************************
2023-02-15 15:36:58,980 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:58,982 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_influxdb_True

2023-02-15 15:36:58,989 p=6070 u=root n=ansible | PLAY [Apply role influxdb] *****************************************************
2023-02-15 15:36:58,989 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:58,991 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_telegraf_True

2023-02-15 15:36:58,998 p=6070 u=root n=ansible | PLAY [Apply role telegraf] *****************************************************
2023-02-15 15:36:58,998 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:59,000 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_redis_True

2023-02-15 15:36:59,007 p=6070 u=root n=ansible | PLAY [Apply role redis] ********************************************************
2023-02-15 15:36:59,008 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:59,010 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_mariadb_True

2023-02-15 15:36:59,013 p=6070 u=root n=ansible | PLAY [Apply role mariadb] ******************************************************
2023-02-15 15:36:59,013 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:59,015 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_memcached_True

2023-02-15 15:36:59,021 p=6070 u=root n=ansible | PLAY [Apply role memcached] ****************************************************
2023-02-15 15:36:59,022 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:59,029 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_prometheus_True

2023-02-15 15:36:59,038 p=6070 u=root n=ansible | PLAY [Apply role prometheus] ***************************************************
2023-02-15 15:36:59,039 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:59,041 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_iscsid_True

2023-02-15 15:36:59,049 p=6070 u=root n=ansible | PLAY [Apply role iscsi] ********************************************************
2023-02-15 15:36:59,049 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:59,052 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_multipathd_True

2023-02-15 15:36:59,061 p=6070 u=root n=ansible | PLAY [Apply role multipathd] ***************************************************
2023-02-15 15:36:59,061 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:59,070 p=6070 u=root n=ansible | PLAY [Apply role rabbitmq] *****************************************************
2023-02-15 15:36:59,379 p=6070 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-15 15:36:59,630 p=6070 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/deploy.yml for localhost
2023-02-15 15:36:59,741 p=6070 u=root n=ansible | TASK [rabbitmq : Ensuring config directories exist] ****************************
2023-02-15 15:37:00,380 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 15:37:00,486 p=6070 u=root n=ansible | TASK [rabbitmq : Copying over config.json files for services] ******************
2023-02-15 15:37:01,999 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 15:37:02,214 p=6070 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq-env.conf] *******************************
2023-02-15 15:37:03,880 p=6070 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq-env.conf.j2)
2023-02-15 15:37:04,008 p=6070 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq.conf] ***********************************
2023-02-15 15:37:05,878 p=6070 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq.conf.j2)
2023-02-15 15:37:06,017 p=6070 u=root n=ansible | TASK [rabbitmq : Copying over erl_inetrc] **************************************
2023-02-15 15:37:07,278 p=6070 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/erl_inetrc.j2)
2023-02-15 15:37:07,390 p=6070 u=root n=ansible | TASK [rabbitmq : Copying over advanced.config] *********************************
2023-02-15 15:37:08,719 p=6070 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/advanced.config.j2)
2023-02-15 15:37:08,862 p=6070 u=root n=ansible | TASK [rabbitmq : Copying over definitions.json] ********************************
2023-02-15 15:37:10,302 p=6070 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/definitions.json.j2)
2023-02-15 15:37:10,409 p=6070 u=root n=ansible | TASK [rabbitmq : Copying over enabled_plugins] *********************************
2023-02-15 15:37:11,864 p=6070 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/enabled_plugins.j2)
2023-02-15 15:37:12,030 p=6070 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-15 15:37:12,092 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:37:12,261 p=6070 u=root n=ansible | TASK [rabbitmq : Check rabbitmq containers] ************************************
2023-02-15 15:37:14,035 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 15:37:14,172 p=6070 u=root n=ansible | TASK [rabbitmq : Creating rabbitmq volume] *************************************
2023-02-15 15:37:15,274 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:15,377 p=6070 u=root n=ansible | TASK [rabbitmq : Running RabbitMQ bootstrap container] *************************
2023-02-15 15:37:17,652 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:17,802 p=6070 u=root n=ansible | TASK [rabbitmq : Flush handlers] ***********************************************
2023-02-15 15:37:17,803 p=6070 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart first rabbitmq container] ******************
2023-02-15 15:37:18,170 p=6070 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/restart_services.yml for localhost
2023-02-15 15:37:18,171 p=6070 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart rabbitmq container] ************************
2023-02-15 15:37:20,068 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:20,070 p=6070 u=root n=ansible | RUNNING HANDLER [rabbitmq : Waiting for rabbitmq to start] *********************
2023-02-15 15:37:38,215 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:38,219 p=6070 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart remaining rabbitmq containers] *************
2023-02-15 15:37:38,504 p=6070 u=root n=ansible | skipping: [localhost] => (item=localhost) 
2023-02-15 15:37:38,833 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_outward_rabbitmq_True

2023-02-15 15:37:38,836 p=6070 u=root n=ansible | PLAY [Apply role rabbitmq (outward)] *******************************************
2023-02-15 15:37:38,836 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:38,837 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_etcd_True

2023-02-15 15:37:38,850 p=6070 u=root n=ansible | PLAY [Apply role etcd] *********************************************************
2023-02-15 15:37:38,851 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:38,863 p=6070 u=root n=ansible | PLAY [Apply role keystone] *****************************************************
2023-02-15 15:37:39,080 p=6070 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:37:39,380 p=6070 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/deploy.yml for localhost
2023-02-15 15:37:39,491 p=6070 u=root n=ansible | TASK [keystone : Ensuring config directories exist] ****************************
2023-02-15 15:37:40,291 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 15:37:40,790 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:37:41,286 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:37:41,411 p=6070 u=root n=ansible | TASK [keystone : Check if policies shall be overwritten] ***********************
2023-02-15 15:37:41,590 p=6070 u=root n=ansible | TASK [keystone : Set keystone policy file] *************************************
2023-02-15 15:37:41,633 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:37:41,850 p=6070 u=root n=ansible | TASK [keystone : Check if Keystone domain-specific config is supplied] *********
2023-02-15 15:37:42,330 p=6070 u=root n=ansible | ok: [localhost]
2023-02-15 15:37:42,434 p=6070 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:37:42,485 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:37:42,613 p=6070 u=root n=ansible | TASK [keystone : Copying over config.json files for services] ******************
2023-02-15 15:37:44,150 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 15:37:45,569 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:37:46,941 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:37:47,083 p=6070 u=root n=ansible | TASK [keystone : Copying over keystone.conf] ***********************************
2023-02-15 15:37:49,264 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 15:37:49,295 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:37:50,978 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:37:51,126 p=6070 u=root n=ansible | TASK [keystone : Copying keystone-startup script for keystone] *****************
2023-02-15 15:37:52,841 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:52,958 p=6070 u=root n=ansible | TASK [keystone : Create Keystone domain-specific config directory] *************
2023-02-15 15:37:53,519 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:37:53,759 p=6070 u=root n=ansible | TASK [keystone : Get file list in custom domains folder] ***********************
2023-02-15 15:37:53,810 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:37:53,938 p=6070 u=root n=ansible | TASK [keystone : Copying Keystone Domain specific settings] ********************
2023-02-15 15:37:54,158 p=6070 u=root n=ansible | TASK [keystone : Copying over existing policy file] ****************************
2023-02-15 15:37:54,630 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}}) 
2023-02-15 15:37:54,650 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:37:54,671 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:37:54,787 p=6070 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:37:54,844 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:37:54,965 p=6070 u=root n=ansible | TASK [keystone : Copying over wsgi-keystone.conf] ******************************
2023-02-15 15:37:56,654 p=6070 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/keystone/templates/wsgi-keystone.conf.j2)
2023-02-15 15:37:56,874 p=6070 u=root n=ansible | TASK [keystone : Checking whether keystone-paste.ini file exists] **************
2023-02-15 15:37:57,616 p=6070 u=root n=ansible | ok: [localhost]
2023-02-15 15:37:57,715 p=6070 u=root n=ansible | TASK [keystone : Copying over keystone-paste.ini] ******************************
2023-02-15 15:37:58,178 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:37:58,393 p=6070 u=root n=ansible | TASK [keystone : Generate the required cron jobs for the node] *****************
2023-02-15 15:37:59,084 p=6070 u=root n=ansible | ok: [localhost]
2023-02-15 15:37:59,202 p=6070 u=root n=ansible | TASK [keystone : Set fact with the generated cron jobs for building the crontab later] ***
2023-02-15 15:37:59,296 p=6070 u=root n=ansible | ok: [localhost]
2023-02-15 15:37:59,432 p=6070 u=root n=ansible | TASK [keystone : Copying files for keystone-fernet] ****************************
2023-02-15 15:38:01,048 p=6070 u=root n=ansible | changed: [localhost] => (item={'src': 'crontab.j2', 'dest': 'crontab'})
2023-02-15 15:38:02,358 p=6070 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-rotate.sh.j2', 'dest': 'fernet-rotate.sh'})
2023-02-15 15:38:03,860 p=6070 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-node-sync.sh.j2', 'dest': 'fernet-node-sync.sh'})
2023-02-15 15:38:05,454 p=6070 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-push.sh.j2', 'dest': 'fernet-push.sh'})
2023-02-15 15:38:06,829 p=6070 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-healthcheck.sh.j2', 'dest': 'fernet-healthcheck.sh'})
2023-02-15 15:38:08,357 p=6070 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa', 'dest': 'id_rsa'})
2023-02-15 15:38:09,901 p=6070 u=root n=ansible | changed: [localhost] => (item={'src': 'ssh_config.j2', 'dest': 'ssh_config'})
2023-02-15 15:38:10,014 p=6070 u=root n=ansible | TASK [keystone : Copying files for keystone-ssh] *******************************
2023-02-15 15:38:11,583 p=6070 u=root n=ansible | changed: [localhost] => (item={'src': 'sshd_config.j2', 'dest': 'sshd_config'})
2023-02-15 15:38:12,994 p=6070 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa.pub', 'dest': 'id_rsa.pub'})
2023-02-15 15:38:13,104 p=6070 u=root n=ansible | TASK [keystone : Check keystone containers] ************************************
2023-02-15 15:38:14,457 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 15:38:15,523 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:38:16,597 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:38:16,742 p=6070 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:38:16,826 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:38:17,075 p=6070 u=root n=ansible | TASK [keystone : Creating keystone database] ***********************************
2023-02-15 15:38:21,886 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:22,118 p=6070 u=root n=ansible | TASK [keystone : Creating Keystone database user and setting permissions] ******
2023-02-15 15:38:26,187 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:26,295 p=6070 u=root n=ansible | TASK [keystone : Checking for any running keystone_fernet containers] **********
2023-02-15 15:38:27,832 p=6070 u=root n=ansible | ok: [localhost]
2023-02-15 15:38:27,951 p=6070 u=root n=ansible | TASK [keystone : Group nodes where keystone_fernet is running] *****************
2023-02-15 15:38:28,051 p=6070 u=root n=ansible | ok: [localhost]
2023-02-15 15:38:28,194 p=6070 u=root n=ansible | TASK [keystone : Fail if any hosts need bootstrapping and not all hosts targeted] ***
2023-02-15 15:38:28,300 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:38:28,517 p=6070 u=root n=ansible | TASK [keystone : Running Keystone bootstrap container] *************************
2023-02-15 15:38:43,874 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:44,186 p=6070 u=root n=ansible | TASK [keystone : Running Keystone fernet bootstrap container] ******************
2023-02-15 15:38:52,342 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:52,450 p=6070 u=root n=ansible | TASK [keystone : Flush handlers] ***********************************************
2023-02-15 15:38:52,451 p=6070 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-ssh container] ********************
2023-02-15 15:38:54,645 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:54,646 p=6070 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-fernet container] *****************
2023-02-15 15:38:56,743 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:56,745 p=6070 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone container] ************************
2023-02-15 15:38:58,675 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:58,801 p=6070 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:38:58,950 p=6070 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/distribute_fernet.yml for localhost
2023-02-15 15:38:59,095 p=6070 u=root n=ansible | TASK [keystone : Waiting for Keystone SSH port to be UP] ***********************
2023-02-15 15:39:00,208 p=6070 u=root n=ansible | ok: [localhost]
2023-02-15 15:39:00,426 p=6070 u=root n=ansible | TASK [keystone : Run key distribution] *****************************************
2023-02-15 15:39:01,595 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:39:01,705 p=6070 u=root n=ansible | TASK [keystone : Creating admin project, user, role, service, and endpoint] ****
2023-02-15 15:39:11,931 p=6070 u=root n=ansible | changed: [localhost] => (item=RegionOne)
2023-02-15 15:39:12,044 p=6070 u=root n=ansible | TASK [service-ks-register : keystone | Creating services] **********************
2023-02-15 15:39:37,744 p=6070 u=root n=ansible | changed: [localhost] => (item={'name': 'keystone', 'service_type': 'identity'})
2023-02-15 15:39:37,879 p=6070 u=root n=ansible | TASK [service-ks-register : keystone | Creating endpoints] *********************
2023-02-15 15:39:45,283 p=6070 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.174:5000', 'interface': 'internal'})
2023-02-15 15:39:52,137 p=6070 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.174:5000', 'interface': 'public'})
2023-02-15 15:39:52,258 p=6070 u=root n=ansible | TASK [service-ks-register : keystone | Creating projects] **********************
2023-02-15 15:39:52,443 p=6070 u=root n=ansible | TASK [service-ks-register : keystone | Creating users] *************************
2023-02-15 15:39:52,605 p=6070 u=root n=ansible | TASK [service-ks-register : keystone | Creating roles] *************************
2023-02-15 15:39:52,780 p=6070 u=root n=ansible | TASK [service-ks-register : keystone | Granting user roles] ********************
2023-02-15 15:39:53,045 p=6070 u=root n=ansible | TASK [keystone : Creating default user role] ***********************************
2023-02-15 15:39:59,879 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:39:59,983 p=6070 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:40:00,035 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:40:00,348 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_opensearch_True

2023-02-15 15:40:00,358 p=6070 u=root n=ansible | PLAY [Apply role opensearch] ***************************************************
2023-02-15 15:40:00,358 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:40:00,361 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_swift_True

2023-02-15 15:40:00,367 p=6070 u=root n=ansible | PLAY [Apply role swift] ********************************************************
2023-02-15 15:40:00,367 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:40:00,369 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_ceph_rgw_True

2023-02-15 15:40:00,375 p=6070 u=root n=ansible | PLAY [Apply role ceph-rgw] *****************************************************
2023-02-15 15:40:00,375 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:40:00,377 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_glance_True

2023-02-15 15:40:00,383 p=6070 u=root n=ansible | PLAY [Apply role glance] *******************************************************
2023-02-15 15:40:00,383 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:40:00,396 p=6070 u=root n=ansible | PLAY [Apply role ironic] *******************************************************
2023-02-15 15:40:00,600 p=6070 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 15:40:01,031 p=6070 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/ironic/tasks/deploy.yml for localhost
2023-02-15 15:40:01,205 p=6070 u=root n=ansible | TASK [service-ks-register : ironic | Creating services] ************************
2023-02-15 15:40:08,625 p=6070 u=root n=ansible | changed: [localhost] => (item={'name': 'ironic', 'service_type': 'baremetal'})
2023-02-15 15:40:16,485 p=6070 u=root n=ansible | changed: [localhost] => (item={'name': 'ironic-inspector', 'service_type': 'baremetal-introspection'})
2023-02-15 15:40:16,620 p=6070 u=root n=ansible | TASK [service-ks-register : ironic | Creating endpoints] ***********************
2023-02-15 15:40:24,369 p=6070 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic', 'url': 'http://169.16.1.174:6385', 'interface': 'internal'})
2023-02-15 15:40:32,212 p=6070 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic', 'url': 'http://169.16.1.174:6385', 'interface': 'public'})
2023-02-15 15:40:40,541 p=6070 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic-inspector', 'url': 'http://169.16.1.174:5050', 'interface': 'internal'})
2023-02-15 15:40:48,869 p=6070 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic-inspector', 'url': 'http://169.16.1.174:5050', 'interface': 'public'})
2023-02-15 15:40:49,051 p=6070 u=root n=ansible | TASK [service-ks-register : ironic | Creating projects] ************************
2023-02-15 15:40:57,336 p=6070 u=root n=ansible | changed: [localhost] => (item=service)
2023-02-15 15:40:57,486 p=6070 u=root n=ansible | TASK [service-ks-register : ironic | Creating users] ***************************
2023-02-15 15:41:07,039 p=6070 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic', 'project': 'service'})
2023-02-15 15:41:16,458 p=6070 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic-inspector', 'project': 'service'})
2023-02-15 15:41:16,464 p=6070 u=root n=ansible | [WARNING]: Module did not set no_log for update_password

2023-02-15 15:41:16,587 p=6070 u=root n=ansible | TASK [service-ks-register : ironic | Creating roles] ***************************
2023-02-15 15:41:24,075 p=6070 u=root n=ansible | ok: [localhost] => (item=admin)
2023-02-15 15:41:24,200 p=6070 u=root n=ansible | TASK [service-ks-register : ironic | Granting user roles] **********************
2023-02-15 15:41:38,294 p=6070 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic', 'role': 'admin', 'project': 'service'})
2023-02-15 15:41:51,924 p=6070 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic-inspector', 'role': 'admin', 'project': 'service'})
2023-02-15 15:41:52,231 p=6070 u=root n=ansible | TASK [module-load : Load modules] **********************************************
2023-02-15 15:41:53,767 p=6070 u=root n=ansible | changed: [localhost] => (item=iscsi_tcp)
2023-02-15 15:41:53,886 p=6070 u=root n=ansible | TASK [module-load : Persist modules via modules-load.d] ************************
2023-02-15 15:41:55,194 p=6070 u=root n=ansible | changed: [localhost] => (item=iscsi_tcp)
2023-02-15 15:41:55,358 p=6070 u=root n=ansible | TASK [module-load : Drop module persistence] ***********************************
2023-02-15 15:41:55,464 p=6070 u=root n=ansible | skipping: [localhost] => (item=iscsi_tcp) 
2023-02-15 15:41:55,770 p=6070 u=root n=ansible | TASK [ironic : Ensuring config directories exist] ******************************
2023-02-15 15:41:56,655 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 15:41:57,127 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:41:57,601 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 15:41:58,117 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:41:58,809 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:41:59,294 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:41:59,457 p=6070 u=root n=ansible | TASK [ironic : Check if Ironic policies shall be overwritten] ******************
2023-02-15 15:41:59,700 p=6070 u=root n=ansible | TASK [ironic : Check if Ironic Inspector policies shall be overwritten] ********
2023-02-15 15:41:59,895 p=6070 u=root n=ansible | TASK [ironic : Set ironic policy file] *****************************************
2023-02-15 15:41:59,943 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:42:00,091 p=6070 u=root n=ansible | TASK [ironic : Set ironic-inspector policy file] *******************************
2023-02-15 15:42:00,149 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:42:00,300 p=6070 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 15:42:00,366 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:42:00,503 p=6070 u=root n=ansible | TASK [ironic : Copying over config.json files for services] ********************
2023-02-15 15:42:02,145 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 15:42:03,426 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:42:04,686 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 15:42:05,891 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:42:07,064 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:42:08,199 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:42:08,389 p=6070 u=root n=ansible | TASK [ironic : Copying over ironic.conf] ***************************************
2023-02-15 15:42:10,426 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 15:42:12,287 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:42:12,298 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 15:42:12,305 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:42:12,314 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:42:12,319 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:42:12,433 p=6070 u=root n=ansible | TASK [ironic : Copying over inspector.conf] ************************************
2023-02-15 15:42:14,780 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:42:14,904 p=6070 u=root n=ansible | TASK [ironic : Copying over dnsmasq.conf] **************************************
2023-02-15 15:42:17,059 p=6070 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic-dnsmasq.conf.j2)
2023-02-15 15:42:17,213 p=6070 u=root n=ansible | TASK [ironic : Copying pxelinux.cfg default] ***********************************
2023-02-15 15:42:18,014 p=6070 u=root n=ansible | skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/pxelinux.default.j2) 
2023-02-15 15:42:18,209 p=6070 u=root n=ansible | TASK [ironic : Copying ironic_pxe_uefi.cfg default] ****************************
2023-02-15 15:42:18,928 p=6070 u=root n=ansible | skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic_pxe_uefi.default.j2) 
2023-02-15 15:42:19,097 p=6070 u=root n=ansible | TASK [ironic : Copying ironic-agent kernel and initramfs (PXE)] ****************
2023-02-15 15:42:19,851 p=6070 u=root n=ansible | skipping: [localhost] => (item=ironic-agent.kernel) 
2023-02-15 15:42:20,481 p=6070 u=root n=ansible | skipping: [localhost] => (item=ironic-agent.initramfs) 
2023-02-15 15:42:21,050 p=6070 u=root n=ansible | skipping: [localhost] => (item=ir-deploy-redfish.efiboot) 
2023-02-15 15:42:21,572 p=6070 u=root n=ansible | skipping: [localhost] => (item=rhel009_wholedisk_image.qcow2) 
2023-02-15 15:42:21,741 p=6070 u=root n=ansible | TASK [ironic : Copying ironic-agent kernel and initramfs (iPXE)] ***************
2023-02-15 15:42:24,241 p=6070 u=root n=ansible | changed: [localhost] => (item=ironic-agent.kernel)
2023-02-15 15:42:35,406 p=6070 u=root n=ansible | changed: [localhost] => (item=ironic-agent.initramfs)
2023-02-15 15:42:37,302 p=6070 u=root n=ansible | changed: [localhost] => (item=ir-deploy-redfish.efiboot)
2023-02-15 15:42:56,070 p=6070 u=root n=ansible | changed: [localhost] => (item=rhel009_wholedisk_image.qcow2)
2023-02-15 15:42:56,222 p=6070 u=root n=ansible | TASK [ironic : Copying inspector.ipxe] *****************************************
2023-02-15 15:42:58,124 p=6070 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/inspector.ipxe.j2)
2023-02-15 15:42:58,226 p=6070 u=root n=ansible | TASK [ironic : Copying ironic-http-httpd.conf] *********************************
2023-02-15 15:43:00,264 p=6070 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic-http-httpd.conf.j2)
2023-02-15 15:43:00,432 p=6070 u=root n=ansible | TASK [ironic : Copying over existing Ironic policy file] ***********************
2023-02-15 15:43:00,843 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}}) 
2023-02-15 15:43:00,851 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:43:00,859 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 15:43:00,866 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:43:00,874 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:43:00,879 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:43:01,040 p=6070 u=root n=ansible | TASK [ironic : Copying over existing Ironic Inspector policy file] *************
2023-02-15 15:43:01,377 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}}) 
2023-02-15 15:43:01,388 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:43:01,392 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 15:43:01,399 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:43:01,408 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:43:01,413 p=6070 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:43:01,549 p=6070 u=root n=ansible | TASK [ironic : Copying over ironic-api-wsgi.conf] ******************************
2023-02-15 15:43:03,222 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:03,328 p=6070 u=root n=ansible | TASK [ironic : Check ironic containers] ****************************************
2023-02-15 15:43:04,913 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 15:43:05,962 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:43:07,011 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 15:43:08,262 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:43:09,506 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:43:10,525 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:43:10,650 p=6070 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 15:43:10,706 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:43:10,932 p=6070 u=root n=ansible | TASK [ironic : Creating Ironic database] ***************************************
2023-02-15 15:43:14,740 p=6070 u=root n=ansible | changed: [localhost] => (item={'database_name': 'ironic', 'group': 'ironic-api'})
2023-02-15 15:43:18,666 p=6070 u=root n=ansible | changed: [localhost] => (item={'database_name': 'ironic_inspector', 'group': 'ironic-inspector'})
2023-02-15 15:43:18,982 p=6070 u=root n=ansible | TASK [ironic : Creating Ironic database user and setting permissions] **********
2023-02-15 15:43:23,215 p=6070 u=root n=ansible | changed: [localhost] => (item=ironic)
2023-02-15 15:43:27,172 p=6070 u=root n=ansible | changed: [localhost] => (item=ironic_inspector)
2023-02-15 15:43:27,652 p=6070 u=root n=ansible | TASK [ironic : Running Ironic bootstrap container] *****************************
2023-02-15 15:43:42,232 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:42,736 p=6070 u=root n=ansible | TASK [ironic : Running Ironic Inspector bootstrap container] *******************
2023-02-15 15:43:49,839 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:49,945 p=6070 u=root n=ansible | TASK [ironic : Running ironic-tftp bootstrap container] ************************
2023-02-15 15:43:52,620 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:52,753 p=6070 u=root n=ansible | TASK [ironic : Flush handlers] *************************************************
2023-02-15 15:43:52,754 p=6070 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-conductor container] ******************
2023-02-15 15:43:55,092 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:55,094 p=6070 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-api container] ************************
2023-02-15 15:43:57,593 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:57,595 p=6070 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-inspector container] ******************
2023-02-15 15:43:59,962 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:59,965 p=6070 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-tftp container] ***********************
2023-02-15 15:44:03,067 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:03,079 p=6070 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-http container] ***********************
2023-02-15 15:44:06,529 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:06,534 p=6070 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-dnsmasq container] ********************
2023-02-15 15:44:10,892 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:11,030 p=6070 u=root n=ansible | TASK [ironic : Flush and delete ironic-inspector iptables chain] ***************
2023-02-15 15:44:12,998 p=6070 u=root n=ansible | ok: [localhost] => (item=flush)
2023-02-15 15:44:13,503 p=6070 u=root n=ansible | ok: [localhost] => (item=delete-chain)
2023-02-15 15:44:13,928 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_cinder_True

2023-02-15 15:44:13,942 p=6070 u=root n=ansible | PLAY [Apply role cinder] *******************************************************
2023-02-15 15:44:13,942 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:13,945 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_placement_True

2023-02-15 15:44:13,956 p=6070 u=root n=ansible | PLAY [Apply role placement] ****************************************************
2023-02-15 15:44:13,956 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:13,958 p=6070 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_nova_True

2023-02-15 15:44:13,967 p=6070 u=root n=ansible | PLAY [Bootstrap nova API databases] ********************************************
2023-02-15 15:44:13,968 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:13,980 p=6070 u=root n=ansible | PLAY [Bootstrap nova cell databases] *******************************************
2023-02-15 15:44:13,980 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:13,991 p=6070 u=root n=ansible | PLAY [Apply role nova] *********************************************************
2023-02-15 15:44:13,992 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:14,005 p=6070 u=root n=ansible | PLAY [Apply role nova-cell] ****************************************************
2023-02-15 15:44:14,006 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:14,016 p=6070 u=root n=ansible | PLAY [Refresh nova scheduler cell cache] ***************************************
2023-02-15 15:44:14,017 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:14,027 p=6070 u=root n=ansible | PLAY [Reload global Nova super conductor services] *****************************
2023-02-15 15:44:14,028 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:14,041 p=6070 u=root n=ansible | PLAY [Reload Nova cell services] ***********************************************
2023-02-15 15:44:14,041 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:14,049 p=6070 u=root n=ansible | PLAY [Reload global Nova API services] *****************************************
2023-02-15 15:44:14,050 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:14,056 p=6070 u=root n=ansible | PLAY [Run Nova API online data migrations] *************************************
2023-02-15 15:44:14,056 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:14,062 p=6070 u=root n=ansible | PLAY [Run Nova cell online data migrations] ************************************
2023-02-15 15:44:14,062 p=6070 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:14,072 p=6070 u=root n=ansible | PLAY [Apply role openvswitch] **************************************************
2023-02-15 15:44:14,275 p=6070 u=root n=ansible | TASK [openvswitch : include_tasks] *********************************************
2023-02-15 15:44:14,587 p=6070 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/openvswitch/tasks/deploy.yml for localhost
2023-02-15 15:44:14,734 p=6070 u=root n=ansible | TASK [module-load : Load modules] **********************************************
2023-02-15 15:44:15,715 p=6070 u=root n=ansible | changed: [localhost] => (item=openvswitch)
2023-02-15 15:44:15,830 p=6070 u=root n=ansible | TASK [module-load : Persist modules via modules-load.d] ************************
2023-02-15 15:44:17,244 p=6070 u=root n=ansible | changed: [localhost] => (item=openvswitch)
2023-02-15 15:44:17,355 p=6070 u=root n=ansible | TASK [module-load : Drop module persistence] ***********************************
2023-02-15 15:44:17,428 p=6070 u=root n=ansible | skipping: [localhost] => (item=openvswitch) 
2023-02-15 15:44:17,634 p=6070 u=root n=ansible | TASK [openvswitch : Ensuring config directories exist] *************************
2023-02-15 15:44:18,235 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:18,647 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:18,750 p=6070 u=root n=ansible | TASK [openvswitch : Copying over config.json files for services] ***************
2023-02-15 15:44:19,966 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:20,967 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:21,077 p=6070 u=root n=ansible | TASK [openvswitch : Copying over start-ovs file for openvswitch-vswitchd] ******
2023-02-15 15:44:22,274 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:22,378 p=6070 u=root n=ansible | TASK [openvswitch : Copying over start-ovsdb-server files for openvswitch-db-server] ***
2023-02-15 15:44:23,632 p=6070 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:23,740 p=6070 u=root n=ansible | TASK [openvswitch : Copying over ovs-vsctl wrapper] ****************************
2023-02-15 15:44:23,949 p=6070 u=root n=ansible | skipping: [localhost]
2023-02-15 15:44:24,055 p=6070 u=root n=ansible | TASK [openvswitch : Check openvswitch containers] ******************************
2023-02-15 15:44:25,955 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:27,028 p=6070 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:27,140 p=6070 u=root n=ansible | TASK [openvswitch : Flush Handlers] ********************************************
2023-02-15 15:44:27,141 p=6070 u=root n=ansible | [WARNING]: flush_handlers task does not support when conditional

2023-02-15 15:44:27,141 p=6070 u=root n=ansible | RUNNING HANDLER [openvswitch : Restart openvswitch-db-server container] ********
2023-02-15 15:44:35,149 p=6070 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "msg": "'Traceback (most recent call last):\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/client.py\", line 268, in _raise_for_status\\n    response.raise_for_status()\\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 1021, in raise_for_status\\n    raise HTTPError(http_error_msg, response=self)\\nrequests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.42/images/create?tag=14.6.0&fromImage=kolla%2Fopenvswitch-db-server\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \"/tmp/ansible_kolla_docker_payload_0cupccfq/ansible_kolla_docker_payload.zip/ansible/modules/kolla_docker.py\", line 404, in main\\n  File \"/tmp/ansible_kolla_docker_payload_0cupccfq/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 654, in recreate_or_restart_container\\n    self.start_container()\\n  File \"/tmp/ansible_kolla_docker_payload_0cupccfq/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 672, in start_container\\n    self.pull_image()\\n  File \"/tmp/ansible_kolla_docker_payload_0cupccfq/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 453, in pull_image\\n    json.loads(line.strip().decode(\\'utf-8\\')) for line in self.dc.pull(\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/image.py\", line 430, in pull\\n    self._raise_for_status(response)\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/client.py\", line 270, in _raise_for_status\\n    raise create_api_error_from_http_exception(e)\\n  File \"/usr/local/lib/python3.9/site-packages/docker/errors.py\", line 31, in create_api_error_from_http_exception\\n    raise cls(e, response=response, explanation=explanation)\\ndocker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.42/images/create?tag=14.6.0&fromImage=kolla%2Fopenvswitch-db-server: Not Found (\"manifest for kolla/openvswitch-db-server:14.6.0 not found: manifest unknown: manifest unknown\")\\n'"}
2023-02-15 15:44:35,151 p=6070 u=root n=ansible | RUNNING HANDLER [openvswitch : Restart openvswitch-vswitchd container] *********
2023-02-15 15:44:35,153 p=6070 u=root n=ansible | NO MORE HOSTS LEFT *************************************************************
2023-02-15 15:44:35,156 p=6070 u=root n=ansible | PLAY RECAP *********************************************************************
2023-02-15 15:44:35,156 p=6070 u=root n=ansible | localhost                  : ok=101  changed=78   unreachable=0    failed=1    skipped=38   rescued=0    ignored=0   
