2023-02-15 15:36:19,841 p=6009 u=root n=ansible | [WARNING]: Invalid characters were found in group names but not replaced, use
-vvvv to see details

2023-02-15 15:36:23,730 p=6009 u=root n=ansible | PLAY [Gather facts for all hosts] **********************************************
2023-02-15 15:36:23,985 p=6009 u=root n=ansible | TASK [Gather facts] ************************************************************
2023-02-15 15:36:26,204 p=6009 u=root n=ansible | ok: [localhost]
2023-02-15 15:36:26,301 p=6009 u=root n=ansible | TASK [Group hosts to determine when using --limit] *****************************
2023-02-15 15:36:26,374 p=6009 u=root n=ansible | ok: [localhost]
2023-02-15 15:36:26,547 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
all_using_limit_True

2023-02-15 15:36:26,557 p=6009 u=root n=ansible | PLAY [Gather facts for all hosts (if using --limit)] ***************************
2023-02-15 15:36:26,557 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:26,561 p=6009 u=root n=ansible | PLAY [Group hosts based on configuration] **************************************
2023-02-15 15:36:26,726 p=6009 u=root n=ansible | TASK [Group hosts based on Kolla action] ***************************************
2023-02-15 15:36:26,780 p=6009 u=root n=ansible | ok: [localhost]
2023-02-15 15:36:26,863 p=6009 u=root n=ansible | TASK [Group hosts based on enabled services] ***********************************
2023-02-15 15:36:27,129 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_aodh_False)
2023-02-15 15:36:27,170 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_barbican_False)
2023-02-15 15:36:27,212 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_blazar_False)
2023-02-15 15:36:27,256 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_ceilometer_False)
2023-02-15 15:36:27,280 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_ceph_rgw_False)
2023-02-15 15:36:27,310 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_cinder_False)
2023-02-15 15:36:27,332 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_cloudkitty_False)
2023-02-15 15:36:27,348 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_collectd_False)
2023-02-15 15:36:27,364 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_cyborg_False)
2023-02-15 15:36:27,380 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_designate_False)
2023-02-15 15:36:27,397 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_etcd_False)
2023-02-15 15:36:27,412 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_freezer_False)
2023-02-15 15:36:27,428 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_glance_False)
2023-02-15 15:36:27,444 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_gnocchi_False)
2023-02-15 15:36:27,462 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_grafana_False)
2023-02-15 15:36:27,477 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_hacluster_False)
2023-02-15 15:36:27,494 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_heat_False)
2023-02-15 15:36:27,508 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_horizon_False)
2023-02-15 15:36:27,524 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_influxdb_False)
2023-02-15 15:36:27,539 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_ironic_True)
2023-02-15 15:36:27,555 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_iscsid_False)
2023-02-15 15:36:27,570 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_keystone_True)
2023-02-15 15:36:27,587 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_kuryr_False)
2023-02-15 15:36:27,602 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_loadbalancer_False)
2023-02-15 15:36:27,618 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_magnum_False)
2023-02-15 15:36:27,640 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_manila_False)
2023-02-15 15:36:27,670 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_mariadb_False)
2023-02-15 15:36:27,692 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_masakari_False)
2023-02-15 15:36:27,707 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_memcached_False)
2023-02-15 15:36:27,722 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_mistral_False)
2023-02-15 15:36:27,738 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_multipathd_False)
2023-02-15 15:36:27,753 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_murano_False)
2023-02-15 15:36:27,768 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_neutron_True)
2023-02-15 15:36:27,783 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_nova_False)
2023-02-15 15:36:27,798 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_octavia_False)
2023-02-15 15:36:27,813 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_False)
2023-02-15 15:36:27,827 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_dashboards_False)
2023-02-15 15:36:27,843 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_openvswitch_True_enable_ovs_dpdk_False)
2023-02-15 15:36:27,858 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_outward_rabbitmq_False)
2023-02-15 15:36:27,873 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_ovn_False)
2023-02-15 15:36:27,888 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_placement_False)
2023-02-15 15:36:27,903 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_prometheus_False)
2023-02-15 15:36:27,918 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_rabbitmq_True)
2023-02-15 15:36:27,934 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_redis_False)
2023-02-15 15:36:27,950 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_sahara_False)
2023-02-15 15:36:27,967 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_senlin_False)
2023-02-15 15:36:27,983 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_skydive_False)
2023-02-15 15:36:27,999 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_solum_False)
2023-02-15 15:36:28,015 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_swift_False)
2023-02-15 15:36:28,032 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_tacker_False)
2023-02-15 15:36:28,050 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_telegraf_False)
2023-02-15 15:36:28,068 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_trove_False)
2023-02-15 15:36:28,085 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_venus_False)
2023-02-15 15:36:28,101 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_vitrage_False)
2023-02-15 15:36:28,116 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_watcher_False)
2023-02-15 15:36:28,127 p=6009 u=root n=ansible | ok: [localhost] => (item=enable_zun_False)
2023-02-15 15:36:28,433 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
kolla_action_precheck

2023-02-15 15:36:28,436 p=6009 u=root n=ansible | PLAY [Apply role prechecks] ****************************************************
2023-02-15 15:36:28,436 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:28,452 p=6009 u=root n=ansible | PLAY [Apply role common] *******************************************************
2023-02-15 15:36:28,649 p=6009 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-15 15:36:28,847 p=6009 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/common/tasks/deploy.yml for localhost
2023-02-15 15:36:28,945 p=6009 u=root n=ansible | TASK [common : Ensuring config directories exist] ******************************
2023-02-15 15:36:30,095 p=6009 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'cron'}, 'cron'])
2023-02-15 15:36:30,163 p=6009 u=root n=ansible | skipping: [localhost] => (item=[{'service_name': 'fluentd'}, 'fluentd']) 
2023-02-15 15:36:30,660 p=6009 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'kolla-toolbox'}, 'kolla-toolbox'])
2023-02-15 15:36:30,765 p=6009 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-15 15:36:30,807 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:30,908 p=6009 u=root n=ansible | TASK [common : Copying over config.json files for services] ********************
2023-02-15 15:36:31,035 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:36:32,630 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:36:33,600 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:36:33,808 p=6009 u=root n=ansible | TASK [common : Find custom fluentd input config files] *************************
2023-02-15 15:36:33,916 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:34,133 p=6009 u=root n=ansible | TASK [common : Find custom fluentd filter config files] ************************
2023-02-15 15:36:34,259 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:34,484 p=6009 u=root n=ansible | TASK [common : Find custom fluentd format config files] ************************
2023-02-15 15:36:34,596 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:34,790 p=6009 u=root n=ansible | TASK [common : Find custom fluentd output config files] ************************
2023-02-15 15:36:34,897 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:35,001 p=6009 u=root n=ansible | TASK [common : Copying over td-agent.conf] *************************************
2023-02-15 15:36:35,123 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:35,260 p=6009 u=root n=ansible | TASK [common : Copying over cron logrotate config file] ************************
2023-02-15 15:36:36,571 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:36:36,670 p=6009 u=root n=ansible | TASK [common : Ensure RabbitMQ Erlang cookie exists] ***************************
2023-02-15 15:36:37,764 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:36:37,906 p=6009 u=root n=ansible | TASK [common : Ensuring config directories have correct owner and permission] ***
2023-02-15 15:36:38,093 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:36:38,120 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:36:38,681 p=6009 u=root n=ansible | ok: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:36:38,799 p=6009 u=root n=ansible | TASK [common : Copy rabbitmq-env.conf to kolla toolbox] ************************
2023-02-15 15:36:39,953 p=6009 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/rabbitmq-env.conf.j2)
2023-02-15 15:36:40,054 p=6009 u=root n=ansible | TASK [common : Copy rabbitmq erl_inetrc to kolla toolbox] **********************
2023-02-15 15:36:41,112 p=6009 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/erl_inetrc.j2)
2023-02-15 15:36:41,212 p=6009 u=root n=ansible | TASK [common : Check common containers] ****************************************
2023-02-15 15:36:41,326 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:36:42,935 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:36:43,979 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:36:44,088 p=6009 u=root n=ansible | TASK [common : Creating log volume] ********************************************
2023-02-15 15:36:45,211 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:36:45,348 p=6009 u=root n=ansible | TASK [common : Link kolla_logs volume to /var/log/kolla] ***********************
2023-02-15 15:36:45,972 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:36:46,109 p=6009 u=root n=ansible | TASK [common : Flush handlers] *************************************************
2023-02-15 15:36:46,110 p=6009 u=root n=ansible | RUNNING HANDLER [common : Restart kolla-toolbox container] *********************
2023-02-15 15:36:49,241 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:36:49,243 p=6009 u=root n=ansible | RUNNING HANDLER [common : Initializing toolbox container using normal user] ****
2023-02-15 15:36:54,653 p=6009 u=root n=ansible | ok: [localhost]
2023-02-15 15:36:54,656 p=6009 u=root n=ansible | RUNNING HANDLER [common : Restart cron container] ******************************
2023-02-15 15:36:56,968 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:36:57,326 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_loadbalancer_True

2023-02-15 15:36:57,336 p=6009 u=root n=ansible | PLAY [Apply role loadbalancer] *************************************************
2023-02-15 15:36:57,337 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:57,338 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_collectd_True

2023-02-15 15:36:57,346 p=6009 u=root n=ansible | PLAY [Apply role collectd] *****************************************************
2023-02-15 15:36:57,346 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:57,348 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_influxdb_True

2023-02-15 15:36:57,353 p=6009 u=root n=ansible | PLAY [Apply role influxdb] *****************************************************
2023-02-15 15:36:57,354 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:57,355 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_telegraf_True

2023-02-15 15:36:57,361 p=6009 u=root n=ansible | PLAY [Apply role telegraf] *****************************************************
2023-02-15 15:36:57,362 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:57,363 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_redis_True

2023-02-15 15:36:57,369 p=6009 u=root n=ansible | PLAY [Apply role redis] ********************************************************
2023-02-15 15:36:57,369 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:57,371 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_mariadb_True

2023-02-15 15:36:57,373 p=6009 u=root n=ansible | PLAY [Apply role mariadb] ******************************************************
2023-02-15 15:36:57,373 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:57,374 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_memcached_True

2023-02-15 15:36:57,380 p=6009 u=root n=ansible | PLAY [Apply role memcached] ****************************************************
2023-02-15 15:36:57,380 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:57,386 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_prometheus_True

2023-02-15 15:36:57,394 p=6009 u=root n=ansible | PLAY [Apply role prometheus] ***************************************************
2023-02-15 15:36:57,395 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:57,397 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_iscsid_True

2023-02-15 15:36:57,403 p=6009 u=root n=ansible | PLAY [Apply role iscsi] ********************************************************
2023-02-15 15:36:57,403 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:57,405 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_multipathd_True

2023-02-15 15:36:57,411 p=6009 u=root n=ansible | PLAY [Apply role multipathd] ***************************************************
2023-02-15 15:36:57,411 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:57,418 p=6009 u=root n=ansible | PLAY [Apply role rabbitmq] *****************************************************
2023-02-15 15:36:57,646 p=6009 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-15 15:36:57,888 p=6009 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/deploy.yml for localhost
2023-02-15 15:36:58,001 p=6009 u=root n=ansible | TASK [rabbitmq : Ensuring config directories exist] ****************************
2023-02-15 15:36:58,787 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 15:36:58,894 p=6009 u=root n=ansible | TASK [rabbitmq : Copying over config.json files for services] ******************
2023-02-15 15:37:00,238 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 15:37:00,366 p=6009 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq-env.conf] *******************************
2023-02-15 15:37:01,860 p=6009 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq-env.conf.j2)
2023-02-15 15:37:01,972 p=6009 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq.conf] ***********************************
2023-02-15 15:37:03,437 p=6009 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq.conf.j2)
2023-02-15 15:37:03,556 p=6009 u=root n=ansible | TASK [rabbitmq : Copying over erl_inetrc] **************************************
2023-02-15 15:37:05,052 p=6009 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/erl_inetrc.j2)
2023-02-15 15:37:05,163 p=6009 u=root n=ansible | TASK [rabbitmq : Copying over advanced.config] *********************************
2023-02-15 15:37:06,600 p=6009 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/advanced.config.j2)
2023-02-15 15:37:06,706 p=6009 u=root n=ansible | TASK [rabbitmq : Copying over definitions.json] ********************************
2023-02-15 15:37:08,007 p=6009 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/definitions.json.j2)
2023-02-15 15:37:08,141 p=6009 u=root n=ansible | TASK [rabbitmq : Copying over enabled_plugins] *********************************
2023-02-15 15:37:09,445 p=6009 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/enabled_plugins.j2)
2023-02-15 15:37:09,549 p=6009 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-15 15:37:09,592 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:37:09,702 p=6009 u=root n=ansible | TASK [rabbitmq : Check rabbitmq containers] ************************************
2023-02-15 15:37:10,837 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 15:37:10,946 p=6009 u=root n=ansible | TASK [rabbitmq : Creating rabbitmq volume] *************************************
2023-02-15 15:37:12,031 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:12,137 p=6009 u=root n=ansible | TASK [rabbitmq : Running RabbitMQ bootstrap container] *************************
2023-02-15 15:37:14,399 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:14,504 p=6009 u=root n=ansible | TASK [rabbitmq : Flush handlers] ***********************************************
2023-02-15 15:37:14,505 p=6009 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart first rabbitmq container] ******************
2023-02-15 15:37:14,878 p=6009 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/restart_services.yml for localhost
2023-02-15 15:37:14,879 p=6009 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart rabbitmq container] ************************
2023-02-15 15:37:16,797 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:16,799 p=6009 u=root n=ansible | RUNNING HANDLER [rabbitmq : Waiting for rabbitmq to start] *********************
2023-02-15 15:37:33,948 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:33,950 p=6009 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart remaining rabbitmq containers] *************
2023-02-15 15:37:34,264 p=6009 u=root n=ansible | skipping: [localhost] => (item=localhost) 
2023-02-15 15:37:34,577 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_outward_rabbitmq_True

2023-02-15 15:37:34,579 p=6009 u=root n=ansible | PLAY [Apply role rabbitmq (outward)] *******************************************
2023-02-15 15:37:34,579 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:34,581 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_etcd_True

2023-02-15 15:37:34,590 p=6009 u=root n=ansible | PLAY [Apply role etcd] *********************************************************
2023-02-15 15:37:34,591 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:34,601 p=6009 u=root n=ansible | PLAY [Apply role keystone] *****************************************************
2023-02-15 15:37:34,796 p=6009 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:37:35,080 p=6009 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/deploy.yml for localhost
2023-02-15 15:37:35,189 p=6009 u=root n=ansible | TASK [keystone : Ensuring config directories exist] ****************************
2023-02-15 15:37:35,969 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 15:37:36,501 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:37:37,017 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:37:37,154 p=6009 u=root n=ansible | TASK [keystone : Check if policies shall be overwritten] ***********************
2023-02-15 15:37:37,318 p=6009 u=root n=ansible | TASK [keystone : Set keystone policy file] *************************************
2023-02-15 15:37:37,365 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:37:37,593 p=6009 u=root n=ansible | TASK [keystone : Check if Keystone domain-specific config is supplied] *********
2023-02-15 15:37:38,112 p=6009 u=root n=ansible | ok: [localhost]
2023-02-15 15:37:38,217 p=6009 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:37:38,263 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:37:38,366 p=6009 u=root n=ansible | TASK [keystone : Copying over config.json files for services] ******************
2023-02-15 15:37:39,761 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 15:37:40,762 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:37:41,903 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:37:42,047 p=6009 u=root n=ansible | TASK [keystone : Copying over keystone.conf] ***********************************
2023-02-15 15:37:44,011 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 15:37:44,028 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:37:45,756 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:37:45,868 p=6009 u=root n=ansible | TASK [keystone : Copying keystone-startup script for keystone] *****************
2023-02-15 15:37:47,400 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:47,536 p=6009 u=root n=ansible | TASK [keystone : Create Keystone domain-specific config directory] *************
2023-02-15 15:37:48,079 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:37:48,370 p=6009 u=root n=ansible | TASK [keystone : Get file list in custom domains folder] ***********************
2023-02-15 15:37:48,415 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:37:48,526 p=6009 u=root n=ansible | TASK [keystone : Copying Keystone Domain specific settings] ********************
2023-02-15 15:37:48,688 p=6009 u=root n=ansible | TASK [keystone : Copying over existing policy file] ****************************
2023-02-15 15:37:49,005 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}}) 
2023-02-15 15:37:49,013 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:37:49,039 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:37:49,151 p=6009 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:37:49,211 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:37:49,329 p=6009 u=root n=ansible | TASK [keystone : Copying over wsgi-keystone.conf] ******************************
2023-02-15 15:37:51,207 p=6009 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/keystone/templates/wsgi-keystone.conf.j2)
2023-02-15 15:37:51,454 p=6009 u=root n=ansible | TASK [keystone : Checking whether keystone-paste.ini file exists] **************
2023-02-15 15:37:52,339 p=6009 u=root n=ansible | ok: [localhost]
2023-02-15 15:37:52,441 p=6009 u=root n=ansible | TASK [keystone : Copying over keystone-paste.ini] ******************************
2023-02-15 15:37:52,899 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:37:53,092 p=6009 u=root n=ansible | TASK [keystone : Generate the required cron jobs for the node] *****************
2023-02-15 15:37:53,716 p=6009 u=root n=ansible | ok: [localhost]
2023-02-15 15:37:53,845 p=6009 u=root n=ansible | TASK [keystone : Set fact with the generated cron jobs for building the crontab later] ***
2023-02-15 15:37:53,919 p=6009 u=root n=ansible | ok: [localhost]
2023-02-15 15:37:54,048 p=6009 u=root n=ansible | TASK [keystone : Copying files for keystone-fernet] ****************************
2023-02-15 15:37:55,592 p=6009 u=root n=ansible | changed: [localhost] => (item={'src': 'crontab.j2', 'dest': 'crontab'})
2023-02-15 15:37:56,971 p=6009 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-rotate.sh.j2', 'dest': 'fernet-rotate.sh'})
2023-02-15 15:37:58,446 p=6009 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-node-sync.sh.j2', 'dest': 'fernet-node-sync.sh'})
2023-02-15 15:37:59,979 p=6009 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-push.sh.j2', 'dest': 'fernet-push.sh'})
2023-02-15 15:38:01,443 p=6009 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-healthcheck.sh.j2', 'dest': 'fernet-healthcheck.sh'})
2023-02-15 15:38:02,905 p=6009 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa', 'dest': 'id_rsa'})
2023-02-15 15:38:04,275 p=6009 u=root n=ansible | changed: [localhost] => (item={'src': 'ssh_config.j2', 'dest': 'ssh_config'})
2023-02-15 15:38:04,391 p=6009 u=root n=ansible | TASK [keystone : Copying files for keystone-ssh] *******************************
2023-02-15 15:38:06,265 p=6009 u=root n=ansible | changed: [localhost] => (item={'src': 'sshd_config.j2', 'dest': 'sshd_config'})
2023-02-15 15:38:07,710 p=6009 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa.pub', 'dest': 'id_rsa.pub'})
2023-02-15 15:38:07,814 p=6009 u=root n=ansible | TASK [keystone : Check keystone containers] ************************************
2023-02-15 15:38:09,120 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 15:38:10,221 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:38:11,199 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:38:11,322 p=6009 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:38:11,390 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:38:11,655 p=6009 u=root n=ansible | TASK [keystone : Creating keystone database] ***********************************
2023-02-15 15:38:16,338 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:16,579 p=6009 u=root n=ansible | TASK [keystone : Creating Keystone database user and setting permissions] ******
2023-02-15 15:38:20,517 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:20,669 p=6009 u=root n=ansible | TASK [keystone : Checking for any running keystone_fernet containers] **********
2023-02-15 15:38:22,231 p=6009 u=root n=ansible | ok: [localhost]
2023-02-15 15:38:22,343 p=6009 u=root n=ansible | TASK [keystone : Group nodes where keystone_fernet is running] *****************
2023-02-15 15:38:22,416 p=6009 u=root n=ansible | ok: [localhost]
2023-02-15 15:38:22,556 p=6009 u=root n=ansible | TASK [keystone : Fail if any hosts need bootstrapping and not all hosts targeted] ***
2023-02-15 15:38:22,644 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:38:22,766 p=6009 u=root n=ansible | TASK [keystone : Running Keystone bootstrap container] *************************
2023-02-15 15:38:33,988 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:34,199 p=6009 u=root n=ansible | TASK [keystone : Running Keystone fernet bootstrap container] ******************
2023-02-15 15:38:41,791 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:41,919 p=6009 u=root n=ansible | TASK [keystone : Flush handlers] ***********************************************
2023-02-15 15:38:41,920 p=6009 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-ssh container] ********************
2023-02-15 15:38:43,999 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:44,001 p=6009 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-fernet container] *****************
2023-02-15 15:38:45,899 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:45,901 p=6009 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone container] ************************
2023-02-15 15:38:47,879 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:47,993 p=6009 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:38:48,129 p=6009 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/distribute_fernet.yml for localhost
2023-02-15 15:38:48,265 p=6009 u=root n=ansible | TASK [keystone : Waiting for Keystone SSH port to be UP] ***********************
2023-02-15 15:38:49,344 p=6009 u=root n=ansible | ok: [localhost]
2023-02-15 15:38:49,569 p=6009 u=root n=ansible | TASK [keystone : Run key distribution] *****************************************
2023-02-15 15:38:50,650 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:50,754 p=6009 u=root n=ansible | TASK [keystone : Creating admin project, user, role, service, and endpoint] ****
2023-02-15 15:39:00,136 p=6009 u=root n=ansible | changed: [localhost] => (item=RegionOne)
2023-02-15 15:39:00,265 p=6009 u=root n=ansible | TASK [service-ks-register : keystone | Creating services] **********************
2023-02-15 15:39:25,280 p=6009 u=root n=ansible | changed: [localhost] => (item={'name': 'keystone', 'service_type': 'identity'})
2023-02-15 15:39:25,422 p=6009 u=root n=ansible | TASK [service-ks-register : keystone | Creating endpoints] *********************
2023-02-15 15:39:32,507 p=6009 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.151:5000', 'interface': 'internal'})
2023-02-15 15:39:39,308 p=6009 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.151:5000', 'interface': 'public'})
2023-02-15 15:39:39,483 p=6009 u=root n=ansible | TASK [service-ks-register : keystone | Creating projects] **********************
2023-02-15 15:39:39,664 p=6009 u=root n=ansible | TASK [service-ks-register : keystone | Creating users] *************************
2023-02-15 15:39:39,826 p=6009 u=root n=ansible | TASK [service-ks-register : keystone | Creating roles] *************************
2023-02-15 15:39:39,992 p=6009 u=root n=ansible | TASK [service-ks-register : keystone | Granting user roles] ********************
2023-02-15 15:39:40,237 p=6009 u=root n=ansible | TASK [keystone : Creating default user role] ***********************************
2023-02-15 15:39:47,107 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:39:47,214 p=6009 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:39:47,266 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:39:47,606 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_opensearch_True

2023-02-15 15:39:47,617 p=6009 u=root n=ansible | PLAY [Apply role opensearch] ***************************************************
2023-02-15 15:39:47,618 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:39:47,621 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_swift_True

2023-02-15 15:39:47,630 p=6009 u=root n=ansible | PLAY [Apply role swift] ********************************************************
2023-02-15 15:39:47,630 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:39:47,632 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_ceph_rgw_True

2023-02-15 15:39:47,639 p=6009 u=root n=ansible | PLAY [Apply role ceph-rgw] *****************************************************
2023-02-15 15:39:47,639 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:39:47,641 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_glance_True

2023-02-15 15:39:47,649 p=6009 u=root n=ansible | PLAY [Apply role glance] *******************************************************
2023-02-15 15:39:47,649 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:39:47,663 p=6009 u=root n=ansible | PLAY [Apply role ironic] *******************************************************
2023-02-15 15:39:47,871 p=6009 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 15:39:48,227 p=6009 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/ironic/tasks/deploy.yml for localhost
2023-02-15 15:39:48,352 p=6009 u=root n=ansible | TASK [service-ks-register : ironic | Creating services] ************************
2023-02-15 15:39:55,686 p=6009 u=root n=ansible | changed: [localhost] => (item={'name': 'ironic', 'service_type': 'baremetal'})
2023-02-15 15:40:03,154 p=6009 u=root n=ansible | changed: [localhost] => (item={'name': 'ironic-inspector', 'service_type': 'baremetal-introspection'})
2023-02-15 15:40:03,276 p=6009 u=root n=ansible | TASK [service-ks-register : ironic | Creating endpoints] ***********************
2023-02-15 15:40:10,769 p=6009 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic', 'url': 'http://169.16.1.151:6385', 'interface': 'internal'})
2023-02-15 15:40:18,156 p=6009 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic', 'url': 'http://169.16.1.151:6385', 'interface': 'public'})
2023-02-15 15:40:26,071 p=6009 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic-inspector', 'url': 'http://169.16.1.151:5050', 'interface': 'internal'})
2023-02-15 15:40:33,233 p=6009 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic-inspector', 'url': 'http://169.16.1.151:5050', 'interface': 'public'})
2023-02-15 15:40:33,368 p=6009 u=root n=ansible | TASK [service-ks-register : ironic | Creating projects] ************************
2023-02-15 15:40:42,143 p=6009 u=root n=ansible | changed: [localhost] => (item=service)
2023-02-15 15:40:42,303 p=6009 u=root n=ansible | TASK [service-ks-register : ironic | Creating users] ***************************
2023-02-15 15:40:51,738 p=6009 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic', 'project': 'service'})
2023-02-15 15:41:01,143 p=6009 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic-inspector', 'project': 'service'})
2023-02-15 15:41:01,148 p=6009 u=root n=ansible | [WARNING]: Module did not set no_log for update_password

2023-02-15 15:41:01,275 p=6009 u=root n=ansible | TASK [service-ks-register : ironic | Creating roles] ***************************
2023-02-15 15:41:08,286 p=6009 u=root n=ansible | ok: [localhost] => (item=admin)
2023-02-15 15:41:08,401 p=6009 u=root n=ansible | TASK [service-ks-register : ironic | Granting user roles] **********************
2023-02-15 15:41:21,279 p=6009 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic', 'role': 'admin', 'project': 'service'})
2023-02-15 15:41:33,962 p=6009 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic-inspector', 'role': 'admin', 'project': 'service'})
2023-02-15 15:41:34,181 p=6009 u=root n=ansible | TASK [module-load : Load modules] **********************************************
2023-02-15 15:41:35,470 p=6009 u=root n=ansible | changed: [localhost] => (item=iscsi_tcp)
2023-02-15 15:41:35,603 p=6009 u=root n=ansible | TASK [module-load : Persist modules via modules-load.d] ************************
2023-02-15 15:41:36,915 p=6009 u=root n=ansible | changed: [localhost] => (item=iscsi_tcp)
2023-02-15 15:41:37,029 p=6009 u=root n=ansible | TASK [module-load : Drop module persistence] ***********************************
2023-02-15 15:41:37,124 p=6009 u=root n=ansible | skipping: [localhost] => (item=iscsi_tcp) 
2023-02-15 15:41:37,366 p=6009 u=root n=ansible | TASK [ironic : Ensuring config directories exist] ******************************
2023-02-15 15:41:38,214 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 15:41:38,702 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:41:39,175 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 15:41:39,648 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:41:40,149 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:41:40,616 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:41:40,764 p=6009 u=root n=ansible | TASK [ironic : Check if Ironic policies shall be overwritten] ******************
2023-02-15 15:41:40,933 p=6009 u=root n=ansible | TASK [ironic : Check if Ironic Inspector policies shall be overwritten] ********
2023-02-15 15:41:41,086 p=6009 u=root n=ansible | TASK [ironic : Set ironic policy file] *****************************************
2023-02-15 15:41:41,126 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:41:41,255 p=6009 u=root n=ansible | TASK [ironic : Set ironic-inspector policy file] *******************************
2023-02-15 15:41:41,292 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:41:41,409 p=6009 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 15:41:41,457 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:41:41,562 p=6009 u=root n=ansible | TASK [ironic : Copying over config.json files for services] ********************
2023-02-15 15:41:42,928 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 15:41:44,026 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:41:45,232 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 15:41:46,467 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:41:47,675 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:41:48,956 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:41:49,112 p=6009 u=root n=ansible | TASK [ironic : Copying over ironic.conf] ***************************************
2023-02-15 15:41:51,462 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 15:41:53,238 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:41:53,250 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 15:41:53,258 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:41:53,268 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:41:53,275 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:41:53,406 p=6009 u=root n=ansible | TASK [ironic : Copying over inspector.conf] ************************************
2023-02-15 15:41:55,881 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:41:56,002 p=6009 u=root n=ansible | TASK [ironic : Copying over dnsmasq.conf] **************************************
2023-02-15 15:41:58,036 p=6009 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic-dnsmasq.conf.j2)
2023-02-15 15:41:58,140 p=6009 u=root n=ansible | TASK [ironic : Copying pxelinux.cfg default] ***********************************
2023-02-15 15:41:58,743 p=6009 u=root n=ansible | skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/pxelinux.default.j2) 
2023-02-15 15:41:58,864 p=6009 u=root n=ansible | TASK [ironic : Copying ironic_pxe_uefi.cfg default] ****************************
2023-02-15 15:41:59,430 p=6009 u=root n=ansible | skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic_pxe_uefi.default.j2) 
2023-02-15 15:41:59,537 p=6009 u=root n=ansible | TASK [ironic : Copying ironic-agent kernel and initramfs (PXE)] ****************
2023-02-15 15:42:00,120 p=6009 u=root n=ansible | skipping: [localhost] => (item=ironic-agent.kernel) 
2023-02-15 15:42:00,624 p=6009 u=root n=ansible | skipping: [localhost] => (item=ironic-agent.initramfs) 
2023-02-15 15:42:01,130 p=6009 u=root n=ansible | skipping: [localhost] => (item=ir-deploy-redfish.efiboot) 
2023-02-15 15:42:01,634 p=6009 u=root n=ansible | skipping: [localhost] => (item=rhel009_wholedisk_image.qcow2) 
2023-02-15 15:42:01,757 p=6009 u=root n=ansible | TASK [ironic : Copying ironic-agent kernel and initramfs (iPXE)] ***************
2023-02-15 15:42:03,865 p=6009 u=root n=ansible | changed: [localhost] => (item=ironic-agent.kernel)
2023-02-15 15:42:11,369 p=6009 u=root n=ansible | changed: [localhost] => (item=ironic-agent.initramfs)
2023-02-15 15:42:13,211 p=6009 u=root n=ansible | changed: [localhost] => (item=ir-deploy-redfish.efiboot)
2023-02-15 15:42:30,957 p=6009 u=root n=ansible | changed: [localhost] => (item=rhel009_wholedisk_image.qcow2)
2023-02-15 15:42:31,126 p=6009 u=root n=ansible | TASK [ironic : Copying inspector.ipxe] *****************************************
2023-02-15 15:42:33,133 p=6009 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/inspector.ipxe.j2)
2023-02-15 15:42:33,241 p=6009 u=root n=ansible | TASK [ironic : Copying ironic-http-httpd.conf] *********************************
2023-02-15 15:42:35,114 p=6009 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic-http-httpd.conf.j2)
2023-02-15 15:42:35,238 p=6009 u=root n=ansible | TASK [ironic : Copying over existing Ironic policy file] ***********************
2023-02-15 15:42:35,605 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}}) 
2023-02-15 15:42:35,609 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:42:35,620 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 15:42:35,631 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:42:35,642 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:42:35,643 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:42:35,799 p=6009 u=root n=ansible | TASK [ironic : Copying over existing Ironic Inspector policy file] *************
2023-02-15 15:42:36,259 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}}) 
2023-02-15 15:42:36,264 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:42:36,274 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 15:42:36,281 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:42:36,291 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:42:36,306 p=6009 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:42:36,421 p=6009 u=root n=ansible | TASK [ironic : Copying over ironic-api-wsgi.conf] ******************************
2023-02-15 15:42:38,142 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:42:38,263 p=6009 u=root n=ansible | TASK [ironic : Check ironic containers] ****************************************
2023-02-15 15:42:39,910 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 15:42:41,207 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:42:42,382 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 15:42:43,671 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:42:44,842 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:42:46,060 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:42:46,177 p=6009 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 15:42:46,237 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:42:46,463 p=6009 u=root n=ansible | TASK [ironic : Creating Ironic database] ***************************************
2023-02-15 15:42:50,894 p=6009 u=root n=ansible | changed: [localhost] => (item={'database_name': 'ironic', 'group': 'ironic-api'})
2023-02-15 15:42:54,685 p=6009 u=root n=ansible | changed: [localhost] => (item={'database_name': 'ironic_inspector', 'group': 'ironic-inspector'})
2023-02-15 15:42:55,014 p=6009 u=root n=ansible | TASK [ironic : Creating Ironic database user and setting permissions] **********
2023-02-15 15:42:58,912 p=6009 u=root n=ansible | changed: [localhost] => (item=ironic)
2023-02-15 15:43:03,037 p=6009 u=root n=ansible | changed: [localhost] => (item=ironic_inspector)
2023-02-15 15:43:03,517 p=6009 u=root n=ansible | TASK [ironic : Running Ironic bootstrap container] *****************************
2023-02-15 15:43:18,068 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:18,600 p=6009 u=root n=ansible | TASK [ironic : Running Ironic Inspector bootstrap container] *******************
2023-02-15 15:43:25,148 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:25,253 p=6009 u=root n=ansible | TASK [ironic : Running ironic-tftp bootstrap container] ************************
2023-02-15 15:43:27,584 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:27,690 p=6009 u=root n=ansible | TASK [ironic : Flush handlers] *************************************************
2023-02-15 15:43:27,690 p=6009 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-conductor container] ******************
2023-02-15 15:43:29,902 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:29,903 p=6009 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-api container] ************************
2023-02-15 15:43:32,128 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:32,130 p=6009 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-inspector container] ******************
2023-02-15 15:43:34,777 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:34,816 p=6009 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-tftp container] ***********************
2023-02-15 15:43:37,688 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:37,696 p=6009 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-http container] ***********************
2023-02-15 15:43:40,593 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:40,595 p=6009 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-dnsmasq container] ********************
2023-02-15 15:43:49,349 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:49,531 p=6009 u=root n=ansible | TASK [ironic : Flush and delete ironic-inspector iptables chain] ***************
2023-02-15 15:43:51,759 p=6009 u=root n=ansible | ok: [localhost] => (item=flush)
2023-02-15 15:43:52,312 p=6009 u=root n=ansible | ok: [localhost] => (item=delete-chain)
2023-02-15 15:43:52,702 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_cinder_True

2023-02-15 15:43:52,713 p=6009 u=root n=ansible | PLAY [Apply role cinder] *******************************************************
2023-02-15 15:43:52,713 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:43:52,715 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_placement_True

2023-02-15 15:43:52,723 p=6009 u=root n=ansible | PLAY [Apply role placement] ****************************************************
2023-02-15 15:43:52,724 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:43:52,726 p=6009 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_nova_True

2023-02-15 15:43:52,731 p=6009 u=root n=ansible | PLAY [Bootstrap nova API databases] ********************************************
2023-02-15 15:43:52,732 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:43:52,739 p=6009 u=root n=ansible | PLAY [Bootstrap nova cell databases] *******************************************
2023-02-15 15:43:52,740 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:43:52,748 p=6009 u=root n=ansible | PLAY [Apply role nova] *********************************************************
2023-02-15 15:43:52,748 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:43:52,759 p=6009 u=root n=ansible | PLAY [Apply role nova-cell] ****************************************************
2023-02-15 15:43:52,760 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:43:52,767 p=6009 u=root n=ansible | PLAY [Refresh nova scheduler cell cache] ***************************************
2023-02-15 15:43:52,768 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:43:52,775 p=6009 u=root n=ansible | PLAY [Reload global Nova super conductor services] *****************************
2023-02-15 15:43:52,776 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:43:52,783 p=6009 u=root n=ansible | PLAY [Reload Nova cell services] ***********************************************
2023-02-15 15:43:52,783 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:43:52,790 p=6009 u=root n=ansible | PLAY [Reload global Nova API services] *****************************************
2023-02-15 15:43:52,791 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:43:52,799 p=6009 u=root n=ansible | PLAY [Run Nova API online data migrations] *************************************
2023-02-15 15:43:52,799 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:43:52,808 p=6009 u=root n=ansible | PLAY [Run Nova cell online data migrations] ************************************
2023-02-15 15:43:52,808 p=6009 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:43:52,820 p=6009 u=root n=ansible | PLAY [Apply role openvswitch] **************************************************
2023-02-15 15:43:53,021 p=6009 u=root n=ansible | TASK [openvswitch : include_tasks] *********************************************
2023-02-15 15:43:53,339 p=6009 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/openvswitch/tasks/deploy.yml for localhost
2023-02-15 15:43:53,459 p=6009 u=root n=ansible | TASK [module-load : Load modules] **********************************************
2023-02-15 15:43:54,669 p=6009 u=root n=ansible | changed: [localhost] => (item=openvswitch)
2023-02-15 15:43:54,793 p=6009 u=root n=ansible | TASK [module-load : Persist modules via modules-load.d] ************************
2023-02-15 15:43:56,178 p=6009 u=root n=ansible | changed: [localhost] => (item=openvswitch)
2023-02-15 15:43:56,300 p=6009 u=root n=ansible | TASK [module-load : Drop module persistence] ***********************************
2023-02-15 15:43:56,380 p=6009 u=root n=ansible | skipping: [localhost] => (item=openvswitch) 
2023-02-15 15:43:56,598 p=6009 u=root n=ansible | TASK [openvswitch : Ensuring config directories exist] *************************
2023-02-15 15:43:57,434 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:43:57,877 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:43:58,018 p=6009 u=root n=ansible | TASK [openvswitch : Copying over config.json files for services] ***************
2023-02-15 15:43:59,220 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:00,251 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:00,383 p=6009 u=root n=ansible | TASK [openvswitch : Copying over start-ovs file for openvswitch-vswitchd] ******
2023-02-15 15:44:01,787 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:01,901 p=6009 u=root n=ansible | TASK [openvswitch : Copying over start-ovsdb-server files for openvswitch-db-server] ***
2023-02-15 15:44:03,148 p=6009 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:03,267 p=6009 u=root n=ansible | TASK [openvswitch : Copying over ovs-vsctl wrapper] ****************************
2023-02-15 15:44:03,492 p=6009 u=root n=ansible | skipping: [localhost]
2023-02-15 15:44:03,604 p=6009 u=root n=ansible | TASK [openvswitch : Check openvswitch containers] ******************************
2023-02-15 15:44:05,229 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:06,402 p=6009 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:06,522 p=6009 u=root n=ansible | TASK [openvswitch : Flush Handlers] ********************************************
2023-02-15 15:44:06,523 p=6009 u=root n=ansible | [WARNING]: flush_handlers task does not support when conditional

2023-02-15 15:44:06,523 p=6009 u=root n=ansible | RUNNING HANDLER [openvswitch : Restart openvswitch-db-server container] ********
2023-02-15 15:44:14,484 p=6009 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "msg": "'Traceback (most recent call last):\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/client.py\", line 268, in _raise_for_status\\n    response.raise_for_status()\\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 1021, in raise_for_status\\n    raise HTTPError(http_error_msg, response=self)\\nrequests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.42/images/create?tag=14.6.0&fromImage=kolla%2Fopenvswitch-db-server\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \"/tmp/ansible_kolla_docker_payload_52f1ju43/ansible_kolla_docker_payload.zip/ansible/modules/kolla_docker.py\", line 404, in main\\n  File \"/tmp/ansible_kolla_docker_payload_52f1ju43/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 654, in recreate_or_restart_container\\n    self.start_container()\\n  File \"/tmp/ansible_kolla_docker_payload_52f1ju43/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 672, in start_container\\n    self.pull_image()\\n  File \"/tmp/ansible_kolla_docker_payload_52f1ju43/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 453, in pull_image\\n    json.loads(line.strip().decode(\\'utf-8\\')) for line in self.dc.pull(\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/image.py\", line 430, in pull\\n    self._raise_for_status(response)\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/client.py\", line 270, in _raise_for_status\\n    raise create_api_error_from_http_exception(e)\\n  File \"/usr/local/lib/python3.9/site-packages/docker/errors.py\", line 31, in create_api_error_from_http_exception\\n    raise cls(e, response=response, explanation=explanation)\\ndocker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.42/images/create?tag=14.6.0&fromImage=kolla%2Fopenvswitch-db-server: Not Found (\"manifest for kolla/openvswitch-db-server:14.6.0 not found: manifest unknown: manifest unknown\")\\n'"}
2023-02-15 15:44:14,486 p=6009 u=root n=ansible | RUNNING HANDLER [openvswitch : Restart openvswitch-vswitchd container] *********
2023-02-15 15:44:14,488 p=6009 u=root n=ansible | NO MORE HOSTS LEFT *************************************************************
2023-02-15 15:44:14,491 p=6009 u=root n=ansible | PLAY RECAP *********************************************************************
2023-02-15 15:44:14,492 p=6009 u=root n=ansible | localhost                  : ok=101  changed=78   unreachable=0    failed=1    skipped=38   rescued=0    ignored=0   
