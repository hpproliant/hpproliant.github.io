2023-02-07 07:36:00,428 p=5555 u=root n=ansible | [WARNING]: Invalid characters were found in group names but not replaced, use
-vvvv to see details

2023-02-07 07:36:03,749 p=5555 u=root n=ansible | PLAY [Gather facts for all hosts] **********************************************
2023-02-07 07:36:03,994 p=5555 u=root n=ansible | TASK [Gather facts] ************************************************************
2023-02-07 07:36:06,212 p=5555 u=root n=ansible | ok: [localhost]
2023-02-07 07:36:06,292 p=5555 u=root n=ansible | TASK [Group hosts to determine when using --limit] *****************************
2023-02-07 07:36:06,354 p=5555 u=root n=ansible | ok: [localhost]
2023-02-07 07:36:06,518 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
all_using_limit_True

2023-02-07 07:36:06,528 p=5555 u=root n=ansible | PLAY [Gather facts for all hosts (if using --limit)] ***************************
2023-02-07 07:36:06,528 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:36:06,532 p=5555 u=root n=ansible | PLAY [Group hosts based on configuration] **************************************
2023-02-07 07:36:06,688 p=5555 u=root n=ansible | TASK [Group hosts based on Kolla action] ***************************************
2023-02-07 07:36:06,743 p=5555 u=root n=ansible | ok: [localhost]
2023-02-07 07:36:06,826 p=5555 u=root n=ansible | TASK [Group hosts based on enabled services] ***********************************
2023-02-07 07:36:07,022 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_aodh_False)
2023-02-07 07:36:07,039 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_barbican_False)
2023-02-07 07:36:07,055 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_blazar_False)
2023-02-07 07:36:07,071 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_ceilometer_False)
2023-02-07 07:36:07,086 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_ceph_rgw_False)
2023-02-07 07:36:07,100 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_cinder_False)
2023-02-07 07:36:07,116 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_cloudkitty_False)
2023-02-07 07:36:07,135 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_collectd_False)
2023-02-07 07:36:07,154 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_cyborg_False)
2023-02-07 07:36:07,172 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_designate_False)
2023-02-07 07:36:07,189 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_etcd_False)
2023-02-07 07:36:07,205 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_freezer_False)
2023-02-07 07:36:07,223 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_glance_False)
2023-02-07 07:36:07,242 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_gnocchi_False)
2023-02-07 07:36:07,259 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_grafana_False)
2023-02-07 07:36:07,277 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_hacluster_False)
2023-02-07 07:36:07,297 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_heat_False)
2023-02-07 07:36:07,315 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_horizon_False)
2023-02-07 07:36:07,329 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_influxdb_False)
2023-02-07 07:36:07,343 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_ironic_False)
2023-02-07 07:36:07,357 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_iscsid_False)
2023-02-07 07:36:07,373 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_keystone_True)
2023-02-07 07:36:07,388 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_kuryr_False)
2023-02-07 07:36:07,402 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_loadbalancer_False)
2023-02-07 07:36:07,415 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_magnum_False)
2023-02-07 07:36:07,429 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_manila_False)
2023-02-07 07:36:07,441 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_mariadb_False)
2023-02-07 07:36:07,454 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_masakari_False)
2023-02-07 07:36:07,467 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_memcached_False)
2023-02-07 07:36:07,479 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_mistral_False)
2023-02-07 07:36:07,492 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_multipathd_False)
2023-02-07 07:36:07,509 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_murano_False)
2023-02-07 07:36:07,521 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_neutron_False)
2023-02-07 07:36:07,535 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_nova_False)
2023-02-07 07:36:07,549 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_octavia_False)
2023-02-07 07:36:07,565 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_False)
2023-02-07 07:36:07,580 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_dashboards_False)
2023-02-07 07:36:07,595 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_openvswitch_False_enable_ovs_dpdk_False)
2023-02-07 07:36:07,608 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_outward_rabbitmq_False)
2023-02-07 07:36:07,622 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_ovn_False)
2023-02-07 07:36:07,636 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_placement_False)
2023-02-07 07:36:07,650 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_prometheus_False)
2023-02-07 07:36:07,664 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_rabbitmq_True)
2023-02-07 07:36:07,679 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_redis_False)
2023-02-07 07:36:07,693 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_sahara_False)
2023-02-07 07:36:07,707 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_senlin_False)
2023-02-07 07:36:07,721 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_skydive_False)
2023-02-07 07:36:07,735 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_solum_False)
2023-02-07 07:36:07,749 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_swift_False)
2023-02-07 07:36:07,767 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_tacker_False)
2023-02-07 07:36:07,785 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_telegraf_False)
2023-02-07 07:36:07,802 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_trove_False)
2023-02-07 07:36:07,819 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_venus_False)
2023-02-07 07:36:07,835 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_vitrage_False)
2023-02-07 07:36:07,853 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_watcher_False)
2023-02-07 07:36:07,876 p=5555 u=root n=ansible | ok: [localhost] => (item=enable_zun_False)
2023-02-07 07:36:08,199 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
kolla_action_precheck

2023-02-07 07:36:08,201 p=5555 u=root n=ansible | PLAY [Apply role prechecks] ****************************************************
2023-02-07 07:36:08,202 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:36:08,217 p=5555 u=root n=ansible | PLAY [Apply role common] *******************************************************
2023-02-07 07:36:08,401 p=5555 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-07 07:36:08,603 p=5555 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/common/tasks/deploy.yml for localhost
2023-02-07 07:36:08,704 p=5555 u=root n=ansible | TASK [common : Ensuring config directories exist] ******************************
2023-02-07 07:36:09,902 p=5555 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'cron'}, 'cron'])
2023-02-07 07:36:09,972 p=5555 u=root n=ansible | skipping: [localhost] => (item=[{'service_name': 'fluentd'}, 'fluentd']) 
2023-02-07 07:36:10,452 p=5555 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'kolla-toolbox'}, 'kolla-toolbox'])
2023-02-07 07:36:10,547 p=5555 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-07 07:36:10,589 p=5555 u=root n=ansible | skipping: [localhost]
2023-02-07 07:36:10,685 p=5555 u=root n=ansible | TASK [common : Copying over config.json files for services] ********************
2023-02-07 07:36:10,813 p=5555 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-07 07:36:12,545 p=5555 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-07 07:36:13,505 p=5555 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-07 07:36:13,714 p=5555 u=root n=ansible | TASK [common : Find custom fluentd input config files] *************************
2023-02-07 07:36:13,816 p=5555 u=root n=ansible | skipping: [localhost]
2023-02-07 07:36:14,028 p=5555 u=root n=ansible | TASK [common : Find custom fluentd filter config files] ************************
2023-02-07 07:36:14,135 p=5555 u=root n=ansible | skipping: [localhost]
2023-02-07 07:36:14,362 p=5555 u=root n=ansible | TASK [common : Find custom fluentd format config files] ************************
2023-02-07 07:36:14,472 p=5555 u=root n=ansible | skipping: [localhost]
2023-02-07 07:36:14,695 p=5555 u=root n=ansible | TASK [common : Find custom fluentd output config files] ************************
2023-02-07 07:36:14,803 p=5555 u=root n=ansible | skipping: [localhost]
2023-02-07 07:36:14,915 p=5555 u=root n=ansible | TASK [common : Copying over td-agent.conf] *************************************
2023-02-07 07:36:15,023 p=5555 u=root n=ansible | skipping: [localhost]
2023-02-07 07:36:15,133 p=5555 u=root n=ansible | TASK [common : Copying over cron logrotate config file] ************************
2023-02-07 07:36:16,485 p=5555 u=root n=ansible | changed: [localhost]
2023-02-07 07:36:16,586 p=5555 u=root n=ansible | TASK [common : Ensure RabbitMQ Erlang cookie exists] ***************************
2023-02-07 07:36:17,675 p=5555 u=root n=ansible | changed: [localhost]
2023-02-07 07:36:17,815 p=5555 u=root n=ansible | TASK [common : Ensuring config directories have correct owner and permission] ***
2023-02-07 07:36:17,938 p=5555 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-07 07:36:17,950 p=5555 u=root n=ansible | skipping: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-07 07:36:18,443 p=5555 u=root n=ansible | ok: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-07 07:36:18,540 p=5555 u=root n=ansible | TASK [common : Copy rabbitmq-env.conf to kolla toolbox] ************************
2023-02-07 07:36:19,657 p=5555 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/rabbitmq-env.conf.j2)
2023-02-07 07:36:19,757 p=5555 u=root n=ansible | TASK [common : Copy rabbitmq erl_inetrc to kolla toolbox] **********************
2023-02-07 07:36:20,791 p=5555 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/erl_inetrc.j2)
2023-02-07 07:36:20,890 p=5555 u=root n=ansible | TASK [common : Check common containers] ****************************************
2023-02-07 07:36:20,998 p=5555 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-07 07:36:22,727 p=5555 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-07 07:36:23,687 p=5555 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-07 07:36:23,786 p=5555 u=root n=ansible | TASK [common : Creating log volume] ********************************************
2023-02-07 07:36:24,769 p=5555 u=root n=ansible | changed: [localhost]
2023-02-07 07:36:24,867 p=5555 u=root n=ansible | TASK [common : Link kolla_logs volume to /var/log/kolla] ***********************
2023-02-07 07:36:25,432 p=5555 u=root n=ansible | changed: [localhost]
2023-02-07 07:36:25,529 p=5555 u=root n=ansible | TASK [common : Flush handlers] *************************************************
2023-02-07 07:36:25,529 p=5555 u=root n=ansible | RUNNING HANDLER [common : Restart kolla-toolbox container] *********************
2023-02-07 07:36:27,655 p=5555 u=root n=ansible | changed: [localhost]
2023-02-07 07:36:27,657 p=5555 u=root n=ansible | RUNNING HANDLER [common : Initializing toolbox container using normal user] ****
2023-02-07 07:36:31,657 p=5555 u=root n=ansible | ok: [localhost]
2023-02-07 07:36:31,659 p=5555 u=root n=ansible | RUNNING HANDLER [common : Restart cron container] ******************************
2023-02-07 07:36:33,447 p=5555 u=root n=ansible | changed: [localhost]
2023-02-07 07:36:33,762 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_loadbalancer_True

2023-02-07 07:36:33,771 p=5555 u=root n=ansible | PLAY [Apply role loadbalancer] *************************************************
2023-02-07 07:36:33,772 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:36:33,773 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_collectd_True

2023-02-07 07:36:33,779 p=5555 u=root n=ansible | PLAY [Apply role collectd] *****************************************************
2023-02-07 07:36:33,780 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:36:33,782 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_influxdb_True

2023-02-07 07:36:33,788 p=5555 u=root n=ansible | PLAY [Apply role influxdb] *****************************************************
2023-02-07 07:36:33,789 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:36:33,790 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_telegraf_True

2023-02-07 07:36:33,796 p=5555 u=root n=ansible | PLAY [Apply role telegraf] *****************************************************
2023-02-07 07:36:33,797 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:36:33,798 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_redis_True

2023-02-07 07:36:33,804 p=5555 u=root n=ansible | PLAY [Apply role redis] ********************************************************
2023-02-07 07:36:33,804 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:36:33,805 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_mariadb_True

2023-02-07 07:36:33,807 p=5555 u=root n=ansible | PLAY [Apply role mariadb] ******************************************************
2023-02-07 07:36:33,807 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:36:33,809 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_memcached_True

2023-02-07 07:36:33,814 p=5555 u=root n=ansible | PLAY [Apply role memcached] ****************************************************
2023-02-07 07:36:33,814 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:36:33,820 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_prometheus_True

2023-02-07 07:36:33,825 p=5555 u=root n=ansible | PLAY [Apply role prometheus] ***************************************************
2023-02-07 07:36:33,825 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:36:33,827 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_iscsid_True

2023-02-07 07:36:33,832 p=5555 u=root n=ansible | PLAY [Apply role iscsi] ********************************************************
2023-02-07 07:36:33,832 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:36:33,834 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_multipathd_True

2023-02-07 07:36:33,841 p=5555 u=root n=ansible | PLAY [Apply role multipathd] ***************************************************
2023-02-07 07:36:33,841 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:36:33,846 p=5555 u=root n=ansible | PLAY [Apply role rabbitmq] *****************************************************
2023-02-07 07:36:34,051 p=5555 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-07 07:36:34,258 p=5555 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/deploy.yml for localhost
2023-02-07 07:36:34,362 p=5555 u=root n=ansible | TASK [rabbitmq : Ensuring config directories exist] ****************************
2023-02-07 07:36:34,956 p=5555 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-07 07:36:35,055 p=5555 u=root n=ansible | TASK [rabbitmq : Copying over config.json files for services] ******************
2023-02-07 07:36:36,256 p=5555 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-07 07:36:36,370 p=5555 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq-env.conf] *******************************
2023-02-07 07:36:37,720 p=5555 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq-env.conf.j2)
2023-02-07 07:36:37,831 p=5555 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq.conf] ***********************************
2023-02-07 07:36:39,486 p=5555 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq.conf.j2)
2023-02-07 07:36:39,594 p=5555 u=root n=ansible | TASK [rabbitmq : Copying over erl_inetrc] **************************************
2023-02-07 07:36:40,731 p=5555 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/erl_inetrc.j2)
2023-02-07 07:36:40,828 p=5555 u=root n=ansible | TASK [rabbitmq : Copying over advanced.config] *********************************
2023-02-07 07:36:42,293 p=5555 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/advanced.config.j2)
2023-02-07 07:36:42,390 p=5555 u=root n=ansible | TASK [rabbitmq : Copying over definitions.json] ********************************
2023-02-07 07:36:43,589 p=5555 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/definitions.json.j2)
2023-02-07 07:36:43,697 p=5555 u=root n=ansible | TASK [rabbitmq : Copying over enabled_plugins] *********************************
2023-02-07 07:36:44,842 p=5555 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/enabled_plugins.j2)
2023-02-07 07:36:44,962 p=5555 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-07 07:36:45,018 p=5555 u=root n=ansible | skipping: [localhost]
2023-02-07 07:36:45,173 p=5555 u=root n=ansible | TASK [rabbitmq : Check rabbitmq containers] ************************************
2023-02-07 07:36:46,472 p=5555 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-07 07:36:46,573 p=5555 u=root n=ansible | TASK [rabbitmq : Creating rabbitmq volume] *************************************
2023-02-07 07:36:47,567 p=5555 u=root n=ansible | changed: [localhost]
2023-02-07 07:36:47,666 p=5555 u=root n=ansible | TASK [rabbitmq : Running RabbitMQ bootstrap container] *************************
2023-02-07 07:36:49,723 p=5555 u=root n=ansible | changed: [localhost]
2023-02-07 07:36:49,836 p=5555 u=root n=ansible | TASK [rabbitmq : Flush handlers] ***********************************************
2023-02-07 07:36:49,837 p=5555 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart first rabbitmq container] ******************
2023-02-07 07:36:50,154 p=5555 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/restart_services.yml for localhost
2023-02-07 07:36:50,155 p=5555 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart rabbitmq container] ************************
2023-02-07 07:36:52,091 p=5555 u=root n=ansible | changed: [localhost]
2023-02-07 07:36:52,093 p=5555 u=root n=ansible | RUNNING HANDLER [rabbitmq : Waiting for rabbitmq to start] *********************
2023-02-07 07:37:08,838 p=5555 u=root n=ansible | changed: [localhost]
2023-02-07 07:37:08,840 p=5555 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart remaining rabbitmq containers] *************
2023-02-07 07:37:09,131 p=5555 u=root n=ansible | skipping: [localhost] => (item=localhost) 
2023-02-07 07:37:09,482 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_outward_rabbitmq_True

2023-02-07 07:37:09,484 p=5555 u=root n=ansible | PLAY [Apply role rabbitmq (outward)] *******************************************
2023-02-07 07:37:09,484 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:37:09,486 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_etcd_True

2023-02-07 07:37:09,495 p=5555 u=root n=ansible | PLAY [Apply role etcd] *********************************************************
2023-02-07 07:37:09,495 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:37:09,505 p=5555 u=root n=ansible | PLAY [Apply role keystone] *****************************************************
2023-02-07 07:37:09,708 p=5555 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-07 07:37:09,999 p=5555 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/deploy.yml for localhost
2023-02-07 07:37:10,129 p=5555 u=root n=ansible | TASK [keystone : Ensuring config directories exist] ****************************
2023-02-07 07:37:10,926 p=5555 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-07 07:37:11,402 p=5555 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-07 07:37:12,003 p=5555 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-07 07:37:12,140 p=5555 u=root n=ansible | TASK [keystone : Check if policies shall be overwritten] ***********************
2023-02-07 07:37:12,303 p=5555 u=root n=ansible | TASK [keystone : Set keystone policy file] *************************************
2023-02-07 07:37:12,341 p=5555 u=root n=ansible | skipping: [localhost]
2023-02-07 07:37:12,591 p=5555 u=root n=ansible | TASK [keystone : Check if Keystone domain-specific config is supplied] *********
2023-02-07 07:37:13,207 p=5555 u=root n=ansible | ok: [localhost]
2023-02-07 07:37:13,311 p=5555 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-07 07:37:13,367 p=5555 u=root n=ansible | skipping: [localhost]
2023-02-07 07:37:13,490 p=5555 u=root n=ansible | TASK [keystone : Copying over config.json files for services] ******************
2023-02-07 07:37:14,880 p=5555 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-07 07:37:15,919 p=5555 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-07 07:37:16,868 p=5555 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-07 07:37:16,987 p=5555 u=root n=ansible | TASK [keystone : Copying over keystone.conf] ***********************************
2023-02-07 07:37:18,800 p=5555 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-07 07:37:18,815 p=5555 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-07 07:37:20,269 p=5555 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-07 07:37:20,371 p=5555 u=root n=ansible | TASK [keystone : Copying keystone-startup script for keystone] *****************
2023-02-07 07:37:21,711 p=5555 u=root n=ansible | changed: [localhost]
2023-02-07 07:37:21,810 p=5555 u=root n=ansible | TASK [keystone : Create Keystone domain-specific config directory] *************
2023-02-07 07:37:22,235 p=5555 u=root n=ansible | skipping: [localhost]
2023-02-07 07:37:22,419 p=5555 u=root n=ansible | TASK [keystone : Get file list in custom domains folder] ***********************
2023-02-07 07:37:22,454 p=5555 u=root n=ansible | skipping: [localhost]
2023-02-07 07:37:22,548 p=5555 u=root n=ansible | TASK [keystone : Copying Keystone Domain specific settings] ********************
2023-02-07 07:37:22,685 p=5555 u=root n=ansible | TASK [keystone : Copying over existing policy file] ****************************
2023-02-07 07:37:22,960 p=5555 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}}) 
2023-02-07 07:37:22,976 p=5555 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-07 07:37:22,995 p=5555 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-07 07:37:23,094 p=5555 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-07 07:37:23,141 p=5555 u=root n=ansible | skipping: [localhost]
2023-02-07 07:37:23,238 p=5555 u=root n=ansible | TASK [keystone : Copying over wsgi-keystone.conf] ******************************
2023-02-07 07:37:24,846 p=5555 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/keystone/templates/wsgi-keystone.conf.j2)
2023-02-07 07:37:25,034 p=5555 u=root n=ansible | TASK [keystone : Checking whether keystone-paste.ini file exists] **************
2023-02-07 07:37:25,677 p=5555 u=root n=ansible | ok: [localhost]
2023-02-07 07:37:25,779 p=5555 u=root n=ansible | TASK [keystone : Copying over keystone-paste.ini] ******************************
2023-02-07 07:37:26,214 p=5555 u=root n=ansible | skipping: [localhost]
2023-02-07 07:37:26,400 p=5555 u=root n=ansible | TASK [keystone : Generate the required cron jobs for the node] *****************
2023-02-07 07:37:27,004 p=5555 u=root n=ansible | ok: [localhost]
2023-02-07 07:37:27,097 p=5555 u=root n=ansible | TASK [keystone : Set fact with the generated cron jobs for building the crontab later] ***
2023-02-07 07:37:27,156 p=5555 u=root n=ansible | ok: [localhost]
2023-02-07 07:37:27,253 p=5555 u=root n=ansible | TASK [keystone : Copying files for keystone-fernet] ****************************
2023-02-07 07:37:28,762 p=5555 u=root n=ansible | changed: [localhost] => (item={'src': 'crontab.j2', 'dest': 'crontab'})
2023-02-07 07:37:30,345 p=5555 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-rotate.sh.j2', 'dest': 'fernet-rotate.sh'})
2023-02-07 07:37:31,765 p=5555 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-node-sync.sh.j2', 'dest': 'fernet-node-sync.sh'})
2023-02-07 07:37:33,129 p=5555 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-push.sh.j2', 'dest': 'fernet-push.sh'})
2023-02-07 07:37:34,474 p=5555 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-healthcheck.sh.j2', 'dest': 'fernet-healthcheck.sh'})
2023-02-07 07:37:35,767 p=5555 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa', 'dest': 'id_rsa'})
2023-02-07 07:37:37,260 p=5555 u=root n=ansible | changed: [localhost] => (item={'src': 'ssh_config.j2', 'dest': 'ssh_config'})
2023-02-07 07:37:37,364 p=5555 u=root n=ansible | TASK [keystone : Copying files for keystone-ssh] *******************************
2023-02-07 07:37:38,832 p=5555 u=root n=ansible | changed: [localhost] => (item={'src': 'sshd_config.j2', 'dest': 'sshd_config'})
2023-02-07 07:37:40,119 p=5555 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa.pub', 'dest': 'id_rsa.pub'})
2023-02-07 07:37:40,245 p=5555 u=root n=ansible | TASK [keystone : Check keystone containers] ************************************
2023-02-07 07:37:41,569 p=5555 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-07 07:37:42,576 p=5555 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-07 07:37:43,542 p=5555 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-07 07:37:43,667 p=5555 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-07 07:37:43,724 p=5555 u=root n=ansible | skipping: [localhost]
2023-02-07 07:37:43,962 p=5555 u=root n=ansible | TASK [keystone : Creating keystone database] ***********************************
2023-02-07 07:37:48,288 p=5555 u=root n=ansible | changed: [localhost]
2023-02-07 07:37:48,496 p=5555 u=root n=ansible | TASK [keystone : Creating Keystone database user and setting permissions] ******
2023-02-07 07:37:52,314 p=5555 u=root n=ansible | changed: [localhost]
2023-02-07 07:37:52,437 p=5555 u=root n=ansible | TASK [keystone : Checking for any running keystone_fernet containers] **********
2023-02-07 07:37:53,876 p=5555 u=root n=ansible | ok: [localhost]
2023-02-07 07:37:53,983 p=5555 u=root n=ansible | TASK [keystone : Group nodes where keystone_fernet is running] *****************
2023-02-07 07:37:54,073 p=5555 u=root n=ansible | ok: [localhost]
2023-02-07 07:37:54,175 p=5555 u=root n=ansible | TASK [keystone : Fail if any hosts need bootstrapping and not all hosts targeted] ***
2023-02-07 07:37:54,243 p=5555 u=root n=ansible | skipping: [localhost]
2023-02-07 07:37:54,350 p=5555 u=root n=ansible | TASK [keystone : Running Keystone bootstrap container] *************************
2023-02-07 07:38:03,301 p=5555 u=root n=ansible | changed: [localhost]
2023-02-07 07:38:03,515 p=5555 u=root n=ansible | TASK [keystone : Running Keystone fernet bootstrap container] ******************
2023-02-07 07:38:11,224 p=5555 u=root n=ansible | changed: [localhost]
2023-02-07 07:38:11,325 p=5555 u=root n=ansible | TASK [keystone : Flush handlers] ***********************************************
2023-02-07 07:38:11,326 p=5555 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-ssh container] ********************
2023-02-07 07:38:13,338 p=5555 u=root n=ansible | changed: [localhost]
2023-02-07 07:38:13,339 p=5555 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-fernet container] *****************
2023-02-07 07:38:15,361 p=5555 u=root n=ansible | changed: [localhost]
2023-02-07 07:38:15,362 p=5555 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone container] ************************
2023-02-07 07:38:17,288 p=5555 u=root n=ansible | changed: [localhost]
2023-02-07 07:38:17,407 p=5555 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-07 07:38:17,549 p=5555 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/distribute_fernet.yml for localhost
2023-02-07 07:38:17,695 p=5555 u=root n=ansible | TASK [keystone : Waiting for Keystone SSH port to be UP] ***********************
2023-02-07 07:38:19,014 p=5555 u=root n=ansible | ok: [localhost]
2023-02-07 07:38:19,236 p=5555 u=root n=ansible | TASK [keystone : Run key distribution] *****************************************
2023-02-07 07:38:20,652 p=5555 u=root n=ansible | changed: [localhost]
2023-02-07 07:38:20,758 p=5555 u=root n=ansible | TASK [keystone : Creating admin project, user, role, service, and endpoint] ****
2023-02-07 07:38:29,889 p=5555 u=root n=ansible | changed: [localhost] => (item=RegionOne)
2023-02-07 07:38:30,020 p=5555 u=root n=ansible | TASK [service-ks-register : keystone | Creating services] **********************
2023-02-07 07:38:47,679 p=5555 u=root n=ansible | changed: [localhost] => (item={'name': 'keystone', 'service_type': 'identity'})
2023-02-07 07:38:47,793 p=5555 u=root n=ansible | TASK [service-ks-register : keystone | Creating endpoints] *********************
2023-02-07 07:38:54,630 p=5555 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.141:5000', 'interface': 'internal'})
2023-02-07 07:39:01,168 p=5555 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.141:5000', 'interface': 'public'})
2023-02-07 07:39:01,281 p=5555 u=root n=ansible | TASK [service-ks-register : keystone | Creating projects] **********************
2023-02-07 07:39:01,443 p=5555 u=root n=ansible | TASK [service-ks-register : keystone | Creating users] *************************
2023-02-07 07:39:01,584 p=5555 u=root n=ansible | TASK [service-ks-register : keystone | Creating roles] *************************
2023-02-07 07:39:01,743 p=5555 u=root n=ansible | TASK [service-ks-register : keystone | Granting user roles] ********************
2023-02-07 07:39:02,015 p=5555 u=root n=ansible | TASK [keystone : Creating default user role] ***********************************
2023-02-07 07:39:08,380 p=5555 u=root n=ansible | changed: [localhost]
2023-02-07 07:39:08,485 p=5555 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-07 07:39:08,542 p=5555 u=root n=ansible | skipping: [localhost]
2023-02-07 07:39:08,842 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_opensearch_True

2023-02-07 07:39:08,851 p=5555 u=root n=ansible | PLAY [Apply role opensearch] ***************************************************
2023-02-07 07:39:08,851 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:08,854 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_swift_True

2023-02-07 07:39:08,860 p=5555 u=root n=ansible | PLAY [Apply role swift] ********************************************************
2023-02-07 07:39:08,860 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:08,862 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_ceph_rgw_True

2023-02-07 07:39:08,872 p=5555 u=root n=ansible | PLAY [Apply role ceph-rgw] *****************************************************
2023-02-07 07:39:08,872 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:08,874 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_glance_True

2023-02-07 07:39:08,880 p=5555 u=root n=ansible | PLAY [Apply role glance] *******************************************************
2023-02-07 07:39:08,880 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:08,883 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_ironic_True

2023-02-07 07:39:08,889 p=5555 u=root n=ansible | PLAY [Apply role ironic] *******************************************************
2023-02-07 07:39:08,889 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:08,891 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_cinder_True

2023-02-07 07:39:08,897 p=5555 u=root n=ansible | PLAY [Apply role cinder] *******************************************************
2023-02-07 07:39:08,897 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:08,899 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_placement_True

2023-02-07 07:39:08,904 p=5555 u=root n=ansible | PLAY [Apply role placement] ****************************************************
2023-02-07 07:39:08,904 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:08,906 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_nova_True

2023-02-07 07:39:08,911 p=5555 u=root n=ansible | PLAY [Bootstrap nova API databases] ********************************************
2023-02-07 07:39:08,911 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:08,917 p=5555 u=root n=ansible | PLAY [Bootstrap nova cell databases] *******************************************
2023-02-07 07:39:08,918 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:08,925 p=5555 u=root n=ansible | PLAY [Apply role nova] *********************************************************
2023-02-07 07:39:08,925 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:08,933 p=5555 u=root n=ansible | PLAY [Apply role nova-cell] ****************************************************
2023-02-07 07:39:08,933 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:08,939 p=5555 u=root n=ansible | PLAY [Refresh nova scheduler cell cache] ***************************************
2023-02-07 07:39:08,939 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:08,947 p=5555 u=root n=ansible | PLAY [Reload global Nova super conductor services] *****************************
2023-02-07 07:39:08,948 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:08,953 p=5555 u=root n=ansible | PLAY [Reload Nova cell services] ***********************************************
2023-02-07 07:39:08,953 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:08,958 p=5555 u=root n=ansible | PLAY [Reload global Nova API services] *****************************************
2023-02-07 07:39:08,958 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:08,963 p=5555 u=root n=ansible | PLAY [Run Nova API online data migrations] *************************************
2023-02-07 07:39:08,964 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:08,969 p=5555 u=root n=ansible | PLAY [Run Nova cell online data migrations] ************************************
2023-02-07 07:39:08,969 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:08,971 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_openvswitch_True_enable_ovs_dpdk_False

2023-02-07 07:39:08,976 p=5555 u=root n=ansible | PLAY [Apply role openvswitch] **************************************************
2023-02-07 07:39:08,976 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:08,979 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_openvswitch_True_enable_ovs_dpdk_True

2023-02-07 07:39:08,984 p=5555 u=root n=ansible | PLAY [Apply role ovs-dpdk] *****************************************************
2023-02-07 07:39:08,985 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:08,987 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_ovn_True

2023-02-07 07:39:08,992 p=5555 u=root n=ansible | PLAY [Apply role ovn-db] *******************************************************
2023-02-07 07:39:08,992 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:08,998 p=5555 u=root n=ansible | PLAY [Apply role ovn-controller] ***********************************************
2023-02-07 07:39:08,999 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,005 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_neutron_True

2023-02-07 07:39:09,011 p=5555 u=root n=ansible | PLAY [Apply role neutron] ******************************************************
2023-02-07 07:39:09,011 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,013 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_kuryr_True

2023-02-07 07:39:09,018 p=5555 u=root n=ansible | PLAY [Apply role kuryr] ********************************************************
2023-02-07 07:39:09,018 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,020 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_hacluster_True

2023-02-07 07:39:09,025 p=5555 u=root n=ansible | PLAY [Apply role hacluster] ****************************************************
2023-02-07 07:39:09,025 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,027 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_heat_True

2023-02-07 07:39:09,037 p=5555 u=root n=ansible | PLAY [Apply role heat] *********************************************************
2023-02-07 07:39:09,037 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,038 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_horizon_True

2023-02-07 07:39:09,044 p=5555 u=root n=ansible | PLAY [Apply role horizon] ******************************************************
2023-02-07 07:39:09,044 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,046 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_murano_True

2023-02-07 07:39:09,053 p=5555 u=root n=ansible | PLAY [Apply role murano] *******************************************************
2023-02-07 07:39:09,053 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,056 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_solum_True

2023-02-07 07:39:09,065 p=5555 u=root n=ansible | PLAY [Apply role solum] ********************************************************
2023-02-07 07:39:09,065 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,067 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_magnum_True

2023-02-07 07:39:09,077 p=5555 u=root n=ansible | PLAY [Apply role magnum] *******************************************************
2023-02-07 07:39:09,077 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,082 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_mistral_True

2023-02-07 07:39:09,088 p=5555 u=root n=ansible | PLAY [Apply role mistral] ******************************************************
2023-02-07 07:39:09,088 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,090 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_sahara_True

2023-02-07 07:39:09,096 p=5555 u=root n=ansible | PLAY [Apply role sahara] *******************************************************
2023-02-07 07:39:09,096 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,098 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_manila_True

2023-02-07 07:39:09,104 p=5555 u=root n=ansible | PLAY [Apply role manila] *******************************************************
2023-02-07 07:39:09,104 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,106 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_gnocchi_True

2023-02-07 07:39:09,111 p=5555 u=root n=ansible | PLAY [Apply role gnocchi] ******************************************************
2023-02-07 07:39:09,111 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,114 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_ceilometer_True

2023-02-07 07:39:09,119 p=5555 u=root n=ansible | PLAY [Apply role ceilometer] ***************************************************
2023-02-07 07:39:09,119 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,122 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_aodh_True

2023-02-07 07:39:09,126 p=5555 u=root n=ansible | PLAY [Apply role aodh] *********************************************************
2023-02-07 07:39:09,127 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,129 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_barbican_True

2023-02-07 07:39:09,134 p=5555 u=root n=ansible | PLAY [Apply role barbican] *****************************************************
2023-02-07 07:39:09,135 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,137 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_cyborg_True

2023-02-07 07:39:09,141 p=5555 u=root n=ansible | PLAY [Apply role cyborg] *******************************************************
2023-02-07 07:39:09,141 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,145 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_designate_True

2023-02-07 07:39:09,150 p=5555 u=root n=ansible | PLAY [Apply role designate] ****************************************************
2023-02-07 07:39:09,150 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,152 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_trove_True

2023-02-07 07:39:09,157 p=5555 u=root n=ansible | PLAY [Apply role trove] ********************************************************
2023-02-07 07:39:09,157 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,159 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_watcher_True

2023-02-07 07:39:09,164 p=5555 u=root n=ansible | PLAY [Apply role watcher] ******************************************************
2023-02-07 07:39:09,164 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,166 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_grafana_True

2023-02-07 07:39:09,172 p=5555 u=root n=ansible | PLAY [Apply role grafana] ******************************************************
2023-02-07 07:39:09,172 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,174 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_cloudkitty_True

2023-02-07 07:39:09,179 p=5555 u=root n=ansible | PLAY [Apply role cloudkitty] ***************************************************
2023-02-07 07:39:09,179 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,181 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_freezer_True

2023-02-07 07:39:09,186 p=5555 u=root n=ansible | PLAY [Apply role freezer] ******************************************************
2023-02-07 07:39:09,186 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,189 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_senlin_True

2023-02-07 07:39:09,198 p=5555 u=root n=ansible | PLAY [Apply role senlin] *******************************************************
2023-02-07 07:39:09,198 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,200 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_tacker_True

2023-02-07 07:39:09,205 p=5555 u=root n=ansible | PLAY [Apply role tacker] *******************************************************
2023-02-07 07:39:09,205 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,207 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_octavia_True

2023-02-07 07:39:09,212 p=5555 u=root n=ansible | PLAY [Apply role octavia] ******************************************************
2023-02-07 07:39:09,212 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,215 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_zun_True

2023-02-07 07:39:09,220 p=5555 u=root n=ansible | PLAY [Apply role zun] **********************************************************
2023-02-07 07:39:09,221 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,222 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_skydive_True

2023-02-07 07:39:09,228 p=5555 u=root n=ansible | PLAY [Apply role skydive] ******************************************************
2023-02-07 07:39:09,228 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,231 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_vitrage_True

2023-02-07 07:39:09,236 p=5555 u=root n=ansible | PLAY [Apply role vitrage] ******************************************************
2023-02-07 07:39:09,236 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,238 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_blazar_True

2023-02-07 07:39:09,243 p=5555 u=root n=ansible | PLAY [Apply role blazar] *******************************************************
2023-02-07 07:39:09,243 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,246 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_masakari_True

2023-02-07 07:39:09,250 p=5555 u=root n=ansible | PLAY [Apply role masakari] *****************************************************
2023-02-07 07:39:09,250 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,252 p=5555 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_venus_True

2023-02-07 07:39:09,257 p=5555 u=root n=ansible | PLAY [Apply role venus] ********************************************************
2023-02-07 07:39:09,258 p=5555 u=root n=ansible | skipping: no hosts matched
2023-02-07 07:39:09,258 p=5555 u=root n=ansible | PLAY RECAP *********************************************************************
2023-02-07 07:39:09,258 p=5555 u=root n=ansible | localhost                  : ok=62   changed=43   unreachable=0    failed=0    skipped=24   rescued=0    ignored=0   
