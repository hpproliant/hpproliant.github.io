2023-02-15 15:36:30,415 p=6008 u=root n=ansible | [WARNING]: Invalid characters were found in group names but not replaced, use
-vvvv to see details

2023-02-15 15:36:34,207 p=6008 u=root n=ansible | PLAY [Gather facts for all hosts] **********************************************
2023-02-15 15:36:34,532 p=6008 u=root n=ansible | TASK [Gather facts] ************************************************************
2023-02-15 15:36:37,186 p=6008 u=root n=ansible | ok: [localhost]
2023-02-15 15:36:37,335 p=6008 u=root n=ansible | TASK [Group hosts to determine when using --limit] *****************************
2023-02-15 15:36:37,410 p=6008 u=root n=ansible | ok: [localhost]
2023-02-15 15:36:37,615 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
all_using_limit_True

2023-02-15 15:36:37,628 p=6008 u=root n=ansible | PLAY [Gather facts for all hosts (if using --limit)] ***************************
2023-02-15 15:36:37,628 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:37,633 p=6008 u=root n=ansible | PLAY [Group hosts based on configuration] **************************************
2023-02-15 15:36:37,874 p=6008 u=root n=ansible | TASK [Group hosts based on Kolla action] ***************************************
2023-02-15 15:36:37,964 p=6008 u=root n=ansible | ok: [localhost]
2023-02-15 15:36:38,070 p=6008 u=root n=ansible | TASK [Group hosts based on enabled services] ***********************************
2023-02-15 15:36:38,307 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_aodh_False)
2023-02-15 15:36:38,327 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_barbican_False)
2023-02-15 15:36:38,343 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_blazar_False)
2023-02-15 15:36:38,358 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_ceilometer_False)
2023-02-15 15:36:38,375 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_ceph_rgw_False)
2023-02-15 15:36:38,393 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_cinder_False)
2023-02-15 15:36:38,407 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_cloudkitty_False)
2023-02-15 15:36:38,426 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_collectd_False)
2023-02-15 15:36:38,441 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_cyborg_False)
2023-02-15 15:36:38,458 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_designate_False)
2023-02-15 15:36:38,477 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_etcd_False)
2023-02-15 15:36:38,496 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_freezer_False)
2023-02-15 15:36:38,515 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_glance_False)
2023-02-15 15:36:38,529 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_gnocchi_False)
2023-02-15 15:36:38,543 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_grafana_False)
2023-02-15 15:36:38,558 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_hacluster_False)
2023-02-15 15:36:38,572 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_heat_False)
2023-02-15 15:36:38,592 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_horizon_False)
2023-02-15 15:36:38,610 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_influxdb_False)
2023-02-15 15:36:38,624 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_ironic_True)
2023-02-15 15:36:38,640 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_iscsid_False)
2023-02-15 15:36:38,655 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_keystone_True)
2023-02-15 15:36:38,669 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_kuryr_False)
2023-02-15 15:36:38,683 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_loadbalancer_False)
2023-02-15 15:36:38,697 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_magnum_False)
2023-02-15 15:36:38,711 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_manila_False)
2023-02-15 15:36:38,724 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_mariadb_False)
2023-02-15 15:36:38,739 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_masakari_False)
2023-02-15 15:36:38,757 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_memcached_False)
2023-02-15 15:36:38,773 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_mistral_False)
2023-02-15 15:36:38,787 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_multipathd_False)
2023-02-15 15:36:38,805 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_murano_False)
2023-02-15 15:36:38,821 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_neutron_True)
2023-02-15 15:36:38,838 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_nova_False)
2023-02-15 15:36:38,855 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_octavia_False)
2023-02-15 15:36:38,871 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_False)
2023-02-15 15:36:38,887 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_dashboards_False)
2023-02-15 15:36:38,902 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_openvswitch_True_enable_ovs_dpdk_False)
2023-02-15 15:36:38,917 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_outward_rabbitmq_False)
2023-02-15 15:36:38,932 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_ovn_False)
2023-02-15 15:36:38,947 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_placement_False)
2023-02-15 15:36:38,963 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_prometheus_False)
2023-02-15 15:36:38,978 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_rabbitmq_True)
2023-02-15 15:36:38,995 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_redis_False)
2023-02-15 15:36:39,010 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_sahara_False)
2023-02-15 15:36:39,027 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_senlin_False)
2023-02-15 15:36:39,043 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_skydive_False)
2023-02-15 15:36:39,058 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_solum_False)
2023-02-15 15:36:39,074 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_swift_False)
2023-02-15 15:36:39,089 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_tacker_False)
2023-02-15 15:36:39,102 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_telegraf_False)
2023-02-15 15:36:39,118 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_trove_False)
2023-02-15 15:36:39,131 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_venus_False)
2023-02-15 15:36:39,146 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_vitrage_False)
2023-02-15 15:36:39,157 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_watcher_False)
2023-02-15 15:36:39,169 p=6008 u=root n=ansible | ok: [localhost] => (item=enable_zun_False)
2023-02-15 15:36:39,478 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
kolla_action_precheck

2023-02-15 15:36:39,480 p=6008 u=root n=ansible | PLAY [Apply role prechecks] ****************************************************
2023-02-15 15:36:39,480 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:36:39,494 p=6008 u=root n=ansible | PLAY [Apply role common] *******************************************************
2023-02-15 15:36:39,685 p=6008 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-15 15:36:39,887 p=6008 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/common/tasks/deploy.yml for localhost
2023-02-15 15:36:39,989 p=6008 u=root n=ansible | TASK [common : Ensuring config directories exist] ******************************
2023-02-15 15:36:41,045 p=6008 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'cron'}, 'cron'])
2023-02-15 15:36:41,124 p=6008 u=root n=ansible | skipping: [localhost] => (item=[{'service_name': 'fluentd'}, 'fluentd']) 
2023-02-15 15:36:41,638 p=6008 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'kolla-toolbox'}, 'kolla-toolbox'])
2023-02-15 15:36:41,779 p=6008 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-15 15:36:41,836 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:41,965 p=6008 u=root n=ansible | TASK [common : Copying over config.json files for services] ********************
2023-02-15 15:36:42,131 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:36:44,151 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:36:45,262 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:36:45,507 p=6008 u=root n=ansible | TASK [common : Find custom fluentd input config files] *************************
2023-02-15 15:36:45,637 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:45,918 p=6008 u=root n=ansible | TASK [common : Find custom fluentd filter config files] ************************
2023-02-15 15:36:46,037 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:46,323 p=6008 u=root n=ansible | TASK [common : Find custom fluentd format config files] ************************
2023-02-15 15:36:46,431 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:46,666 p=6008 u=root n=ansible | TASK [common : Find custom fluentd output config files] ************************
2023-02-15 15:36:46,837 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:47,016 p=6008 u=root n=ansible | TASK [common : Copying over td-agent.conf] *************************************
2023-02-15 15:36:47,148 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:36:47,279 p=6008 u=root n=ansible | TASK [common : Copying over cron logrotate config file] ************************
2023-02-15 15:36:48,717 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:36:48,920 p=6008 u=root n=ansible | TASK [common : Ensure RabbitMQ Erlang cookie exists] ***************************
2023-02-15 15:36:50,312 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:36:50,439 p=6008 u=root n=ansible | TASK [common : Ensuring config directories have correct owner and permission] ***
2023-02-15 15:36:50,625 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:36:50,652 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:36:51,183 p=6008 u=root n=ansible | ok: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:36:51,332 p=6008 u=root n=ansible | TASK [common : Copy rabbitmq-env.conf to kolla toolbox] ************************
2023-02-15 15:36:52,923 p=6008 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/rabbitmq-env.conf.j2)
2023-02-15 15:36:53,047 p=6008 u=root n=ansible | TASK [common : Copy rabbitmq erl_inetrc to kolla toolbox] **********************
2023-02-15 15:36:54,500 p=6008 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/erl_inetrc.j2)
2023-02-15 15:36:54,648 p=6008 u=root n=ansible | TASK [common : Check common containers] ****************************************
2023-02-15 15:36:54,786 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:36:57,064 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:36:58,183 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:36:58,297 p=6008 u=root n=ansible | TASK [common : Creating log volume] ********************************************
2023-02-15 15:36:59,622 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:36:59,785 p=6008 u=root n=ansible | TASK [common : Link kolla_logs volume to /var/log/kolla] ***********************
2023-02-15 15:37:00,483 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:00,626 p=6008 u=root n=ansible | TASK [common : Flush handlers] *************************************************
2023-02-15 15:37:00,627 p=6008 u=root n=ansible | RUNNING HANDLER [common : Restart kolla-toolbox container] *********************
2023-02-15 15:37:03,286 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:03,288 p=6008 u=root n=ansible | RUNNING HANDLER [common : Initializing toolbox container using normal user] ****
2023-02-15 15:37:08,002 p=6008 u=root n=ansible | ok: [localhost]
2023-02-15 15:37:08,004 p=6008 u=root n=ansible | RUNNING HANDLER [common : Restart cron container] ******************************
2023-02-15 15:37:10,022 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:10,413 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_loadbalancer_True

2023-02-15 15:37:10,424 p=6008 u=root n=ansible | PLAY [Apply role loadbalancer] *************************************************
2023-02-15 15:37:10,425 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:10,427 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_collectd_True

2023-02-15 15:37:10,434 p=6008 u=root n=ansible | PLAY [Apply role collectd] *****************************************************
2023-02-15 15:37:10,434 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:10,436 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_influxdb_True

2023-02-15 15:37:10,441 p=6008 u=root n=ansible | PLAY [Apply role influxdb] *****************************************************
2023-02-15 15:37:10,441 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:10,443 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_telegraf_True

2023-02-15 15:37:10,448 p=6008 u=root n=ansible | PLAY [Apply role telegraf] *****************************************************
2023-02-15 15:37:10,448 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:10,449 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_redis_True

2023-02-15 15:37:10,455 p=6008 u=root n=ansible | PLAY [Apply role redis] ********************************************************
2023-02-15 15:37:10,455 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:10,456 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_mariadb_True

2023-02-15 15:37:10,458 p=6008 u=root n=ansible | PLAY [Apply role mariadb] ******************************************************
2023-02-15 15:37:10,458 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:10,460 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_memcached_True

2023-02-15 15:37:10,465 p=6008 u=root n=ansible | PLAY [Apply role memcached] ****************************************************
2023-02-15 15:37:10,465 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:10,471 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_prometheus_True

2023-02-15 15:37:10,477 p=6008 u=root n=ansible | PLAY [Apply role prometheus] ***************************************************
2023-02-15 15:37:10,477 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:10,479 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_iscsid_True

2023-02-15 15:37:10,486 p=6008 u=root n=ansible | PLAY [Apply role iscsi] ********************************************************
2023-02-15 15:37:10,486 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:10,488 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_multipathd_True

2023-02-15 15:37:10,493 p=6008 u=root n=ansible | PLAY [Apply role multipathd] ***************************************************
2023-02-15 15:37:10,493 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:10,498 p=6008 u=root n=ansible | PLAY [Apply role rabbitmq] *****************************************************
2023-02-15 15:37:10,694 p=6008 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-15 15:37:10,899 p=6008 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/deploy.yml for localhost
2023-02-15 15:37:11,006 p=6008 u=root n=ansible | TASK [rabbitmq : Ensuring config directories exist] ****************************
2023-02-15 15:37:11,710 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 15:37:11,827 p=6008 u=root n=ansible | TASK [rabbitmq : Copying over config.json files for services] ******************
2023-02-15 15:37:13,130 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 15:37:13,259 p=6008 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq-env.conf] *******************************
2023-02-15 15:37:14,975 p=6008 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq-env.conf.j2)
2023-02-15 15:37:15,081 p=6008 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq.conf] ***********************************
2023-02-15 15:37:16,693 p=6008 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq.conf.j2)
2023-02-15 15:37:16,819 p=6008 u=root n=ansible | TASK [rabbitmq : Copying over erl_inetrc] **************************************
2023-02-15 15:37:18,221 p=6008 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/erl_inetrc.j2)
2023-02-15 15:37:18,359 p=6008 u=root n=ansible | TASK [rabbitmq : Copying over advanced.config] *********************************
2023-02-15 15:37:19,703 p=6008 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/advanced.config.j2)
2023-02-15 15:37:19,830 p=6008 u=root n=ansible | TASK [rabbitmq : Copying over definitions.json] ********************************
2023-02-15 15:37:21,303 p=6008 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/definitions.json.j2)
2023-02-15 15:37:21,410 p=6008 u=root n=ansible | TASK [rabbitmq : Copying over enabled_plugins] *********************************
2023-02-15 15:37:22,613 p=6008 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/enabled_plugins.j2)
2023-02-15 15:37:22,734 p=6008 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-15 15:37:22,790 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:37:22,936 p=6008 u=root n=ansible | TASK [rabbitmq : Check rabbitmq containers] ************************************
2023-02-15 15:37:24,288 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 15:37:24,425 p=6008 u=root n=ansible | TASK [rabbitmq : Creating rabbitmq volume] *************************************
2023-02-15 15:37:25,645 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:25,777 p=6008 u=root n=ansible | TASK [rabbitmq : Running RabbitMQ bootstrap container] *************************
2023-02-15 15:37:28,047 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:28,169 p=6008 u=root n=ansible | TASK [rabbitmq : Flush handlers] ***********************************************
2023-02-15 15:37:28,170 p=6008 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart first rabbitmq container] ******************
2023-02-15 15:37:28,517 p=6008 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/restart_services.yml for localhost
2023-02-15 15:37:28,518 p=6008 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart rabbitmq container] ************************
2023-02-15 15:37:30,232 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:30,234 p=6008 u=root n=ansible | RUNNING HANDLER [rabbitmq : Waiting for rabbitmq to start] *********************
2023-02-15 15:37:49,469 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:37:49,481 p=6008 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart remaining rabbitmq containers] *************
2023-02-15 15:37:49,827 p=6008 u=root n=ansible | skipping: [localhost] => (item=localhost) 
2023-02-15 15:37:50,220 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_outward_rabbitmq_True

2023-02-15 15:37:50,223 p=6008 u=root n=ansible | PLAY [Apply role rabbitmq (outward)] *******************************************
2023-02-15 15:37:50,224 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:50,225 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_etcd_True

2023-02-15 15:37:50,239 p=6008 u=root n=ansible | PLAY [Apply role etcd] *********************************************************
2023-02-15 15:37:50,239 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:37:50,254 p=6008 u=root n=ansible | PLAY [Apply role keystone] *****************************************************
2023-02-15 15:37:50,452 p=6008 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:37:50,735 p=6008 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/deploy.yml for localhost
2023-02-15 15:37:50,845 p=6008 u=root n=ansible | TASK [keystone : Ensuring config directories exist] ****************************
2023-02-15 15:37:51,903 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 15:37:52,413 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:37:53,006 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:37:53,176 p=6008 u=root n=ansible | TASK [keystone : Check if policies shall be overwritten] ***********************
2023-02-15 15:37:53,359 p=6008 u=root n=ansible | TASK [keystone : Set keystone policy file] *************************************
2023-02-15 15:37:53,407 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:37:53,652 p=6008 u=root n=ansible | TASK [keystone : Check if Keystone domain-specific config is supplied] *********
2023-02-15 15:37:54,179 p=6008 u=root n=ansible | ok: [localhost]
2023-02-15 15:37:54,302 p=6008 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:37:54,370 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:37:54,475 p=6008 u=root n=ansible | TASK [keystone : Copying over config.json files for services] ******************
2023-02-15 15:37:56,011 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 15:37:57,040 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:37:58,146 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:37:58,289 p=6008 u=root n=ansible | TASK [keystone : Copying over keystone.conf] ***********************************
2023-02-15 15:38:00,474 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 15:38:00,493 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:38:02,132 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:38:02,246 p=6008 u=root n=ansible | TASK [keystone : Copying keystone-startup script for keystone] *****************
2023-02-15 15:38:03,799 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:03,913 p=6008 u=root n=ansible | TASK [keystone : Create Keystone domain-specific config directory] *************
2023-02-15 15:38:04,449 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:38:04,673 p=6008 u=root n=ansible | TASK [keystone : Get file list in custom domains folder] ***********************
2023-02-15 15:38:04,716 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:38:04,838 p=6008 u=root n=ansible | TASK [keystone : Copying Keystone Domain specific settings] ********************
2023-02-15 15:38:04,997 p=6008 u=root n=ansible | TASK [keystone : Copying over existing policy file] ****************************
2023-02-15 15:38:05,408 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}}) 
2023-02-15 15:38:05,427 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:38:05,463 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:38:05,611 p=6008 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:38:05,679 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:38:05,782 p=6008 u=root n=ansible | TASK [keystone : Copying over wsgi-keystone.conf] ******************************
2023-02-15 15:38:07,560 p=6008 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/keystone/templates/wsgi-keystone.conf.j2)
2023-02-15 15:38:07,765 p=6008 u=root n=ansible | TASK [keystone : Checking whether keystone-paste.ini file exists] **************
2023-02-15 15:38:08,622 p=6008 u=root n=ansible | ok: [localhost]
2023-02-15 15:38:08,783 p=6008 u=root n=ansible | TASK [keystone : Copying over keystone-paste.ini] ******************************
2023-02-15 15:38:09,285 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:38:09,529 p=6008 u=root n=ansible | TASK [keystone : Generate the required cron jobs for the node] *****************
2023-02-15 15:38:10,182 p=6008 u=root n=ansible | ok: [localhost]
2023-02-15 15:38:10,302 p=6008 u=root n=ansible | TASK [keystone : Set fact with the generated cron jobs for building the crontab later] ***
2023-02-15 15:38:10,382 p=6008 u=root n=ansible | ok: [localhost]
2023-02-15 15:38:10,503 p=6008 u=root n=ansible | TASK [keystone : Copying files for keystone-fernet] ****************************
2023-02-15 15:38:12,177 p=6008 u=root n=ansible | changed: [localhost] => (item={'src': 'crontab.j2', 'dest': 'crontab'})
2023-02-15 15:38:13,676 p=6008 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-rotate.sh.j2', 'dest': 'fernet-rotate.sh'})
2023-02-15 15:38:15,045 p=6008 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-node-sync.sh.j2', 'dest': 'fernet-node-sync.sh'})
2023-02-15 15:38:16,634 p=6008 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-push.sh.j2', 'dest': 'fernet-push.sh'})
2023-02-15 15:38:18,180 p=6008 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-healthcheck.sh.j2', 'dest': 'fernet-healthcheck.sh'})
2023-02-15 15:38:19,692 p=6008 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa', 'dest': 'id_rsa'})
2023-02-15 15:38:21,179 p=6008 u=root n=ansible | changed: [localhost] => (item={'src': 'ssh_config.j2', 'dest': 'ssh_config'})
2023-02-15 15:38:21,333 p=6008 u=root n=ansible | TASK [keystone : Copying files for keystone-ssh] *******************************
2023-02-15 15:38:23,070 p=6008 u=root n=ansible | changed: [localhost] => (item={'src': 'sshd_config.j2', 'dest': 'sshd_config'})
2023-02-15 15:38:24,562 p=6008 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa.pub', 'dest': 'id_rsa.pub'})
2023-02-15 15:38:24,676 p=6008 u=root n=ansible | TASK [keystone : Check keystone containers] ************************************
2023-02-15 15:38:26,103 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 15:38:27,200 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:38:28,339 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:38:28,463 p=6008 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:38:28,518 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:38:28,806 p=6008 u=root n=ansible | TASK [keystone : Creating keystone database] ***********************************
2023-02-15 15:38:33,927 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:34,169 p=6008 u=root n=ansible | TASK [keystone : Creating Keystone database user and setting permissions] ******
2023-02-15 15:38:38,664 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:38,776 p=6008 u=root n=ansible | TASK [keystone : Checking for any running keystone_fernet containers] **********
2023-02-15 15:38:40,541 p=6008 u=root n=ansible | ok: [localhost]
2023-02-15 15:38:40,664 p=6008 u=root n=ansible | TASK [keystone : Group nodes where keystone_fernet is running] *****************
2023-02-15 15:38:40,735 p=6008 u=root n=ansible | ok: [localhost]
2023-02-15 15:38:40,838 p=6008 u=root n=ansible | TASK [keystone : Fail if any hosts need bootstrapping and not all hosts targeted] ***
2023-02-15 15:38:40,947 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:38:41,074 p=6008 u=root n=ansible | TASK [keystone : Running Keystone bootstrap container] *************************
2023-02-15 15:38:56,076 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:38:56,291 p=6008 u=root n=ansible | TASK [keystone : Running Keystone fernet bootstrap container] ******************
2023-02-15 15:39:04,692 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:39:04,812 p=6008 u=root n=ansible | TASK [keystone : Flush handlers] ***********************************************
2023-02-15 15:39:04,813 p=6008 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-ssh container] ********************
2023-02-15 15:39:06,798 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:39:06,800 p=6008 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-fernet container] *****************
2023-02-15 15:39:08,905 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:39:08,908 p=6008 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone container] ************************
2023-02-15 15:39:11,064 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:39:11,185 p=6008 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:39:11,370 p=6008 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/distribute_fernet.yml for localhost
2023-02-15 15:39:11,516 p=6008 u=root n=ansible | TASK [keystone : Waiting for Keystone SSH port to be UP] ***********************
2023-02-15 15:39:12,765 p=6008 u=root n=ansible | ok: [localhost]
2023-02-15 15:39:13,023 p=6008 u=root n=ansible | TASK [keystone : Run key distribution] *****************************************
2023-02-15 15:39:14,279 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:39:14,383 p=6008 u=root n=ansible | TASK [keystone : Creating admin project, user, role, service, and endpoint] ****
2023-02-15 15:39:24,764 p=6008 u=root n=ansible | changed: [localhost] => (item=RegionOne)
2023-02-15 15:39:24,885 p=6008 u=root n=ansible | TASK [service-ks-register : keystone | Creating services] **********************
2023-02-15 15:39:51,470 p=6008 u=root n=ansible | changed: [localhost] => (item={'name': 'keystone', 'service_type': 'identity'})
2023-02-15 15:39:51,596 p=6008 u=root n=ansible | TASK [service-ks-register : keystone | Creating endpoints] *********************
2023-02-15 15:39:58,975 p=6008 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.172:5000', 'interface': 'internal'})
2023-02-15 15:40:05,494 p=6008 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.172:5000', 'interface': 'public'})
2023-02-15 15:40:05,625 p=6008 u=root n=ansible | TASK [service-ks-register : keystone | Creating projects] **********************
2023-02-15 15:40:05,787 p=6008 u=root n=ansible | TASK [service-ks-register : keystone | Creating users] *************************
2023-02-15 15:40:05,937 p=6008 u=root n=ansible | TASK [service-ks-register : keystone | Creating roles] *************************
2023-02-15 15:40:06,116 p=6008 u=root n=ansible | TASK [service-ks-register : keystone | Granting user roles] ********************
2023-02-15 15:40:06,372 p=6008 u=root n=ansible | TASK [keystone : Creating default user role] ***********************************
2023-02-15 15:40:13,632 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:40:13,743 p=6008 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 15:40:13,806 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:40:14,117 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_opensearch_True

2023-02-15 15:40:14,127 p=6008 u=root n=ansible | PLAY [Apply role opensearch] ***************************************************
2023-02-15 15:40:14,127 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:40:14,130 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_swift_True

2023-02-15 15:40:14,137 p=6008 u=root n=ansible | PLAY [Apply role swift] ********************************************************
2023-02-15 15:40:14,137 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:40:14,138 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_ceph_rgw_True

2023-02-15 15:40:14,144 p=6008 u=root n=ansible | PLAY [Apply role ceph-rgw] *****************************************************
2023-02-15 15:40:14,144 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:40:14,145 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_glance_True

2023-02-15 15:40:14,151 p=6008 u=root n=ansible | PLAY [Apply role glance] *******************************************************
2023-02-15 15:40:14,151 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:40:14,164 p=6008 u=root n=ansible | PLAY [Apply role ironic] *******************************************************
2023-02-15 15:40:14,362 p=6008 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 15:40:14,682 p=6008 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/ironic/tasks/deploy.yml for localhost
2023-02-15 15:40:14,809 p=6008 u=root n=ansible | TASK [service-ks-register : ironic | Creating services] ************************
2023-02-15 15:40:22,880 p=6008 u=root n=ansible | changed: [localhost] => (item={'name': 'ironic', 'service_type': 'baremetal'})
2023-02-15 15:40:30,829 p=6008 u=root n=ansible | changed: [localhost] => (item={'name': 'ironic-inspector', 'service_type': 'baremetal-introspection'})
2023-02-15 15:40:30,952 p=6008 u=root n=ansible | TASK [service-ks-register : ironic | Creating endpoints] ***********************
2023-02-15 15:40:38,781 p=6008 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic', 'url': 'http://169.16.1.172:6385', 'interface': 'internal'})
2023-02-15 15:40:47,845 p=6008 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic', 'url': 'http://169.16.1.172:6385', 'interface': 'public'})
2023-02-15 15:40:55,691 p=6008 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic-inspector', 'url': 'http://169.16.1.172:5050', 'interface': 'internal'})
2023-02-15 15:41:04,219 p=6008 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic-inspector', 'url': 'http://169.16.1.172:5050', 'interface': 'public'})
2023-02-15 15:41:04,353 p=6008 u=root n=ansible | TASK [service-ks-register : ironic | Creating projects] ************************
2023-02-15 15:41:13,383 p=6008 u=root n=ansible | changed: [localhost] => (item=service)
2023-02-15 15:41:13,527 p=6008 u=root n=ansible | TASK [service-ks-register : ironic | Creating users] ***************************
2023-02-15 15:41:23,319 p=6008 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic', 'project': 'service'})
2023-02-15 15:41:33,658 p=6008 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic-inspector', 'project': 'service'})
2023-02-15 15:41:33,663 p=6008 u=root n=ansible | [WARNING]: Module did not set no_log for update_password

2023-02-15 15:41:33,817 p=6008 u=root n=ansible | TASK [service-ks-register : ironic | Creating roles] ***************************
2023-02-15 15:41:41,010 p=6008 u=root n=ansible | ok: [localhost] => (item=admin)
2023-02-15 15:41:41,148 p=6008 u=root n=ansible | TASK [service-ks-register : ironic | Granting user roles] **********************
2023-02-15 15:41:54,941 p=6008 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic', 'role': 'admin', 'project': 'service'})
2023-02-15 15:42:07,862 p=6008 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic-inspector', 'role': 'admin', 'project': 'service'})
2023-02-15 15:42:08,132 p=6008 u=root n=ansible | TASK [module-load : Load modules] **********************************************
2023-02-15 15:42:09,452 p=6008 u=root n=ansible | changed: [localhost] => (item=iscsi_tcp)
2023-02-15 15:42:09,568 p=6008 u=root n=ansible | TASK [module-load : Persist modules via modules-load.d] ************************
2023-02-15 15:42:10,672 p=6008 u=root n=ansible | changed: [localhost] => (item=iscsi_tcp)
2023-02-15 15:42:10,782 p=6008 u=root n=ansible | TASK [module-load : Drop module persistence] ***********************************
2023-02-15 15:42:10,864 p=6008 u=root n=ansible | skipping: [localhost] => (item=iscsi_tcp) 
2023-02-15 15:42:11,077 p=6008 u=root n=ansible | TASK [ironic : Ensuring config directories exist] ******************************
2023-02-15 15:42:11,963 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 15:42:12,641 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:42:13,133 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 15:42:13,618 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:42:14,189 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:42:14,691 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:42:14,850 p=6008 u=root n=ansible | TASK [ironic : Check if Ironic policies shall be overwritten] ******************
2023-02-15 15:42:15,040 p=6008 u=root n=ansible | TASK [ironic : Check if Ironic Inspector policies shall be overwritten] ********
2023-02-15 15:42:15,197 p=6008 u=root n=ansible | TASK [ironic : Set ironic policy file] *****************************************
2023-02-15 15:42:15,244 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:42:15,349 p=6008 u=root n=ansible | TASK [ironic : Set ironic-inspector policy file] *******************************
2023-02-15 15:42:15,400 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:42:15,567 p=6008 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 15:42:15,649 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:42:15,788 p=6008 u=root n=ansible | TASK [ironic : Copying over config.json files for services] ********************
2023-02-15 15:42:17,384 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 15:42:18,772 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:42:20,206 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 15:42:21,386 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:42:22,610 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:42:23,739 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:42:23,883 p=6008 u=root n=ansible | TASK [ironic : Copying over ironic.conf] ***************************************
2023-02-15 15:42:26,578 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 15:42:28,427 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:42:28,447 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 15:42:28,457 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:42:28,472 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:42:28,483 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:42:28,658 p=6008 u=root n=ansible | TASK [ironic : Copying over inspector.conf] ************************************
2023-02-15 15:42:31,090 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:42:31,190 p=6008 u=root n=ansible | TASK [ironic : Copying over dnsmasq.conf] **************************************
2023-02-15 15:42:33,256 p=6008 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic-dnsmasq.conf.j2)
2023-02-15 15:42:33,362 p=6008 u=root n=ansible | TASK [ironic : Copying pxelinux.cfg default] ***********************************
2023-02-15 15:42:33,963 p=6008 u=root n=ansible | skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/pxelinux.default.j2) 
2023-02-15 15:42:34,091 p=6008 u=root n=ansible | TASK [ironic : Copying ironic_pxe_uefi.cfg default] ****************************
2023-02-15 15:42:34,669 p=6008 u=root n=ansible | skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic_pxe_uefi.default.j2) 
2023-02-15 15:42:34,783 p=6008 u=root n=ansible | TASK [ironic : Copying ironic-agent kernel and initramfs (PXE)] ****************
2023-02-15 15:42:35,355 p=6008 u=root n=ansible | skipping: [localhost] => (item=ironic-agent.kernel) 
2023-02-15 15:42:35,894 p=6008 u=root n=ansible | skipping: [localhost] => (item=ironic-agent.initramfs) 
2023-02-15 15:42:36,464 p=6008 u=root n=ansible | skipping: [localhost] => (item=ir-deploy-redfish.efiboot) 
2023-02-15 15:42:36,985 p=6008 u=root n=ansible | skipping: [localhost] => (item=rhel009_wholedisk_image.qcow2) 
2023-02-15 15:42:37,108 p=6008 u=root n=ansible | TASK [ironic : Copying ironic-agent kernel and initramfs (iPXE)] ***************
2023-02-15 15:42:39,906 p=6008 u=root n=ansible | changed: [localhost] => (item=ironic-agent.kernel)
2023-02-15 15:42:53,949 p=6008 u=root n=ansible | changed: [localhost] => (item=ironic-agent.initramfs)
2023-02-15 15:42:55,669 p=6008 u=root n=ansible | changed: [localhost] => (item=ir-deploy-redfish.efiboot)
2023-02-15 15:43:13,841 p=6008 u=root n=ansible | changed: [localhost] => (item=rhel009_wholedisk_image.qcow2)
2023-02-15 15:43:14,003 p=6008 u=root n=ansible | TASK [ironic : Copying inspector.ipxe] *****************************************
2023-02-15 15:43:16,025 p=6008 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/inspector.ipxe.j2)
2023-02-15 15:43:16,130 p=6008 u=root n=ansible | TASK [ironic : Copying ironic-http-httpd.conf] *********************************
2023-02-15 15:43:17,869 p=6008 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic-http-httpd.conf.j2)
2023-02-15 15:43:17,992 p=6008 u=root n=ansible | TASK [ironic : Copying over existing Ironic policy file] ***********************
2023-02-15 15:43:18,429 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}}) 
2023-02-15 15:43:18,443 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:43:18,452 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 15:43:18,461 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:43:18,470 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:43:18,475 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:43:18,584 p=6008 u=root n=ansible | TASK [ironic : Copying over existing Ironic Inspector policy file] *************
2023-02-15 15:43:19,015 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}}) 
2023-02-15 15:43:19,030 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:43:19,043 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 15:43:19,056 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:43:19,069 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 15:43:19,080 p=6008 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 15:43:19,201 p=6008 u=root n=ansible | TASK [ironic : Copying over ironic-api-wsgi.conf] ******************************
2023-02-15 15:43:20,832 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:43:20,958 p=6008 u=root n=ansible | TASK [ironic : Check ironic containers] ****************************************
2023-02-15 15:43:22,712 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 15:43:23,914 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:43:25,142 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 15:43:26,258 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:43:27,538 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:43:28,697 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 15:43:28,815 p=6008 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 15:43:28,875 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:43:29,099 p=6008 u=root n=ansible | TASK [ironic : Creating Ironic database] ***************************************
2023-02-15 15:43:33,128 p=6008 u=root n=ansible | changed: [localhost] => (item={'database_name': 'ironic', 'group': 'ironic-api'})
2023-02-15 15:43:37,262 p=6008 u=root n=ansible | changed: [localhost] => (item={'database_name': 'ironic_inspector', 'group': 'ironic-inspector'})
2023-02-15 15:43:37,557 p=6008 u=root n=ansible | TASK [ironic : Creating Ironic database user and setting permissions] **********
2023-02-15 15:43:42,391 p=6008 u=root n=ansible | changed: [localhost] => (item=ironic)
2023-02-15 15:43:46,615 p=6008 u=root n=ansible | changed: [localhost] => (item=ironic_inspector)
2023-02-15 15:43:47,075 p=6008 u=root n=ansible | TASK [ironic : Running Ironic bootstrap container] *****************************
2023-02-15 15:44:03,942 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:04,426 p=6008 u=root n=ansible | TASK [ironic : Running Ironic Inspector bootstrap container] *******************
2023-02-15 15:44:10,768 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:10,886 p=6008 u=root n=ansible | TASK [ironic : Running ironic-tftp bootstrap container] ************************
2023-02-15 15:44:13,431 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:13,555 p=6008 u=root n=ansible | TASK [ironic : Flush handlers] *************************************************
2023-02-15 15:44:13,556 p=6008 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-conductor container] ******************
2023-02-15 15:44:15,733 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:15,736 p=6008 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-api container] ************************
2023-02-15 15:44:17,981 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:17,983 p=6008 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-inspector container] ******************
2023-02-15 15:44:20,228 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:20,231 p=6008 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-tftp container] ***********************
2023-02-15 15:44:23,530 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:23,532 p=6008 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-http container] ***********************
2023-02-15 15:44:28,423 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:28,431 p=6008 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-dnsmasq container] ********************
2023-02-15 15:44:32,516 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:32,873 p=6008 u=root n=ansible | TASK [ironic : Flush and delete ironic-inspector iptables chain] ***************
2023-02-15 15:44:35,214 p=6008 u=root n=ansible | ok: [localhost] => (item=flush)
2023-02-15 15:44:35,668 p=6008 u=root n=ansible | ok: [localhost] => (item=delete-chain)
2023-02-15 15:44:36,011 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_cinder_True

2023-02-15 15:44:36,023 p=6008 u=root n=ansible | PLAY [Apply role cinder] *******************************************************
2023-02-15 15:44:36,024 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:36,026 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_placement_True

2023-02-15 15:44:36,034 p=6008 u=root n=ansible | PLAY [Apply role placement] ****************************************************
2023-02-15 15:44:36,034 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:36,036 p=6008 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_nova_True

2023-02-15 15:44:36,043 p=6008 u=root n=ansible | PLAY [Bootstrap nova API databases] ********************************************
2023-02-15 15:44:36,043 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:36,049 p=6008 u=root n=ansible | PLAY [Bootstrap nova cell databases] *******************************************
2023-02-15 15:44:36,050 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:36,057 p=6008 u=root n=ansible | PLAY [Apply role nova] *********************************************************
2023-02-15 15:44:36,057 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:36,067 p=6008 u=root n=ansible | PLAY [Apply role nova-cell] ****************************************************
2023-02-15 15:44:36,068 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:36,075 p=6008 u=root n=ansible | PLAY [Refresh nova scheduler cell cache] ***************************************
2023-02-15 15:44:36,075 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:36,081 p=6008 u=root n=ansible | PLAY [Reload global Nova super conductor services] *****************************
2023-02-15 15:44:36,082 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:36,090 p=6008 u=root n=ansible | PLAY [Reload Nova cell services] ***********************************************
2023-02-15 15:44:36,090 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:36,097 p=6008 u=root n=ansible | PLAY [Reload global Nova API services] *****************************************
2023-02-15 15:44:36,098 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:36,104 p=6008 u=root n=ansible | PLAY [Run Nova API online data migrations] *************************************
2023-02-15 15:44:36,105 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:36,112 p=6008 u=root n=ansible | PLAY [Run Nova cell online data migrations] ************************************
2023-02-15 15:44:36,112 p=6008 u=root n=ansible | skipping: no hosts matched
2023-02-15 15:44:36,126 p=6008 u=root n=ansible | PLAY [Apply role openvswitch] **************************************************
2023-02-15 15:44:36,319 p=6008 u=root n=ansible | TASK [openvswitch : include_tasks] *********************************************
2023-02-15 15:44:36,591 p=6008 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/openvswitch/tasks/deploy.yml for localhost
2023-02-15 15:44:36,696 p=6008 u=root n=ansible | TASK [module-load : Load modules] **********************************************
2023-02-15 15:44:37,415 p=6008 u=root n=ansible | changed: [localhost] => (item=openvswitch)
2023-02-15 15:44:37,528 p=6008 u=root n=ansible | TASK [module-load : Persist modules via modules-load.d] ************************
2023-02-15 15:44:38,852 p=6008 u=root n=ansible | changed: [localhost] => (item=openvswitch)
2023-02-15 15:44:38,971 p=6008 u=root n=ansible | TASK [module-load : Drop module persistence] ***********************************
2023-02-15 15:44:39,095 p=6008 u=root n=ansible | skipping: [localhost] => (item=openvswitch) 
2023-02-15 15:44:39,312 p=6008 u=root n=ansible | TASK [openvswitch : Ensuring config directories exist] *************************
2023-02-15 15:44:39,996 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:40,511 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:40,628 p=6008 u=root n=ansible | TASK [openvswitch : Copying over config.json files for services] ***************
2023-02-15 15:44:41,942 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:43,101 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:43,206 p=6008 u=root n=ansible | TASK [openvswitch : Copying over start-ovs file for openvswitch-vswitchd] ******
2023-02-15 15:44:44,554 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:44,670 p=6008 u=root n=ansible | TASK [openvswitch : Copying over start-ovsdb-server files for openvswitch-db-server] ***
2023-02-15 15:44:46,356 p=6008 u=root n=ansible | changed: [localhost]
2023-02-15 15:44:46,462 p=6008 u=root n=ansible | TASK [openvswitch : Copying over ovs-vsctl wrapper] ****************************
2023-02-15 15:44:46,732 p=6008 u=root n=ansible | skipping: [localhost]
2023-02-15 15:44:46,856 p=6008 u=root n=ansible | TASK [openvswitch : Check openvswitch containers] ******************************
2023-02-15 15:44:48,403 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:49,521 p=6008 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 15:44:49,699 p=6008 u=root n=ansible | TASK [openvswitch : Flush Handlers] ********************************************
2023-02-15 15:44:49,700 p=6008 u=root n=ansible | [WARNING]: flush_handlers task does not support when conditional

2023-02-15 15:44:49,701 p=6008 u=root n=ansible | RUNNING HANDLER [openvswitch : Restart openvswitch-db-server container] ********
2023-02-15 15:44:57,499 p=6008 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "msg": "'Traceback (most recent call last):\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/client.py\", line 268, in _raise_for_status\\n    response.raise_for_status()\\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 1021, in raise_for_status\\n    raise HTTPError(http_error_msg, response=self)\\nrequests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.42/images/create?tag=14.6.0&fromImage=kolla%2Fopenvswitch-db-server\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \"/tmp/ansible_kolla_docker_payload_mgto34ua/ansible_kolla_docker_payload.zip/ansible/modules/kolla_docker.py\", line 404, in main\\n  File \"/tmp/ansible_kolla_docker_payload_mgto34ua/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 654, in recreate_or_restart_container\\n    self.start_container()\\n  File \"/tmp/ansible_kolla_docker_payload_mgto34ua/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 672, in start_container\\n    self.pull_image()\\n  File \"/tmp/ansible_kolla_docker_payload_mgto34ua/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 453, in pull_image\\n    json.loads(line.strip().decode(\\'utf-8\\')) for line in self.dc.pull(\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/image.py\", line 430, in pull\\n    self._raise_for_status(response)\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/client.py\", line 270, in _raise_for_status\\n    raise create_api_error_from_http_exception(e)\\n  File \"/usr/local/lib/python3.9/site-packages/docker/errors.py\", line 31, in create_api_error_from_http_exception\\n    raise cls(e, response=response, explanation=explanation)\\ndocker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.42/images/create?tag=14.6.0&fromImage=kolla%2Fopenvswitch-db-server: Not Found (\"manifest for kolla/openvswitch-db-server:14.6.0 not found: manifest unknown: manifest unknown\")\\n'"}
2023-02-15 15:44:57,502 p=6008 u=root n=ansible | RUNNING HANDLER [openvswitch : Restart openvswitch-vswitchd container] *********
2023-02-15 15:44:57,510 p=6008 u=root n=ansible | NO MORE HOSTS LEFT *************************************************************
2023-02-15 15:44:57,514 p=6008 u=root n=ansible | PLAY RECAP *********************************************************************
2023-02-15 15:44:57,515 p=6008 u=root n=ansible | localhost                  : ok=101  changed=78   unreachable=0    failed=1    skipped=38   rescued=0    ignored=0   
