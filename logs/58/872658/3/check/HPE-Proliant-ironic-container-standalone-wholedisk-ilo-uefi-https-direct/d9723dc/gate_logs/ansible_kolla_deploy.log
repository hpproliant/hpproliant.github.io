2023-02-15 21:02:20,155 p=6038 u=root n=ansible | [WARNING]: Invalid characters were found in group names but not replaced, use
-vvvv to see details

2023-02-15 21:02:28,456 p=6038 u=root n=ansible | PLAY [Gather facts for all hosts] **********************************************
2023-02-15 21:02:28,877 p=6038 u=root n=ansible | TASK [Gather facts] ************************************************************
2023-02-15 21:02:31,905 p=6038 u=root n=ansible | ok: [localhost]
2023-02-15 21:02:32,021 p=6038 u=root n=ansible | TASK [Group hosts to determine when using --limit] *****************************
2023-02-15 21:02:32,129 p=6038 u=root n=ansible | ok: [localhost]
2023-02-15 21:02:32,333 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
all_using_limit_True

2023-02-15 21:02:32,343 p=6038 u=root n=ansible | PLAY [Gather facts for all hosts (if using --limit)] ***************************
2023-02-15 21:02:32,344 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:02:32,347 p=6038 u=root n=ansible | PLAY [Group hosts based on configuration] **************************************
2023-02-15 21:02:32,512 p=6038 u=root n=ansible | TASK [Group hosts based on Kolla action] ***************************************
2023-02-15 21:02:32,573 p=6038 u=root n=ansible | ok: [localhost]
2023-02-15 21:02:32,686 p=6038 u=root n=ansible | TASK [Group hosts based on enabled services] ***********************************
2023-02-15 21:02:32,946 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_aodh_False)
2023-02-15 21:02:32,967 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_barbican_False)
2023-02-15 21:02:32,992 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_blazar_False)
2023-02-15 21:02:33,015 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_ceilometer_False)
2023-02-15 21:02:33,040 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_ceph_rgw_False)
2023-02-15 21:02:33,066 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_cinder_False)
2023-02-15 21:02:33,091 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_cloudkitty_False)
2023-02-15 21:02:33,114 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_collectd_False)
2023-02-15 21:02:33,139 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_cyborg_False)
2023-02-15 21:02:33,160 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_designate_False)
2023-02-15 21:02:33,182 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_etcd_False)
2023-02-15 21:02:33,204 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_freezer_False)
2023-02-15 21:02:33,228 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_glance_False)
2023-02-15 21:02:33,248 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_gnocchi_False)
2023-02-15 21:02:33,269 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_grafana_False)
2023-02-15 21:02:33,289 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_hacluster_False)
2023-02-15 21:02:33,307 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_heat_False)
2023-02-15 21:02:33,328 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_horizon_False)
2023-02-15 21:02:33,346 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_influxdb_False)
2023-02-15 21:02:33,364 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_ironic_True)
2023-02-15 21:02:33,384 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_iscsid_False)
2023-02-15 21:02:33,402 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_keystone_True)
2023-02-15 21:02:33,423 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_kuryr_False)
2023-02-15 21:02:33,442 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_loadbalancer_False)
2023-02-15 21:02:33,468 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_magnum_False)
2023-02-15 21:02:33,490 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_manila_False)
2023-02-15 21:02:33,510 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_mariadb_False)
2023-02-15 21:02:33,526 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_masakari_False)
2023-02-15 21:02:33,544 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_memcached_False)
2023-02-15 21:02:33,562 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_mistral_False)
2023-02-15 21:02:33,581 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_multipathd_False)
2023-02-15 21:02:33,598 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_murano_False)
2023-02-15 21:02:33,616 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_neutron_True)
2023-02-15 21:02:33,633 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_nova_False)
2023-02-15 21:02:33,650 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_octavia_False)
2023-02-15 21:02:33,669 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_False)
2023-02-15 21:02:33,688 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_dashboards_False)
2023-02-15 21:02:33,707 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_openvswitch_True_enable_ovs_dpdk_False)
2023-02-15 21:02:33,729 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_outward_rabbitmq_False)
2023-02-15 21:02:33,751 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_ovn_False)
2023-02-15 21:02:33,773 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_placement_False)
2023-02-15 21:02:33,794 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_prometheus_False)
2023-02-15 21:02:33,821 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_rabbitmq_True)
2023-02-15 21:02:33,849 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_redis_False)
2023-02-15 21:02:33,874 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_sahara_False)
2023-02-15 21:02:33,902 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_senlin_False)
2023-02-15 21:02:33,925 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_skydive_False)
2023-02-15 21:02:33,945 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_solum_False)
2023-02-15 21:02:33,966 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_swift_False)
2023-02-15 21:02:33,990 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_tacker_False)
2023-02-15 21:02:34,010 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_telegraf_False)
2023-02-15 21:02:34,033 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_trove_False)
2023-02-15 21:02:34,061 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_venus_False)
2023-02-15 21:02:34,085 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_vitrage_False)
2023-02-15 21:02:34,109 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_watcher_False)
2023-02-15 21:02:34,127 p=6038 u=root n=ansible | ok: [localhost] => (item=enable_zun_False)
2023-02-15 21:02:34,563 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
kolla_action_precheck

2023-02-15 21:02:34,567 p=6038 u=root n=ansible | PLAY [Apply role prechecks] ****************************************************
2023-02-15 21:02:34,567 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:02:34,590 p=6038 u=root n=ansible | PLAY [Apply role common] *******************************************************
2023-02-15 21:02:34,900 p=6038 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-15 21:02:35,270 p=6038 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/common/tasks/deploy.yml for localhost
2023-02-15 21:02:35,460 p=6038 u=root n=ansible | TASK [common : Ensuring config directories exist] ******************************
2023-02-15 21:02:36,702 p=6038 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'cron'}, 'cron'])
2023-02-15 21:02:36,768 p=6038 u=root n=ansible | skipping: [localhost] => (item=[{'service_name': 'fluentd'}, 'fluentd']) 
2023-02-15 21:02:37,339 p=6038 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'kolla-toolbox'}, 'kolla-toolbox'])
2023-02-15 21:02:37,498 p=6038 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-15 21:02:37,561 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:02:37,715 p=6038 u=root n=ansible | TASK [common : Copying over config.json files for services] ********************
2023-02-15 21:02:37,944 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:02:40,416 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:02:41,550 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:02:41,751 p=6038 u=root n=ansible | TASK [common : Find custom fluentd input config files] *************************
2023-02-15 21:02:41,905 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:02:42,099 p=6038 u=root n=ansible | TASK [common : Find custom fluentd filter config files] ************************
2023-02-15 21:02:42,224 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:02:42,438 p=6038 u=root n=ansible | TASK [common : Find custom fluentd format config files] ************************
2023-02-15 21:02:42,560 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:02:42,768 p=6038 u=root n=ansible | TASK [common : Find custom fluentd output config files] ************************
2023-02-15 21:02:42,908 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:02:43,013 p=6038 u=root n=ansible | TASK [common : Copying over td-agent.conf] *************************************
2023-02-15 21:02:43,124 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:02:43,237 p=6038 u=root n=ansible | TASK [common : Copying over cron logrotate config file] ************************
2023-02-15 21:02:45,067 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:02:45,179 p=6038 u=root n=ansible | TASK [common : Ensure RabbitMQ Erlang cookie exists] ***************************
2023-02-15 21:02:46,583 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:02:46,754 p=6038 u=root n=ansible | TASK [common : Ensuring config directories have correct owner and permission] ***
2023-02-15 21:02:46,954 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:02:46,976 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:02:47,557 p=6038 u=root n=ansible | ok: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:02:47,664 p=6038 u=root n=ansible | TASK [common : Copy rabbitmq-env.conf to kolla toolbox] ************************
2023-02-15 21:02:49,199 p=6038 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/rabbitmq-env.conf.j2)
2023-02-15 21:02:49,349 p=6038 u=root n=ansible | TASK [common : Copy rabbitmq erl_inetrc to kolla toolbox] **********************
2023-02-15 21:02:50,786 p=6038 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/erl_inetrc.j2)
2023-02-15 21:02:50,966 p=6038 u=root n=ansible | TASK [common : Check common containers] ****************************************
2023-02-15 21:02:51,109 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:02:53,976 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:02:55,101 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:02:55,303 p=6038 u=root n=ansible | TASK [common : Creating log volume] ********************************************
2023-02-15 21:02:56,576 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:02:56,682 p=6038 u=root n=ansible | TASK [common : Link kolla_logs volume to /var/log/kolla] ***********************
2023-02-15 21:02:57,344 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:02:57,486 p=6038 u=root n=ansible | TASK [common : Flush handlers] *************************************************
2023-02-15 21:02:57,487 p=6038 u=root n=ansible | RUNNING HANDLER [common : Restart kolla-toolbox container] *********************
2023-02-15 21:03:02,269 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:03:02,270 p=6038 u=root n=ansible | RUNNING HANDLER [common : Initializing toolbox container using normal user] ****
2023-02-15 21:03:11,145 p=6038 u=root n=ansible | ok: [localhost]
2023-02-15 21:03:11,148 p=6038 u=root n=ansible | RUNNING HANDLER [common : Restart cron container] ******************************
2023-02-15 21:03:13,365 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:03:13,726 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_loadbalancer_True

2023-02-15 21:03:13,738 p=6038 u=root n=ansible | PLAY [Apply role loadbalancer] *************************************************
2023-02-15 21:03:13,738 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:13,740 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_collectd_True

2023-02-15 21:03:13,745 p=6038 u=root n=ansible | PLAY [Apply role collectd] *****************************************************
2023-02-15 21:03:13,746 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:13,747 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_influxdb_True

2023-02-15 21:03:13,753 p=6038 u=root n=ansible | PLAY [Apply role influxdb] *****************************************************
2023-02-15 21:03:13,753 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:13,754 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_telegraf_True

2023-02-15 21:03:13,760 p=6038 u=root n=ansible | PLAY [Apply role telegraf] *****************************************************
2023-02-15 21:03:13,760 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:13,761 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_redis_True

2023-02-15 21:03:13,766 p=6038 u=root n=ansible | PLAY [Apply role redis] ********************************************************
2023-02-15 21:03:13,767 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:13,768 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_mariadb_True

2023-02-15 21:03:13,770 p=6038 u=root n=ansible | PLAY [Apply role mariadb] ******************************************************
2023-02-15 21:03:13,770 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:13,772 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_memcached_True

2023-02-15 21:03:13,776 p=6038 u=root n=ansible | PLAY [Apply role memcached] ****************************************************
2023-02-15 21:03:13,776 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:13,782 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_prometheus_True

2023-02-15 21:03:13,790 p=6038 u=root n=ansible | PLAY [Apply role prometheus] ***************************************************
2023-02-15 21:03:13,790 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:13,792 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_iscsid_True

2023-02-15 21:03:13,797 p=6038 u=root n=ansible | PLAY [Apply role iscsi] ********************************************************
2023-02-15 21:03:13,797 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:13,799 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_multipathd_True

2023-02-15 21:03:13,806 p=6038 u=root n=ansible | PLAY [Apply role multipathd] ***************************************************
2023-02-15 21:03:13,806 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:13,812 p=6038 u=root n=ansible | PLAY [Apply role rabbitmq] *****************************************************
2023-02-15 21:03:14,014 p=6038 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-15 21:03:14,306 p=6038 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/deploy.yml for localhost
2023-02-15 21:03:14,434 p=6038 u=root n=ansible | TASK [rabbitmq : Ensuring config directories exist] ****************************
2023-02-15 21:03:15,183 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 21:03:15,394 p=6038 u=root n=ansible | TASK [rabbitmq : Copying over config.json files for services] ******************
2023-02-15 21:03:16,904 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 21:03:17,133 p=6038 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq-env.conf] *******************************
2023-02-15 21:03:18,796 p=6038 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq-env.conf.j2)
2023-02-15 21:03:18,906 p=6038 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq.conf] ***********************************
2023-02-15 21:03:20,533 p=6038 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq.conf.j2)
2023-02-15 21:03:20,645 p=6038 u=root n=ansible | TASK [rabbitmq : Copying over erl_inetrc] **************************************
2023-02-15 21:03:22,081 p=6038 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/erl_inetrc.j2)
2023-02-15 21:03:22,210 p=6038 u=root n=ansible | TASK [rabbitmq : Copying over advanced.config] *********************************
2023-02-15 21:03:23,774 p=6038 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/advanced.config.j2)
2023-02-15 21:03:23,961 p=6038 u=root n=ansible | TASK [rabbitmq : Copying over definitions.json] ********************************
2023-02-15 21:03:25,439 p=6038 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/definitions.json.j2)
2023-02-15 21:03:25,549 p=6038 u=root n=ansible | TASK [rabbitmq : Copying over enabled_plugins] *********************************
2023-02-15 21:03:27,651 p=6038 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/enabled_plugins.j2)
2023-02-15 21:03:27,780 p=6038 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-15 21:03:27,850 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:03:28,069 p=6038 u=root n=ansible | TASK [rabbitmq : Check rabbitmq containers] ************************************
2023-02-15 21:03:30,057 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 21:03:30,248 p=6038 u=root n=ansible | TASK [rabbitmq : Creating rabbitmq volume] *************************************
2023-02-15 21:03:31,823 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:03:31,985 p=6038 u=root n=ansible | TASK [rabbitmq : Running RabbitMQ bootstrap container] *************************
2023-02-15 21:03:34,986 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:03:35,144 p=6038 u=root n=ansible | TASK [rabbitmq : Flush handlers] ***********************************************
2023-02-15 21:03:35,145 p=6038 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart first rabbitmq container] ******************
2023-02-15 21:03:35,743 p=6038 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/restart_services.yml for localhost
2023-02-15 21:03:35,745 p=6038 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart rabbitmq container] ************************
2023-02-15 21:03:37,816 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:03:37,819 p=6038 u=root n=ansible | RUNNING HANDLER [rabbitmq : Waiting for rabbitmq to start] *********************
2023-02-15 21:03:58,678 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:03:58,683 p=6038 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart remaining rabbitmq containers] *************
2023-02-15 21:03:59,016 p=6038 u=root n=ansible | skipping: [localhost] => (item=localhost) 
2023-02-15 21:03:59,376 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_outward_rabbitmq_True

2023-02-15 21:03:59,379 p=6038 u=root n=ansible | PLAY [Apply role rabbitmq (outward)] *******************************************
2023-02-15 21:03:59,379 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:59,381 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_etcd_True

2023-02-15 21:03:59,394 p=6038 u=root n=ansible | PLAY [Apply role etcd] *********************************************************
2023-02-15 21:03:59,394 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:03:59,408 p=6038 u=root n=ansible | PLAY [Apply role keystone] *****************************************************
2023-02-15 21:03:59,653 p=6038 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:04:00,358 p=6038 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/deploy.yml for localhost
2023-02-15 21:04:00,506 p=6038 u=root n=ansible | TASK [keystone : Ensuring config directories exist] ****************************
2023-02-15 21:04:01,401 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 21:04:01,928 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:04:02,540 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:04:02,759 p=6038 u=root n=ansible | TASK [keystone : Check if policies shall be overwritten] ***********************
2023-02-15 21:04:03,095 p=6038 u=root n=ansible | TASK [keystone : Set keystone policy file] *************************************
2023-02-15 21:04:03,141 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:04:03,368 p=6038 u=root n=ansible | TASK [keystone : Check if Keystone domain-specific config is supplied] *********
2023-02-15 21:04:03,954 p=6038 u=root n=ansible | ok: [localhost]
2023-02-15 21:04:04,100 p=6038 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:04:04,159 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:04:04,272 p=6038 u=root n=ansible | TASK [keystone : Copying over config.json files for services] ******************
2023-02-15 21:04:05,855 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 21:04:07,182 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:04:08,495 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:04:08,719 p=6038 u=root n=ansible | TASK [keystone : Copying over keystone.conf] ***********************************
2023-02-15 21:04:10,743 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 21:04:10,759 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:04:12,695 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:04:12,861 p=6038 u=root n=ansible | TASK [keystone : Copying keystone-startup script for keystone] *****************
2023-02-15 21:04:14,731 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:04:14,847 p=6038 u=root n=ansible | TASK [keystone : Create Keystone domain-specific config directory] *************
2023-02-15 21:04:15,333 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:04:15,562 p=6038 u=root n=ansible | TASK [keystone : Get file list in custom domains folder] ***********************
2023-02-15 21:04:15,607 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:04:15,717 p=6038 u=root n=ansible | TASK [keystone : Copying Keystone Domain specific settings] ********************
2023-02-15 21:04:15,878 p=6038 u=root n=ansible | TASK [keystone : Copying over existing policy file] ****************************
2023-02-15 21:04:16,186 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}}) 
2023-02-15 21:04:16,202 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:04:16,221 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:04:16,329 p=6038 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:04:16,391 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:04:16,506 p=6038 u=root n=ansible | TASK [keystone : Copying over wsgi-keystone.conf] ******************************
2023-02-15 21:04:18,366 p=6038 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/keystone/templates/wsgi-keystone.conf.j2)
2023-02-15 21:04:18,609 p=6038 u=root n=ansible | TASK [keystone : Checking whether keystone-paste.ini file exists] **************
2023-02-15 21:04:19,448 p=6038 u=root n=ansible | ok: [localhost]
2023-02-15 21:04:19,553 p=6038 u=root n=ansible | TASK [keystone : Copying over keystone-paste.ini] ******************************
2023-02-15 21:04:20,052 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:04:20,298 p=6038 u=root n=ansible | TASK [keystone : Generate the required cron jobs for the node] *****************
2023-02-15 21:04:21,090 p=6038 u=root n=ansible | ok: [localhost]
2023-02-15 21:04:21,228 p=6038 u=root n=ansible | TASK [keystone : Set fact with the generated cron jobs for building the crontab later] ***
2023-02-15 21:04:21,320 p=6038 u=root n=ansible | ok: [localhost]
2023-02-15 21:04:21,427 p=6038 u=root n=ansible | TASK [keystone : Copying files for keystone-fernet] ****************************
2023-02-15 21:04:23,098 p=6038 u=root n=ansible | changed: [localhost] => (item={'src': 'crontab.j2', 'dest': 'crontab'})
2023-02-15 21:04:24,659 p=6038 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-rotate.sh.j2', 'dest': 'fernet-rotate.sh'})
2023-02-15 21:04:26,445 p=6038 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-node-sync.sh.j2', 'dest': 'fernet-node-sync.sh'})
2023-02-15 21:04:28,012 p=6038 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-push.sh.j2', 'dest': 'fernet-push.sh'})
2023-02-15 21:04:29,479 p=6038 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-healthcheck.sh.j2', 'dest': 'fernet-healthcheck.sh'})
2023-02-15 21:04:30,920 p=6038 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa', 'dest': 'id_rsa'})
2023-02-15 21:04:32,468 p=6038 u=root n=ansible | changed: [localhost] => (item={'src': 'ssh_config.j2', 'dest': 'ssh_config'})
2023-02-15 21:04:32,586 p=6038 u=root n=ansible | TASK [keystone : Copying files for keystone-ssh] *******************************
2023-02-15 21:04:34,634 p=6038 u=root n=ansible | changed: [localhost] => (item={'src': 'sshd_config.j2', 'dest': 'sshd_config'})
2023-02-15 21:04:36,199 p=6038 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa.pub', 'dest': 'id_rsa.pub'})
2023-02-15 21:04:36,330 p=6038 u=root n=ansible | TASK [keystone : Check keystone containers] ************************************
2023-02-15 21:04:37,959 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 21:04:39,134 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:04:40,501 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:04:40,704 p=6038 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:04:40,763 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:04:40,969 p=6038 u=root n=ansible | TASK [keystone : Creating keystone database] ***********************************
2023-02-15 21:04:46,248 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:04:46,471 p=6038 u=root n=ansible | TASK [keystone : Creating Keystone database user and setting permissions] ******
2023-02-15 21:04:51,384 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:04:51,507 p=6038 u=root n=ansible | TASK [keystone : Checking for any running keystone_fernet containers] **********
2023-02-15 21:04:53,218 p=6038 u=root n=ansible | ok: [localhost]
2023-02-15 21:04:53,411 p=6038 u=root n=ansible | TASK [keystone : Group nodes where keystone_fernet is running] *****************
2023-02-15 21:04:53,540 p=6038 u=root n=ansible | ok: [localhost]
2023-02-15 21:04:53,682 p=6038 u=root n=ansible | TASK [keystone : Fail if any hosts need bootstrapping and not all hosts targeted] ***
2023-02-15 21:04:53,810 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:04:53,950 p=6038 u=root n=ansible | TASK [keystone : Running Keystone bootstrap container] *************************
2023-02-15 21:05:07,532 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:07,753 p=6038 u=root n=ansible | TASK [keystone : Running Keystone fernet bootstrap container] ******************
2023-02-15 21:05:16,538 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:16,687 p=6038 u=root n=ansible | TASK [keystone : Flush handlers] ***********************************************
2023-02-15 21:05:16,688 p=6038 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-ssh container] ********************
2023-02-15 21:05:18,975 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:18,977 p=6038 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-fernet container] *****************
2023-02-15 21:05:21,011 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:21,013 p=6038 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone container] ************************
2023-02-15 21:05:23,092 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:23,232 p=6038 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:05:23,385 p=6038 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/distribute_fernet.yml for localhost
2023-02-15 21:05:23,551 p=6038 u=root n=ansible | TASK [keystone : Waiting for Keystone SSH port to be UP] ***********************
2023-02-15 21:05:24,691 p=6038 u=root n=ansible | ok: [localhost]
2023-02-15 21:05:24,926 p=6038 u=root n=ansible | TASK [keystone : Run key distribution] *****************************************
2023-02-15 21:05:26,284 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:26,458 p=6038 u=root n=ansible | TASK [keystone : Creating admin project, user, role, service, and endpoint] ****
2023-02-15 21:05:37,287 p=6038 u=root n=ansible | changed: [localhost] => (item=RegionOne)
2023-02-15 21:05:37,506 p=6038 u=root n=ansible | TASK [service-ks-register : keystone | Creating services] **********************
2023-02-15 21:06:04,128 p=6038 u=root n=ansible | changed: [localhost] => (item={'name': 'keystone', 'service_type': 'identity'})
2023-02-15 21:06:04,254 p=6038 u=root n=ansible | TASK [service-ks-register : keystone | Creating endpoints] *********************
2023-02-15 21:06:12,126 p=6038 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.164:5000', 'interface': 'internal'})
2023-02-15 21:06:19,571 p=6038 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.164:5000', 'interface': 'public'})
2023-02-15 21:06:19,695 p=6038 u=root n=ansible | TASK [service-ks-register : keystone | Creating projects] **********************
2023-02-15 21:06:19,885 p=6038 u=root n=ansible | TASK [service-ks-register : keystone | Creating users] *************************
2023-02-15 21:06:20,060 p=6038 u=root n=ansible | TASK [service-ks-register : keystone | Creating roles] *************************
2023-02-15 21:06:20,235 p=6038 u=root n=ansible | TASK [service-ks-register : keystone | Granting user roles] ********************
2023-02-15 21:06:20,526 p=6038 u=root n=ansible | TASK [keystone : Creating default user role] ***********************************
2023-02-15 21:06:28,766 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:06:28,878 p=6038 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:06:28,939 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:29,259 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_opensearch_True

2023-02-15 21:06:29,271 p=6038 u=root n=ansible | PLAY [Apply role opensearch] ***************************************************
2023-02-15 21:06:29,272 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:29,275 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_swift_True

2023-02-15 21:06:29,283 p=6038 u=root n=ansible | PLAY [Apply role swift] ********************************************************
2023-02-15 21:06:29,284 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:29,286 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_ceph_rgw_True

2023-02-15 21:06:29,293 p=6038 u=root n=ansible | PLAY [Apply role ceph-rgw] *****************************************************
2023-02-15 21:06:29,294 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:29,296 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_glance_True

2023-02-15 21:06:29,303 p=6038 u=root n=ansible | PLAY [Apply role glance] *******************************************************
2023-02-15 21:06:29,303 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:29,318 p=6038 u=root n=ansible | PLAY [Apply role ironic] *******************************************************
2023-02-15 21:06:29,556 p=6038 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 21:06:29,893 p=6038 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/ironic/tasks/deploy.yml for localhost
2023-02-15 21:06:30,005 p=6038 u=root n=ansible | TASK [service-ks-register : ironic | Creating services] ************************
2023-02-15 21:06:37,960 p=6038 u=root n=ansible | changed: [localhost] => (item={'name': 'ironic', 'service_type': 'baremetal'})
2023-02-15 21:06:45,972 p=6038 u=root n=ansible | changed: [localhost] => (item={'name': 'ironic-inspector', 'service_type': 'baremetal-introspection'})
2023-02-15 21:06:46,107 p=6038 u=root n=ansible | TASK [service-ks-register : ironic | Creating endpoints] ***********************
2023-02-15 21:06:54,303 p=6038 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic', 'url': 'http://169.16.1.164:6385', 'interface': 'internal'})
2023-02-15 21:07:02,849 p=6038 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic', 'url': 'http://169.16.1.164:6385', 'interface': 'public'})
2023-02-15 21:07:11,325 p=6038 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic-inspector', 'url': 'http://169.16.1.164:5050', 'interface': 'internal'})
2023-02-15 21:07:19,966 p=6038 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic-inspector', 'url': 'http://169.16.1.164:5050', 'interface': 'public'})
2023-02-15 21:07:20,087 p=6038 u=root n=ansible | TASK [service-ks-register : ironic | Creating projects] ************************
2023-02-15 21:07:28,983 p=6038 u=root n=ansible | changed: [localhost] => (item=service)
2023-02-15 21:07:29,097 p=6038 u=root n=ansible | TASK [service-ks-register : ironic | Creating users] ***************************
2023-02-15 21:07:38,483 p=6038 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic', 'project': 'service'})
2023-02-15 21:07:47,840 p=6038 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic-inspector', 'project': 'service'})
2023-02-15 21:07:47,848 p=6038 u=root n=ansible | [WARNING]: Module did not set no_log for update_password

2023-02-15 21:07:48,003 p=6038 u=root n=ansible | TASK [service-ks-register : ironic | Creating roles] ***************************
2023-02-15 21:07:54,959 p=6038 u=root n=ansible | ok: [localhost] => (item=admin)
2023-02-15 21:07:55,079 p=6038 u=root n=ansible | TASK [service-ks-register : ironic | Granting user roles] **********************
2023-02-15 21:08:08,030 p=6038 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic', 'role': 'admin', 'project': 'service'})
2023-02-15 21:08:20,753 p=6038 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic-inspector', 'role': 'admin', 'project': 'service'})
2023-02-15 21:08:20,980 p=6038 u=root n=ansible | TASK [module-load : Load modules] **********************************************
2023-02-15 21:08:22,287 p=6038 u=root n=ansible | changed: [localhost] => (item=iscsi_tcp)
2023-02-15 21:08:22,472 p=6038 u=root n=ansible | TASK [module-load : Persist modules via modules-load.d] ************************
2023-02-15 21:08:23,661 p=6038 u=root n=ansible | changed: [localhost] => (item=iscsi_tcp)
2023-02-15 21:08:23,776 p=6038 u=root n=ansible | TASK [module-load : Drop module persistence] ***********************************
2023-02-15 21:08:23,855 p=6038 u=root n=ansible | skipping: [localhost] => (item=iscsi_tcp) 
2023-02-15 21:08:24,095 p=6038 u=root n=ansible | TASK [ironic : Ensuring config directories exist] ******************************
2023-02-15 21:08:25,153 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 21:08:25,680 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:08:26,212 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 21:08:26,854 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:08:27,465 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:08:27,990 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:08:28,281 p=6038 u=root n=ansible | TASK [ironic : Check if Ironic policies shall be overwritten] ******************
2023-02-15 21:08:28,516 p=6038 u=root n=ansible | TASK [ironic : Check if Ironic Inspector policies shall be overwritten] ********
2023-02-15 21:08:28,736 p=6038 u=root n=ansible | TASK [ironic : Set ironic policy file] *****************************************
2023-02-15 21:08:28,797 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:08:28,927 p=6038 u=root n=ansible | TASK [ironic : Set ironic-inspector policy file] *******************************
2023-02-15 21:08:28,987 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:08:29,153 p=6038 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 21:08:29,218 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:08:29,344 p=6038 u=root n=ansible | TASK [ironic : Copying over config.json files for services] ********************
2023-02-15 21:08:30,911 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 21:08:31,992 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:08:33,221 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 21:08:34,395 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:08:35,677 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:08:36,926 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:08:37,046 p=6038 u=root n=ansible | TASK [ironic : Copying over ironic.conf] ***************************************
2023-02-15 21:08:39,779 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 21:08:41,658 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:08:41,671 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 21:08:41,676 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:08:41,684 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:08:41,687 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:08:41,821 p=6038 u=root n=ansible | TASK [ironic : Copying over inspector.conf] ************************************
2023-02-15 21:08:44,344 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:08:44,466 p=6038 u=root n=ansible | TASK [ironic : Copying over dnsmasq.conf] **************************************
2023-02-15 21:08:46,634 p=6038 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic-dnsmasq.conf.j2)
2023-02-15 21:08:46,741 p=6038 u=root n=ansible | TASK [ironic : Copying pxelinux.cfg default] ***********************************
2023-02-15 21:08:47,341 p=6038 u=root n=ansible | skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/pxelinux.default.j2) 
2023-02-15 21:08:47,456 p=6038 u=root n=ansible | TASK [ironic : Copying ironic_pxe_uefi.cfg default] ****************************
2023-02-15 21:08:48,098 p=6038 u=root n=ansible | skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic_pxe_uefi.default.j2) 
2023-02-15 21:08:48,203 p=6038 u=root n=ansible | TASK [ironic : Copying ironic-agent kernel and initramfs (PXE)] ****************
2023-02-15 21:08:48,814 p=6038 u=root n=ansible | skipping: [localhost] => (item=ironic-agent.kernel) 
2023-02-15 21:08:49,308 p=6038 u=root n=ansible | skipping: [localhost] => (item=ironic-agent.initramfs) 
2023-02-15 21:08:49,817 p=6038 u=root n=ansible | skipping: [localhost] => (item=ir-deploy-redfish.efiboot) 
2023-02-15 21:08:50,304 p=6038 u=root n=ansible | skipping: [localhost] => (item=rhel009_wholedisk_image.qcow2) 
2023-02-15 21:08:50,434 p=6038 u=root n=ansible | TASK [ironic : Copying ironic-agent kernel and initramfs (iPXE)] ***************
2023-02-15 21:08:52,571 p=6038 u=root n=ansible | changed: [localhost] => (item=ironic-agent.kernel)
2023-02-15 21:09:01,917 p=6038 u=root n=ansible | changed: [localhost] => (item=ironic-agent.initramfs)
2023-02-15 21:09:03,720 p=6038 u=root n=ansible | changed: [localhost] => (item=ir-deploy-redfish.efiboot)
2023-02-15 21:09:17,228 p=6038 u=root n=ansible | changed: [localhost] => (item=rhel009_wholedisk_image.qcow2)
2023-02-15 21:09:17,378 p=6038 u=root n=ansible | TASK [ironic : Copying inspector.ipxe] *****************************************
2023-02-15 21:09:19,302 p=6038 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/inspector.ipxe.j2)
2023-02-15 21:09:19,479 p=6038 u=root n=ansible | TASK [ironic : Copying ironic-http-httpd.conf] *********************************
2023-02-15 21:09:21,252 p=6038 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic-http-httpd.conf.j2)
2023-02-15 21:09:21,360 p=6038 u=root n=ansible | TASK [ironic : Copying over existing Ironic policy file] ***********************
2023-02-15 21:09:21,712 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}}) 
2023-02-15 21:09:21,725 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:09:21,741 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 21:09:21,755 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:09:21,776 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:09:21,792 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:09:21,957 p=6038 u=root n=ansible | TASK [ironic : Copying over existing Ironic Inspector policy file] *************
2023-02-15 21:09:22,280 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}}) 
2023-02-15 21:09:22,283 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:09:22,292 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 21:09:22,298 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:09:22,305 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:09:22,311 p=6038 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:09:22,489 p=6038 u=root n=ansible | TASK [ironic : Copying over ironic-api-wsgi.conf] ******************************
2023-02-15 21:09:23,980 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:09:24,117 p=6038 u=root n=ansible | TASK [ironic : Check ironic containers] ****************************************
2023-02-15 21:09:25,540 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 21:09:26,683 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:09:27,751 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 21:09:28,929 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:09:30,001 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:09:31,238 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:09:31,350 p=6038 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 21:09:31,402 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:09:31,625 p=6038 u=root n=ansible | TASK [ironic : Creating Ironic database] ***************************************
2023-02-15 21:09:35,683 p=6038 u=root n=ansible | changed: [localhost] => (item={'database_name': 'ironic', 'group': 'ironic-api'})
2023-02-15 21:09:39,757 p=6038 u=root n=ansible | changed: [localhost] => (item={'database_name': 'ironic_inspector', 'group': 'ironic-inspector'})
2023-02-15 21:09:40,058 p=6038 u=root n=ansible | TASK [ironic : Creating Ironic database user and setting permissions] **********
2023-02-15 21:09:44,985 p=6038 u=root n=ansible | changed: [localhost] => (item=ironic)
2023-02-15 21:09:49,095 p=6038 u=root n=ansible | changed: [localhost] => (item=ironic_inspector)
2023-02-15 21:09:49,542 p=6038 u=root n=ansible | TASK [ironic : Running Ironic bootstrap container] *****************************
2023-02-15 21:10:03,481 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:10:04,002 p=6038 u=root n=ansible | TASK [ironic : Running Ironic Inspector bootstrap container] *******************
2023-02-15 21:10:10,714 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:10:10,865 p=6038 u=root n=ansible | TASK [ironic : Running ironic-tftp bootstrap container] ************************
2023-02-15 21:10:13,486 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:10:13,597 p=6038 u=root n=ansible | TASK [ironic : Flush handlers] *************************************************
2023-02-15 21:10:13,598 p=6038 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-conductor container] ******************
2023-02-15 21:10:15,797 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:10:15,800 p=6038 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-api container] ************************
2023-02-15 21:10:18,020 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:10:18,022 p=6038 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-inspector container] ******************
2023-02-15 21:10:20,779 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:10:20,791 p=6038 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-tftp container] ***********************
2023-02-15 21:10:23,868 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:10:23,869 p=6038 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-http container] ***********************
2023-02-15 21:10:26,363 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:10:26,364 p=6038 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-dnsmasq container] ********************
2023-02-15 21:10:35,454 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:10:35,666 p=6038 u=root n=ansible | TASK [ironic : Flush and delete ironic-inspector iptables chain] ***************
2023-02-15 21:10:37,930 p=6038 u=root n=ansible | ok: [localhost] => (item=flush)
2023-02-15 21:10:38,696 p=6038 u=root n=ansible | ok: [localhost] => (item=delete-chain)
2023-02-15 21:10:39,223 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_cinder_True

2023-02-15 21:10:39,236 p=6038 u=root n=ansible | PLAY [Apply role cinder] *******************************************************
2023-02-15 21:10:39,237 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:39,239 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_placement_True

2023-02-15 21:10:39,247 p=6038 u=root n=ansible | PLAY [Apply role placement] ****************************************************
2023-02-15 21:10:39,247 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:39,249 p=6038 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_nova_True

2023-02-15 21:10:39,257 p=6038 u=root n=ansible | PLAY [Bootstrap nova API databases] ********************************************
2023-02-15 21:10:39,258 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:39,267 p=6038 u=root n=ansible | PLAY [Bootstrap nova cell databases] *******************************************
2023-02-15 21:10:39,267 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:39,276 p=6038 u=root n=ansible | PLAY [Apply role nova] *********************************************************
2023-02-15 21:10:39,276 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:39,290 p=6038 u=root n=ansible | PLAY [Apply role nova-cell] ****************************************************
2023-02-15 21:10:39,291 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:39,300 p=6038 u=root n=ansible | PLAY [Refresh nova scheduler cell cache] ***************************************
2023-02-15 21:10:39,300 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:39,309 p=6038 u=root n=ansible | PLAY [Reload global Nova super conductor services] *****************************
2023-02-15 21:10:39,309 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:39,318 p=6038 u=root n=ansible | PLAY [Reload Nova cell services] ***********************************************
2023-02-15 21:10:39,318 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:39,326 p=6038 u=root n=ansible | PLAY [Reload global Nova API services] *****************************************
2023-02-15 21:10:39,326 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:39,334 p=6038 u=root n=ansible | PLAY [Run Nova API online data migrations] *************************************
2023-02-15 21:10:39,334 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:39,341 p=6038 u=root n=ansible | PLAY [Run Nova cell online data migrations] ************************************
2023-02-15 21:10:39,341 p=6038 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:10:39,353 p=6038 u=root n=ansible | PLAY [Apply role openvswitch] **************************************************
2023-02-15 21:10:39,584 p=6038 u=root n=ansible | TASK [openvswitch : include_tasks] *********************************************
2023-02-15 21:10:39,827 p=6038 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/openvswitch/tasks/deploy.yml for localhost
2023-02-15 21:10:39,935 p=6038 u=root n=ansible | TASK [module-load : Load modules] **********************************************
2023-02-15 21:10:41,150 p=6038 u=root n=ansible | changed: [localhost] => (item=openvswitch)
2023-02-15 21:10:41,350 p=6038 u=root n=ansible | TASK [module-load : Persist modules via modules-load.d] ************************
2023-02-15 21:10:42,982 p=6038 u=root n=ansible | changed: [localhost] => (item=openvswitch)
2023-02-15 21:10:43,113 p=6038 u=root n=ansible | TASK [module-load : Drop module persistence] ***********************************
2023-02-15 21:10:43,199 p=6038 u=root n=ansible | skipping: [localhost] => (item=openvswitch) 
2023-02-15 21:10:43,416 p=6038 u=root n=ansible | TASK [openvswitch : Ensuring config directories exist] *************************
2023-02-15 21:10:44,530 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:45,689 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:45,801 p=6038 u=root n=ansible | TASK [openvswitch : Copying over config.json files for services] ***************
2023-02-15 21:10:47,508 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:48,853 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:48,958 p=6038 u=root n=ansible | TASK [openvswitch : Copying over start-ovs file for openvswitch-vswitchd] ******
2023-02-15 21:10:50,603 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:10:50,773 p=6038 u=root n=ansible | TASK [openvswitch : Copying over start-ovsdb-server files for openvswitch-db-server] ***
2023-02-15 21:10:52,398 p=6038 u=root n=ansible | changed: [localhost]
2023-02-15 21:10:52,519 p=6038 u=root n=ansible | TASK [openvswitch : Copying over ovs-vsctl wrapper] ****************************
2023-02-15 21:10:52,757 p=6038 u=root n=ansible | skipping: [localhost]
2023-02-15 21:10:52,874 p=6038 u=root n=ansible | TASK [openvswitch : Check openvswitch containers] ******************************
2023-02-15 21:10:54,426 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:55,687 p=6038 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:55,859 p=6038 u=root n=ansible | TASK [openvswitch : Flush Handlers] ********************************************
2023-02-15 21:10:55,860 p=6038 u=root n=ansible | [WARNING]: flush_handlers task does not support when conditional

2023-02-15 21:10:55,860 p=6038 u=root n=ansible | RUNNING HANDLER [openvswitch : Restart openvswitch-db-server container] ********
2023-02-15 21:11:03,463 p=6038 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "msg": "'Traceback (most recent call last):\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/client.py\", line 268, in _raise_for_status\\n    response.raise_for_status()\\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 1021, in raise_for_status\\n    raise HTTPError(http_error_msg, response=self)\\nrequests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.42/images/create?tag=14.6.0&fromImage=kolla%2Fopenvswitch-db-server\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \"/tmp/ansible_kolla_docker_payload_keiz0zp8/ansible_kolla_docker_payload.zip/ansible/modules/kolla_docker.py\", line 404, in main\\n  File \"/tmp/ansible_kolla_docker_payload_keiz0zp8/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 654, in recreate_or_restart_container\\n    self.start_container()\\n  File \"/tmp/ansible_kolla_docker_payload_keiz0zp8/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 672, in start_container\\n    self.pull_image()\\n  File \"/tmp/ansible_kolla_docker_payload_keiz0zp8/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 453, in pull_image\\n    json.loads(line.strip().decode(\\'utf-8\\')) for line in self.dc.pull(\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/image.py\", line 430, in pull\\n    self._raise_for_status(response)\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/client.py\", line 270, in _raise_for_status\\n    raise create_api_error_from_http_exception(e)\\n  File \"/usr/local/lib/python3.9/site-packages/docker/errors.py\", line 31, in create_api_error_from_http_exception\\n    raise cls(e, response=response, explanation=explanation)\\ndocker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.42/images/create?tag=14.6.0&fromImage=kolla%2Fopenvswitch-db-server: Not Found (\"manifest for kolla/openvswitch-db-server:14.6.0 not found: manifest unknown: manifest unknown\")\\n'"}
2023-02-15 21:11:03,466 p=6038 u=root n=ansible | RUNNING HANDLER [openvswitch : Restart openvswitch-vswitchd container] *********
2023-02-15 21:11:03,470 p=6038 u=root n=ansible | NO MORE HOSTS LEFT *************************************************************
2023-02-15 21:11:03,475 p=6038 u=root n=ansible | PLAY RECAP *********************************************************************
2023-02-15 21:11:03,475 p=6038 u=root n=ansible | localhost                  : ok=101  changed=78   unreachable=0    failed=1    skipped=38   rescued=0    ignored=0   
