2023-02-15 21:06:02,799 p=6031 u=root n=ansible | [WARNING]: Invalid characters were found in group names but not replaced, use
-vvvv to see details

2023-02-15 21:06:06,405 p=6031 u=root n=ansible | PLAY [Gather facts for all hosts] **********************************************
2023-02-15 21:06:06,736 p=6031 u=root n=ansible | TASK [Gather facts] ************************************************************
2023-02-15 21:06:09,167 p=6031 u=root n=ansible | ok: [localhost]
2023-02-15 21:06:09,249 p=6031 u=root n=ansible | TASK [Group hosts to determine when using --limit] *****************************
2023-02-15 21:06:09,330 p=6031 u=root n=ansible | ok: [localhost]
2023-02-15 21:06:09,504 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
all_using_limit_True

2023-02-15 21:06:09,513 p=6031 u=root n=ansible | PLAY [Gather facts for all hosts (if using --limit)] ***************************
2023-02-15 21:06:09,513 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:09,516 p=6031 u=root n=ansible | PLAY [Group hosts based on configuration] **************************************
2023-02-15 21:06:09,677 p=6031 u=root n=ansible | TASK [Group hosts based on Kolla action] ***************************************
2023-02-15 21:06:09,732 p=6031 u=root n=ansible | ok: [localhost]
2023-02-15 21:06:09,826 p=6031 u=root n=ansible | TASK [Group hosts based on enabled services] ***********************************
2023-02-15 21:06:10,021 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_aodh_False)
2023-02-15 21:06:10,038 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_barbican_False)
2023-02-15 21:06:10,054 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_blazar_False)
2023-02-15 21:06:10,069 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_ceilometer_False)
2023-02-15 21:06:10,085 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_ceph_rgw_False)
2023-02-15 21:06:10,099 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_cinder_False)
2023-02-15 21:06:10,114 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_cloudkitty_False)
2023-02-15 21:06:10,128 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_collectd_False)
2023-02-15 21:06:10,143 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_cyborg_False)
2023-02-15 21:06:10,158 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_designate_False)
2023-02-15 21:06:10,172 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_etcd_False)
2023-02-15 21:06:10,187 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_freezer_False)
2023-02-15 21:06:10,202 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_glance_False)
2023-02-15 21:06:10,218 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_gnocchi_False)
2023-02-15 21:06:10,232 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_grafana_False)
2023-02-15 21:06:10,247 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_hacluster_False)
2023-02-15 21:06:10,261 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_heat_False)
2023-02-15 21:06:10,277 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_horizon_False)
2023-02-15 21:06:10,289 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_influxdb_False)
2023-02-15 21:06:10,305 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_ironic_True)
2023-02-15 21:06:10,319 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_iscsid_False)
2023-02-15 21:06:10,334 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_keystone_True)
2023-02-15 21:06:10,350 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_kuryr_False)
2023-02-15 21:06:10,367 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_loadbalancer_False)
2023-02-15 21:06:10,382 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_magnum_False)
2023-02-15 21:06:10,396 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_manila_False)
2023-02-15 21:06:10,412 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_mariadb_False)
2023-02-15 21:06:10,423 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_masakari_False)
2023-02-15 21:06:10,438 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_memcached_False)
2023-02-15 21:06:10,452 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_mistral_False)
2023-02-15 21:06:10,467 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_multipathd_False)
2023-02-15 21:06:10,482 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_murano_False)
2023-02-15 21:06:10,498 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_neutron_True)
2023-02-15 21:06:10,512 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_nova_False)
2023-02-15 21:06:10,527 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_octavia_False)
2023-02-15 21:06:10,543 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_False)
2023-02-15 21:06:10,561 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_dashboards_False)
2023-02-15 21:06:10,574 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_openvswitch_True_enable_ovs_dpdk_False)
2023-02-15 21:06:10,589 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_outward_rabbitmq_False)
2023-02-15 21:06:10,603 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_ovn_False)
2023-02-15 21:06:10,618 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_placement_False)
2023-02-15 21:06:10,632 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_prometheus_False)
2023-02-15 21:06:10,647 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_rabbitmq_True)
2023-02-15 21:06:10,661 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_redis_False)
2023-02-15 21:06:10,676 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_sahara_False)
2023-02-15 21:06:10,691 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_senlin_False)
2023-02-15 21:06:10,706 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_skydive_False)
2023-02-15 21:06:10,720 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_solum_False)
2023-02-15 21:06:10,735 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_swift_False)
2023-02-15 21:06:10,751 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_tacker_False)
2023-02-15 21:06:10,766 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_telegraf_False)
2023-02-15 21:06:10,779 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_trove_False)
2023-02-15 21:06:10,796 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_venus_False)
2023-02-15 21:06:10,809 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_vitrage_False)
2023-02-15 21:06:10,826 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_watcher_False)
2023-02-15 21:06:10,834 p=6031 u=root n=ansible | ok: [localhost] => (item=enable_zun_False)
2023-02-15 21:06:11,230 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
kolla_action_precheck

2023-02-15 21:06:11,232 p=6031 u=root n=ansible | PLAY [Apply role prechecks] ****************************************************
2023-02-15 21:06:11,233 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:11,247 p=6031 u=root n=ansible | PLAY [Apply role common] *******************************************************
2023-02-15 21:06:11,448 p=6031 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-15 21:06:11,665 p=6031 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/common/tasks/deploy.yml for localhost
2023-02-15 21:06:11,770 p=6031 u=root n=ansible | TASK [common : Ensuring config directories exist] ******************************
2023-02-15 21:06:12,775 p=6031 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'cron'}, 'cron'])
2023-02-15 21:06:12,844 p=6031 u=root n=ansible | skipping: [localhost] => (item=[{'service_name': 'fluentd'}, 'fluentd']) 
2023-02-15 21:06:13,321 p=6031 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'kolla-toolbox'}, 'kolla-toolbox'])
2023-02-15 21:06:13,425 p=6031 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-15 21:06:13,484 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:13,602 p=6031 u=root n=ansible | TASK [common : Copying over config.json files for services] ********************
2023-02-15 21:06:13,723 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:06:15,619 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:06:16,611 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:06:16,869 p=6031 u=root n=ansible | TASK [common : Find custom fluentd input config files] *************************
2023-02-15 21:06:16,995 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:17,226 p=6031 u=root n=ansible | TASK [common : Find custom fluentd filter config files] ************************
2023-02-15 21:06:17,338 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:17,527 p=6031 u=root n=ansible | TASK [common : Find custom fluentd format config files] ************************
2023-02-15 21:06:17,640 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:17,829 p=6031 u=root n=ansible | TASK [common : Find custom fluentd output config files] ************************
2023-02-15 21:06:17,922 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:18,070 p=6031 u=root n=ansible | TASK [common : Copying over td-agent.conf] *************************************
2023-02-15 21:06:18,190 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:18,312 p=6031 u=root n=ansible | TASK [common : Copying over cron logrotate config file] ************************
2023-02-15 21:06:19,584 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:06:19,737 p=6031 u=root n=ansible | TASK [common : Ensure RabbitMQ Erlang cookie exists] ***************************
2023-02-15 21:06:20,834 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:06:20,932 p=6031 u=root n=ansible | TASK [common : Ensuring config directories have correct owner and permission] ***
2023-02-15 21:06:21,062 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:06:21,078 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:06:21,597 p=6031 u=root n=ansible | ok: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:06:21,718 p=6031 u=root n=ansible | TASK [common : Copy rabbitmq-env.conf to kolla toolbox] ************************
2023-02-15 21:06:22,898 p=6031 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/rabbitmq-env.conf.j2)
2023-02-15 21:06:23,005 p=6031 u=root n=ansible | TASK [common : Copy rabbitmq erl_inetrc to kolla toolbox] **********************
2023-02-15 21:06:24,183 p=6031 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/erl_inetrc.j2)
2023-02-15 21:06:24,289 p=6031 u=root n=ansible | TASK [common : Check common containers] ****************************************
2023-02-15 21:06:24,436 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:06:26,384 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:06:27,526 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:06:27,666 p=6031 u=root n=ansible | TASK [common : Creating log volume] ********************************************
2023-02-15 21:06:28,895 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:06:29,025 p=6031 u=root n=ansible | TASK [common : Link kolla_logs volume to /var/log/kolla] ***********************
2023-02-15 21:06:29,563 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:06:29,670 p=6031 u=root n=ansible | TASK [common : Flush handlers] *************************************************
2023-02-15 21:06:29,671 p=6031 u=root n=ansible | RUNNING HANDLER [common : Restart kolla-toolbox container] *********************
2023-02-15 21:06:32,312 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:06:32,314 p=6031 u=root n=ansible | RUNNING HANDLER [common : Initializing toolbox container using normal user] ****
2023-02-15 21:06:37,304 p=6031 u=root n=ansible | ok: [localhost]
2023-02-15 21:06:37,306 p=6031 u=root n=ansible | RUNNING HANDLER [common : Restart cron container] ******************************
2023-02-15 21:06:39,280 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:06:39,652 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_loadbalancer_True

2023-02-15 21:06:39,662 p=6031 u=root n=ansible | PLAY [Apply role loadbalancer] *************************************************
2023-02-15 21:06:39,663 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:39,665 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_collectd_True

2023-02-15 21:06:39,672 p=6031 u=root n=ansible | PLAY [Apply role collectd] *****************************************************
2023-02-15 21:06:39,672 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:39,674 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_influxdb_True

2023-02-15 21:06:39,680 p=6031 u=root n=ansible | PLAY [Apply role influxdb] *****************************************************
2023-02-15 21:06:39,680 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:39,682 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_telegraf_True

2023-02-15 21:06:39,687 p=6031 u=root n=ansible | PLAY [Apply role telegraf] *****************************************************
2023-02-15 21:06:39,688 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:39,689 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_redis_True

2023-02-15 21:06:39,694 p=6031 u=root n=ansible | PLAY [Apply role redis] ********************************************************
2023-02-15 21:06:39,695 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:39,696 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_mariadb_True

2023-02-15 21:06:39,698 p=6031 u=root n=ansible | PLAY [Apply role mariadb] ******************************************************
2023-02-15 21:06:39,699 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:39,700 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_memcached_True

2023-02-15 21:06:39,705 p=6031 u=root n=ansible | PLAY [Apply role memcached] ****************************************************
2023-02-15 21:06:39,706 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:39,712 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_prometheus_True

2023-02-15 21:06:39,717 p=6031 u=root n=ansible | PLAY [Apply role prometheus] ***************************************************
2023-02-15 21:06:39,718 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:39,720 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_iscsid_True

2023-02-15 21:06:39,725 p=6031 u=root n=ansible | PLAY [Apply role iscsi] ********************************************************
2023-02-15 21:06:39,726 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:39,727 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_multipathd_True

2023-02-15 21:06:39,733 p=6031 u=root n=ansible | PLAY [Apply role multipathd] ***************************************************
2023-02-15 21:06:39,733 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:39,738 p=6031 u=root n=ansible | PLAY [Apply role rabbitmq] *****************************************************
2023-02-15 21:06:39,935 p=6031 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-15 21:06:40,135 p=6031 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/deploy.yml for localhost
2023-02-15 21:06:40,238 p=6031 u=root n=ansible | TASK [rabbitmq : Ensuring config directories exist] ****************************
2023-02-15 21:06:40,863 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 21:06:40,971 p=6031 u=root n=ansible | TASK [rabbitmq : Copying over config.json files for services] ******************
2023-02-15 21:06:42,140 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 21:06:42,264 p=6031 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq-env.conf] *******************************
2023-02-15 21:06:43,690 p=6031 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq-env.conf.j2)
2023-02-15 21:06:43,824 p=6031 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq.conf] ***********************************
2023-02-15 21:06:45,264 p=6031 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq.conf.j2)
2023-02-15 21:06:45,404 p=6031 u=root n=ansible | TASK [rabbitmq : Copying over erl_inetrc] **************************************
2023-02-15 21:06:46,902 p=6031 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/erl_inetrc.j2)
2023-02-15 21:06:47,013 p=6031 u=root n=ansible | TASK [rabbitmq : Copying over advanced.config] *********************************
2023-02-15 21:06:48,612 p=6031 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/advanced.config.j2)
2023-02-15 21:06:48,718 p=6031 u=root n=ansible | TASK [rabbitmq : Copying over definitions.json] ********************************
2023-02-15 21:06:50,019 p=6031 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/definitions.json.j2)
2023-02-15 21:06:50,130 p=6031 u=root n=ansible | TASK [rabbitmq : Copying over enabled_plugins] *********************************
2023-02-15 21:06:51,326 p=6031 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/enabled_plugins.j2)
2023-02-15 21:06:51,437 p=6031 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-15 21:06:51,493 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:51,654 p=6031 u=root n=ansible | TASK [rabbitmq : Check rabbitmq containers] ************************************
2023-02-15 21:06:53,015 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 21:06:53,166 p=6031 u=root n=ansible | TASK [rabbitmq : Creating rabbitmq volume] *************************************
2023-02-15 21:06:54,336 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:06:54,457 p=6031 u=root n=ansible | TASK [rabbitmq : Running RabbitMQ bootstrap container] *************************
2023-02-15 21:06:56,457 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:06:56,575 p=6031 u=root n=ansible | TASK [rabbitmq : Flush handlers] ***********************************************
2023-02-15 21:06:56,576 p=6031 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart first rabbitmq container] ******************
2023-02-15 21:06:56,917 p=6031 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/restart_services.yml for localhost
2023-02-15 21:06:56,918 p=6031 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart rabbitmq container] ************************
2023-02-15 21:06:58,732 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:06:58,733 p=6031 u=root n=ansible | RUNNING HANDLER [rabbitmq : Waiting for rabbitmq to start] *********************
2023-02-15 21:07:15,927 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:07:15,930 p=6031 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart remaining rabbitmq containers] *************
2023-02-15 21:07:16,235 p=6031 u=root n=ansible | skipping: [localhost] => (item=localhost) 
2023-02-15 21:07:16,601 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_outward_rabbitmq_True

2023-02-15 21:07:16,603 p=6031 u=root n=ansible | PLAY [Apply role rabbitmq (outward)] *******************************************
2023-02-15 21:07:16,604 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:07:16,605 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_etcd_True

2023-02-15 21:07:16,617 p=6031 u=root n=ansible | PLAY [Apply role etcd] *********************************************************
2023-02-15 21:07:16,617 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:07:16,629 p=6031 u=root n=ansible | PLAY [Apply role keystone] *****************************************************
2023-02-15 21:07:16,864 p=6031 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:07:17,162 p=6031 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/deploy.yml for localhost
2023-02-15 21:07:17,275 p=6031 u=root n=ansible | TASK [keystone : Ensuring config directories exist] ****************************
2023-02-15 21:07:18,222 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 21:07:18,756 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:07:19,492 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:07:19,619 p=6031 u=root n=ansible | TASK [keystone : Check if policies shall be overwritten] ***********************
2023-02-15 21:07:19,804 p=6031 u=root n=ansible | TASK [keystone : Set keystone policy file] *************************************
2023-02-15 21:07:19,851 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:07:20,085 p=6031 u=root n=ansible | TASK [keystone : Check if Keystone domain-specific config is supplied] *********
2023-02-15 21:07:20,778 p=6031 u=root n=ansible | ok: [localhost]
2023-02-15 21:07:20,885 p=6031 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:07:20,933 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:07:21,043 p=6031 u=root n=ansible | TASK [keystone : Copying over config.json files for services] ******************
2023-02-15 21:07:22,451 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 21:07:23,478 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:07:24,599 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:07:24,754 p=6031 u=root n=ansible | TASK [keystone : Copying over keystone.conf] ***********************************
2023-02-15 21:07:27,084 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 21:07:27,115 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:07:28,722 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:07:28,832 p=6031 u=root n=ansible | TASK [keystone : Copying keystone-startup script for keystone] *****************
2023-02-15 21:07:30,237 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:07:30,344 p=6031 u=root n=ansible | TASK [keystone : Create Keystone domain-specific config directory] *************
2023-02-15 21:07:30,814 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:07:31,061 p=6031 u=root n=ansible | TASK [keystone : Get file list in custom domains folder] ***********************
2023-02-15 21:07:31,122 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:07:31,251 p=6031 u=root n=ansible | TASK [keystone : Copying Keystone Domain specific settings] ********************
2023-02-15 21:07:31,480 p=6031 u=root n=ansible | TASK [keystone : Copying over existing policy file] ****************************
2023-02-15 21:07:31,816 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}}) 
2023-02-15 21:07:31,836 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:07:31,861 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:07:31,990 p=6031 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:07:32,057 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:07:32,166 p=6031 u=root n=ansible | TASK [keystone : Copying over wsgi-keystone.conf] ******************************
2023-02-15 21:07:33,999 p=6031 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/keystone/templates/wsgi-keystone.conf.j2)
2023-02-15 21:07:34,244 p=6031 u=root n=ansible | TASK [keystone : Checking whether keystone-paste.ini file exists] **************
2023-02-15 21:07:34,954 p=6031 u=root n=ansible | ok: [localhost]
2023-02-15 21:07:35,073 p=6031 u=root n=ansible | TASK [keystone : Copying over keystone-paste.ini] ******************************
2023-02-15 21:07:35,596 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:07:35,823 p=6031 u=root n=ansible | TASK [keystone : Generate the required cron jobs for the node] *****************
2023-02-15 21:07:36,446 p=6031 u=root n=ansible | ok: [localhost]
2023-02-15 21:07:36,570 p=6031 u=root n=ansible | TASK [keystone : Set fact with the generated cron jobs for building the crontab later] ***
2023-02-15 21:07:36,636 p=6031 u=root n=ansible | ok: [localhost]
2023-02-15 21:07:36,764 p=6031 u=root n=ansible | TASK [keystone : Copying files for keystone-fernet] ****************************
2023-02-15 21:07:38,356 p=6031 u=root n=ansible | changed: [localhost] => (item={'src': 'crontab.j2', 'dest': 'crontab'})
2023-02-15 21:07:39,714 p=6031 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-rotate.sh.j2', 'dest': 'fernet-rotate.sh'})
2023-02-15 21:07:41,070 p=6031 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-node-sync.sh.j2', 'dest': 'fernet-node-sync.sh'})
2023-02-15 21:07:42,446 p=6031 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-push.sh.j2', 'dest': 'fernet-push.sh'})
2023-02-15 21:07:43,974 p=6031 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-healthcheck.sh.j2', 'dest': 'fernet-healthcheck.sh'})
2023-02-15 21:07:45,499 p=6031 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa', 'dest': 'id_rsa'})
2023-02-15 21:07:46,975 p=6031 u=root n=ansible | changed: [localhost] => (item={'src': 'ssh_config.j2', 'dest': 'ssh_config'})
2023-02-15 21:07:47,089 p=6031 u=root n=ansible | TASK [keystone : Copying files for keystone-ssh] *******************************
2023-02-15 21:07:48,769 p=6031 u=root n=ansible | changed: [localhost] => (item={'src': 'sshd_config.j2', 'dest': 'sshd_config'})
2023-02-15 21:07:50,313 p=6031 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa.pub', 'dest': 'id_rsa.pub'})
2023-02-15 21:07:50,429 p=6031 u=root n=ansible | TASK [keystone : Check keystone containers] ************************************
2023-02-15 21:07:51,902 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 21:07:52,975 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:07:54,009 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:07:54,124 p=6031 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:07:54,175 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:07:54,402 p=6031 u=root n=ansible | TASK [keystone : Creating keystone database] ***********************************
2023-02-15 21:07:59,077 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:07:59,352 p=6031 u=root n=ansible | TASK [keystone : Creating Keystone database user and setting permissions] ******
2023-02-15 21:08:03,476 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:08:03,688 p=6031 u=root n=ansible | TASK [keystone : Checking for any running keystone_fernet containers] **********
2023-02-15 21:08:05,241 p=6031 u=root n=ansible | ok: [localhost]
2023-02-15 21:08:05,345 p=6031 u=root n=ansible | TASK [keystone : Group nodes where keystone_fernet is running] *****************
2023-02-15 21:08:05,436 p=6031 u=root n=ansible | ok: [localhost]
2023-02-15 21:08:05,546 p=6031 u=root n=ansible | TASK [keystone : Fail if any hosts need bootstrapping and not all hosts targeted] ***
2023-02-15 21:08:05,620 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:08:05,727 p=6031 u=root n=ansible | TASK [keystone : Running Keystone bootstrap container] *************************
2023-02-15 21:08:17,718 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:08:17,969 p=6031 u=root n=ansible | TASK [keystone : Running Keystone fernet bootstrap container] ******************
2023-02-15 21:08:26,047 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:08:26,188 p=6031 u=root n=ansible | TASK [keystone : Flush handlers] ***********************************************
2023-02-15 21:08:26,189 p=6031 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-ssh container] ********************
2023-02-15 21:08:28,189 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:08:28,191 p=6031 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-fernet container] *****************
2023-02-15 21:08:30,277 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:08:30,282 p=6031 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone container] ************************
2023-02-15 21:08:32,346 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:08:32,461 p=6031 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:08:32,634 p=6031 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/distribute_fernet.yml for localhost
2023-02-15 21:08:32,774 p=6031 u=root n=ansible | TASK [keystone : Waiting for Keystone SSH port to be UP] ***********************
2023-02-15 21:08:33,971 p=6031 u=root n=ansible | ok: [localhost]
2023-02-15 21:08:34,226 p=6031 u=root n=ansible | TASK [keystone : Run key distribution] *****************************************
2023-02-15 21:08:35,295 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:08:35,402 p=6031 u=root n=ansible | TASK [keystone : Creating admin project, user, role, service, and endpoint] ****
2023-02-15 21:08:45,799 p=6031 u=root n=ansible | changed: [localhost] => (item=RegionOne)
2023-02-15 21:08:45,925 p=6031 u=root n=ansible | TASK [service-ks-register : keystone | Creating services] **********************
2023-02-15 21:09:14,532 p=6031 u=root n=ansible | changed: [localhost] => (item={'name': 'keystone', 'service_type': 'identity'})
2023-02-15 21:09:14,653 p=6031 u=root n=ansible | TASK [service-ks-register : keystone | Creating endpoints] *********************
2023-02-15 21:09:21,951 p=6031 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.142:5000', 'interface': 'internal'})
2023-02-15 21:09:28,585 p=6031 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.142:5000', 'interface': 'public'})
2023-02-15 21:09:28,758 p=6031 u=root n=ansible | TASK [service-ks-register : keystone | Creating projects] **********************
2023-02-15 21:09:28,989 p=6031 u=root n=ansible | TASK [service-ks-register : keystone | Creating users] *************************
2023-02-15 21:09:29,191 p=6031 u=root n=ansible | TASK [service-ks-register : keystone | Creating roles] *************************
2023-02-15 21:09:29,392 p=6031 u=root n=ansible | TASK [service-ks-register : keystone | Granting user roles] ********************
2023-02-15 21:09:29,709 p=6031 u=root n=ansible | TASK [keystone : Creating default user role] ***********************************
2023-02-15 21:09:36,498 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:09:36,607 p=6031 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:09:36,673 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:09:36,983 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_opensearch_True

2023-02-15 21:09:36,993 p=6031 u=root n=ansible | PLAY [Apply role opensearch] ***************************************************
2023-02-15 21:09:36,994 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:09:36,997 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_swift_True

2023-02-15 21:09:37,004 p=6031 u=root n=ansible | PLAY [Apply role swift] ********************************************************
2023-02-15 21:09:37,005 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:09:37,006 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_ceph_rgw_True

2023-02-15 21:09:37,012 p=6031 u=root n=ansible | PLAY [Apply role ceph-rgw] *****************************************************
2023-02-15 21:09:37,012 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:09:37,014 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_glance_True

2023-02-15 21:09:37,020 p=6031 u=root n=ansible | PLAY [Apply role glance] *******************************************************
2023-02-15 21:09:37,021 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:09:37,034 p=6031 u=root n=ansible | PLAY [Apply role ironic] *******************************************************
2023-02-15 21:09:37,235 p=6031 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 21:09:37,652 p=6031 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/ironic/tasks/deploy.yml for localhost
2023-02-15 21:09:37,782 p=6031 u=root n=ansible | TASK [service-ks-register : ironic | Creating services] ************************
2023-02-15 21:09:45,197 p=6031 u=root n=ansible | changed: [localhost] => (item={'name': 'ironic', 'service_type': 'baremetal'})
2023-02-15 21:09:52,753 p=6031 u=root n=ansible | changed: [localhost] => (item={'name': 'ironic-inspector', 'service_type': 'baremetal-introspection'})
2023-02-15 21:09:52,886 p=6031 u=root n=ansible | TASK [service-ks-register : ironic | Creating endpoints] ***********************
2023-02-15 21:10:00,024 p=6031 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic', 'url': 'http://169.16.1.142:6385', 'interface': 'internal'})
2023-02-15 21:10:07,034 p=6031 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic', 'url': 'http://169.16.1.142:6385', 'interface': 'public'})
2023-02-15 21:10:14,440 p=6031 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic-inspector', 'url': 'http://169.16.1.142:5050', 'interface': 'internal'})
2023-02-15 21:10:22,222 p=6031 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic-inspector', 'url': 'http://169.16.1.142:5050', 'interface': 'public'})
2023-02-15 21:10:22,389 p=6031 u=root n=ansible | TASK [service-ks-register : ironic | Creating projects] ************************
2023-02-15 21:10:30,537 p=6031 u=root n=ansible | changed: [localhost] => (item=service)
2023-02-15 21:10:30,656 p=6031 u=root n=ansible | TASK [service-ks-register : ironic | Creating users] ***************************
2023-02-15 21:10:40,562 p=6031 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic', 'project': 'service'})
2023-02-15 21:10:49,855 p=6031 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic-inspector', 'project': 'service'})
2023-02-15 21:10:49,861 p=6031 u=root n=ansible | [WARNING]: Module did not set no_log for update_password

2023-02-15 21:10:49,980 p=6031 u=root n=ansible | TASK [service-ks-register : ironic | Creating roles] ***************************
2023-02-15 21:10:56,466 p=6031 u=root n=ansible | ok: [localhost] => (item=admin)
2023-02-15 21:10:56,658 p=6031 u=root n=ansible | TASK [service-ks-register : ironic | Granting user roles] **********************
2023-02-15 21:11:08,628 p=6031 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic', 'role': 'admin', 'project': 'service'})
2023-02-15 21:11:19,952 p=6031 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic-inspector', 'role': 'admin', 'project': 'service'})
2023-02-15 21:11:20,194 p=6031 u=root n=ansible | TASK [module-load : Load modules] **********************************************
2023-02-15 21:11:21,957 p=6031 u=root n=ansible | changed: [localhost] => (item=iscsi_tcp)
2023-02-15 21:11:22,081 p=6031 u=root n=ansible | TASK [module-load : Persist modules via modules-load.d] ************************
2023-02-15 21:11:23,484 p=6031 u=root n=ansible | changed: [localhost] => (item=iscsi_tcp)
2023-02-15 21:11:23,593 p=6031 u=root n=ansible | TASK [module-load : Drop module persistence] ***********************************
2023-02-15 21:11:23,661 p=6031 u=root n=ansible | skipping: [localhost] => (item=iscsi_tcp) 
2023-02-15 21:11:23,866 p=6031 u=root n=ansible | TASK [ironic : Ensuring config directories exist] ******************************
2023-02-15 21:11:24,873 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 21:11:25,307 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:11:25,820 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 21:11:26,278 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:11:26,761 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:11:27,233 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:11:27,353 p=6031 u=root n=ansible | TASK [ironic : Check if Ironic policies shall be overwritten] ******************
2023-02-15 21:11:27,528 p=6031 u=root n=ansible | TASK [ironic : Check if Ironic Inspector policies shall be overwritten] ********
2023-02-15 21:11:27,688 p=6031 u=root n=ansible | TASK [ironic : Set ironic policy file] *****************************************
2023-02-15 21:11:27,731 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:11:27,852 p=6031 u=root n=ansible | TASK [ironic : Set ironic-inspector policy file] *******************************
2023-02-15 21:11:27,906 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:11:28,040 p=6031 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 21:11:28,097 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:11:28,222 p=6031 u=root n=ansible | TASK [ironic : Copying over config.json files for services] ********************
2023-02-15 21:11:29,910 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 21:11:31,155 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:11:32,320 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 21:11:33,687 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:11:34,645 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:11:35,643 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:11:35,797 p=6031 u=root n=ansible | TASK [ironic : Copying over ironic.conf] ***************************************
2023-02-15 21:11:38,134 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 21:11:40,072 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:11:40,085 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 21:11:40,094 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:11:40,105 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:11:40,112 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:11:40,264 p=6031 u=root n=ansible | TASK [ironic : Copying over inspector.conf] ************************************
2023-02-15 21:11:42,542 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:11:42,644 p=6031 u=root n=ansible | TASK [ironic : Copying over dnsmasq.conf] **************************************
2023-02-15 21:11:44,623 p=6031 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic-dnsmasq.conf.j2)
2023-02-15 21:11:44,742 p=6031 u=root n=ansible | TASK [ironic : Copying pxelinux.cfg default] ***********************************
2023-02-15 21:11:45,474 p=6031 u=root n=ansible | skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/pxelinux.default.j2) 
2023-02-15 21:11:45,622 p=6031 u=root n=ansible | TASK [ironic : Copying ironic_pxe_uefi.cfg default] ****************************
2023-02-15 21:11:46,197 p=6031 u=root n=ansible | skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic_pxe_uefi.default.j2) 
2023-02-15 21:11:46,307 p=6031 u=root n=ansible | TASK [ironic : Copying ironic-agent kernel and initramfs (PXE)] ****************
2023-02-15 21:11:46,935 p=6031 u=root n=ansible | skipping: [localhost] => (item=ironic-agent.kernel) 
2023-02-15 21:11:47,450 p=6031 u=root n=ansible | skipping: [localhost] => (item=ironic-agent.initramfs) 
2023-02-15 21:11:47,922 p=6031 u=root n=ansible | skipping: [localhost] => (item=ir-deploy-redfish.efiboot) 
2023-02-15 21:11:48,395 p=6031 u=root n=ansible | skipping: [localhost] => (item=rhel009_wholedisk_image.qcow2) 
2023-02-15 21:11:48,536 p=6031 u=root n=ansible | TASK [ironic : Copying ironic-agent kernel and initramfs (iPXE)] ***************
2023-02-15 21:11:50,555 p=6031 u=root n=ansible | changed: [localhost] => (item=ironic-agent.kernel)
2023-02-15 21:11:57,918 p=6031 u=root n=ansible | changed: [localhost] => (item=ironic-agent.initramfs)
2023-02-15 21:11:59,454 p=6031 u=root n=ansible | changed: [localhost] => (item=ir-deploy-redfish.efiboot)
2023-02-15 21:12:11,773 p=6031 u=root n=ansible | changed: [localhost] => (item=rhel009_wholedisk_image.qcow2)
2023-02-15 21:12:11,887 p=6031 u=root n=ansible | TASK [ironic : Copying inspector.ipxe] *****************************************
2023-02-15 21:12:13,596 p=6031 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/inspector.ipxe.j2)
2023-02-15 21:12:13,698 p=6031 u=root n=ansible | TASK [ironic : Copying ironic-http-httpd.conf] *********************************
2023-02-15 21:12:15,392 p=6031 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic-http-httpd.conf.j2)
2023-02-15 21:12:15,501 p=6031 u=root n=ansible | TASK [ironic : Copying over existing Ironic policy file] ***********************
2023-02-15 21:12:15,853 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}}) 
2023-02-15 21:12:15,862 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:12:15,873 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 21:12:15,881 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:12:15,890 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:12:15,893 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:12:16,000 p=6031 u=root n=ansible | TASK [ironic : Copying over existing Ironic Inspector policy file] *************
2023-02-15 21:12:16,497 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}}) 
2023-02-15 21:12:16,511 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:12:16,514 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 21:12:16,528 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:12:16,540 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:12:16,546 p=6031 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:12:16,655 p=6031 u=root n=ansible | TASK [ironic : Copying over ironic-api-wsgi.conf] ******************************
2023-02-15 21:12:18,121 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:12:18,263 p=6031 u=root n=ansible | TASK [ironic : Check ironic containers] ****************************************
2023-02-15 21:12:19,700 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 21:12:20,947 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:12:22,068 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 21:12:23,105 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:12:24,152 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:12:25,173 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:12:25,298 p=6031 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 21:12:25,355 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:12:25,603 p=6031 u=root n=ansible | TASK [ironic : Creating Ironic database] ***************************************
2023-02-15 21:12:29,241 p=6031 u=root n=ansible | changed: [localhost] => (item={'database_name': 'ironic', 'group': 'ironic-api'})
2023-02-15 21:12:33,139 p=6031 u=root n=ansible | changed: [localhost] => (item={'database_name': 'ironic_inspector', 'group': 'ironic-inspector'})
2023-02-15 21:12:33,390 p=6031 u=root n=ansible | TASK [ironic : Creating Ironic database user and setting permissions] **********
2023-02-15 21:12:37,357 p=6031 u=root n=ansible | changed: [localhost] => (item=ironic)
2023-02-15 21:12:41,067 p=6031 u=root n=ansible | changed: [localhost] => (item=ironic_inspector)
2023-02-15 21:12:41,548 p=6031 u=root n=ansible | TASK [ironic : Running Ironic bootstrap container] *****************************
2023-02-15 21:12:54,863 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:12:55,396 p=6031 u=root n=ansible | TASK [ironic : Running Ironic Inspector bootstrap container] *******************
2023-02-15 21:13:02,617 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:13:02,721 p=6031 u=root n=ansible | TASK [ironic : Running ironic-tftp bootstrap container] ************************
2023-02-15 21:13:05,542 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:13:05,704 p=6031 u=root n=ansible | TASK [ironic : Flush handlers] *************************************************
2023-02-15 21:13:05,705 p=6031 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-conductor container] ******************
2023-02-15 21:13:07,987 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:13:07,989 p=6031 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-api container] ************************
2023-02-15 21:13:10,357 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:13:10,364 p=6031 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-inspector container] ******************
2023-02-15 21:13:13,108 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:13:13,112 p=6031 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-tftp container] ***********************
2023-02-15 21:13:16,429 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:13:16,430 p=6031 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-http container] ***********************
2023-02-15 21:13:20,134 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:13:20,145 p=6031 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-dnsmasq container] ********************
2023-02-15 21:13:27,419 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:13:27,689 p=6031 u=root n=ansible | TASK [ironic : Flush and delete ironic-inspector iptables chain] ***************
2023-02-15 21:13:30,696 p=6031 u=root n=ansible | ok: [localhost] => (item=flush)
2023-02-15 21:13:31,273 p=6031 u=root n=ansible | ok: [localhost] => (item=delete-chain)
2023-02-15 21:13:31,607 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_cinder_True

2023-02-15 21:13:31,617 p=6031 u=root n=ansible | PLAY [Apply role cinder] *******************************************************
2023-02-15 21:13:31,618 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:13:31,619 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_placement_True

2023-02-15 21:13:31,626 p=6031 u=root n=ansible | PLAY [Apply role placement] ****************************************************
2023-02-15 21:13:31,626 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:13:31,628 p=6031 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_nova_True

2023-02-15 21:13:31,633 p=6031 u=root n=ansible | PLAY [Bootstrap nova API databases] ********************************************
2023-02-15 21:13:31,633 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:13:31,638 p=6031 u=root n=ansible | PLAY [Bootstrap nova cell databases] *******************************************
2023-02-15 21:13:31,639 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:13:31,646 p=6031 u=root n=ansible | PLAY [Apply role nova] *********************************************************
2023-02-15 21:13:31,646 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:13:31,655 p=6031 u=root n=ansible | PLAY [Apply role nova-cell] ****************************************************
2023-02-15 21:13:31,655 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:13:31,661 p=6031 u=root n=ansible | PLAY [Refresh nova scheduler cell cache] ***************************************
2023-02-15 21:13:31,662 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:13:31,668 p=6031 u=root n=ansible | PLAY [Reload global Nova super conductor services] *****************************
2023-02-15 21:13:31,669 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:13:31,674 p=6031 u=root n=ansible | PLAY [Reload Nova cell services] ***********************************************
2023-02-15 21:13:31,675 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:13:31,681 p=6031 u=root n=ansible | PLAY [Reload global Nova API services] *****************************************
2023-02-15 21:13:31,681 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:13:31,687 p=6031 u=root n=ansible | PLAY [Run Nova API online data migrations] *************************************
2023-02-15 21:13:31,687 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:13:31,693 p=6031 u=root n=ansible | PLAY [Run Nova cell online data migrations] ************************************
2023-02-15 21:13:31,693 p=6031 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:13:31,703 p=6031 u=root n=ansible | PLAY [Apply role openvswitch] **************************************************
2023-02-15 21:13:31,903 p=6031 u=root n=ansible | TASK [openvswitch : include_tasks] *********************************************
2023-02-15 21:13:32,215 p=6031 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/openvswitch/tasks/deploy.yml for localhost
2023-02-15 21:13:32,359 p=6031 u=root n=ansible | TASK [module-load : Load modules] **********************************************
2023-02-15 21:13:33,217 p=6031 u=root n=ansible | changed: [localhost] => (item=openvswitch)
2023-02-15 21:13:33,345 p=6031 u=root n=ansible | TASK [module-load : Persist modules via modules-load.d] ************************
2023-02-15 21:13:34,471 p=6031 u=root n=ansible | changed: [localhost] => (item=openvswitch)
2023-02-15 21:13:34,582 p=6031 u=root n=ansible | TASK [module-load : Drop module persistence] ***********************************
2023-02-15 21:13:34,653 p=6031 u=root n=ansible | skipping: [localhost] => (item=openvswitch) 
2023-02-15 21:13:34,851 p=6031 u=root n=ansible | TASK [openvswitch : Ensuring config directories exist] *************************
2023-02-15 21:13:35,462 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:13:35,869 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:13:35,979 p=6031 u=root n=ansible | TASK [openvswitch : Copying over config.json files for services] ***************
2023-02-15 21:13:37,422 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:13:38,616 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:13:38,772 p=6031 u=root n=ansible | TASK [openvswitch : Copying over start-ovs file for openvswitch-vswitchd] ******
2023-02-15 21:13:40,025 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:13:40,140 p=6031 u=root n=ansible | TASK [openvswitch : Copying over start-ovsdb-server files for openvswitch-db-server] ***
2023-02-15 21:13:41,286 p=6031 u=root n=ansible | changed: [localhost]
2023-02-15 21:13:41,393 p=6031 u=root n=ansible | TASK [openvswitch : Copying over ovs-vsctl wrapper] ****************************
2023-02-15 21:13:41,606 p=6031 u=root n=ansible | skipping: [localhost]
2023-02-15 21:13:41,707 p=6031 u=root n=ansible | TASK [openvswitch : Check openvswitch containers] ******************************
2023-02-15 21:13:44,874 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:13:46,055 p=6031 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:13:46,203 p=6031 u=root n=ansible | TASK [openvswitch : Flush Handlers] ********************************************
2023-02-15 21:13:46,204 p=6031 u=root n=ansible | [WARNING]: flush_handlers task does not support when conditional

2023-02-15 21:13:46,205 p=6031 u=root n=ansible | RUNNING HANDLER [openvswitch : Restart openvswitch-db-server container] ********
2023-02-15 21:13:54,567 p=6031 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "msg": "'Traceback (most recent call last):\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/client.py\", line 268, in _raise_for_status\\n    response.raise_for_status()\\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 1021, in raise_for_status\\n    raise HTTPError(http_error_msg, response=self)\\nrequests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.42/images/create?tag=14.6.0&fromImage=kolla%2Fopenvswitch-db-server\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \"/tmp/ansible_kolla_docker_payload_78oyjszz/ansible_kolla_docker_payload.zip/ansible/modules/kolla_docker.py\", line 404, in main\\n  File \"/tmp/ansible_kolla_docker_payload_78oyjszz/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 654, in recreate_or_restart_container\\n    self.start_container()\\n  File \"/tmp/ansible_kolla_docker_payload_78oyjszz/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 672, in start_container\\n    self.pull_image()\\n  File \"/tmp/ansible_kolla_docker_payload_78oyjszz/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 453, in pull_image\\n    json.loads(line.strip().decode(\\'utf-8\\')) for line in self.dc.pull(\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/image.py\", line 430, in pull\\n    self._raise_for_status(response)\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/client.py\", line 270, in _raise_for_status\\n    raise create_api_error_from_http_exception(e)\\n  File \"/usr/local/lib/python3.9/site-packages/docker/errors.py\", line 31, in create_api_error_from_http_exception\\n    raise cls(e, response=response, explanation=explanation)\\ndocker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.42/images/create?tag=14.6.0&fromImage=kolla%2Fopenvswitch-db-server: Not Found (\"manifest for kolla/openvswitch-db-server:14.6.0 not found: manifest unknown: manifest unknown\")\\n'"}
2023-02-15 21:13:54,569 p=6031 u=root n=ansible | RUNNING HANDLER [openvswitch : Restart openvswitch-vswitchd container] *********
2023-02-15 21:13:54,571 p=6031 u=root n=ansible | NO MORE HOSTS LEFT *************************************************************
2023-02-15 21:13:54,573 p=6031 u=root n=ansible | PLAY RECAP *********************************************************************
2023-02-15 21:13:54,574 p=6031 u=root n=ansible | localhost                  : ok=101  changed=78   unreachable=0    failed=1    skipped=38   rescued=0    ignored=0   
