2023-02-15 21:04:56,174 p=6036 u=root n=ansible | [WARNING]: Invalid characters were found in group names but not replaced, use
-vvvv to see details

2023-02-15 21:05:03,481 p=6036 u=root n=ansible | PLAY [Gather facts for all hosts] **********************************************
2023-02-15 21:05:03,754 p=6036 u=root n=ansible | TASK [Gather facts] ************************************************************
2023-02-15 21:05:06,355 p=6036 u=root n=ansible | ok: [localhost]
2023-02-15 21:05:06,449 p=6036 u=root n=ansible | TASK [Group hosts to determine when using --limit] *****************************
2023-02-15 21:05:06,541 p=6036 u=root n=ansible | ok: [localhost]
2023-02-15 21:05:06,718 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
all_using_limit_True

2023-02-15 21:05:06,729 p=6036 u=root n=ansible | PLAY [Gather facts for all hosts (if using --limit)] ***************************
2023-02-15 21:05:06,730 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:06,733 p=6036 u=root n=ansible | PLAY [Group hosts based on configuration] **************************************
2023-02-15 21:05:06,912 p=6036 u=root n=ansible | TASK [Group hosts based on Kolla action] ***************************************
2023-02-15 21:05:06,979 p=6036 u=root n=ansible | ok: [localhost]
2023-02-15 21:05:07,109 p=6036 u=root n=ansible | TASK [Group hosts based on enabled services] ***********************************
2023-02-15 21:05:07,398 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_aodh_False)
2023-02-15 21:05:07,419 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_barbican_False)
2023-02-15 21:05:07,443 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_blazar_False)
2023-02-15 21:05:07,466 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_ceilometer_False)
2023-02-15 21:05:07,483 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_ceph_rgw_False)
2023-02-15 21:05:07,500 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_cinder_False)
2023-02-15 21:05:07,515 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_cloudkitty_False)
2023-02-15 21:05:07,532 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_collectd_False)
2023-02-15 21:05:07,547 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_cyborg_False)
2023-02-15 21:05:07,561 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_designate_False)
2023-02-15 21:05:07,575 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_etcd_False)
2023-02-15 21:05:07,592 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_freezer_False)
2023-02-15 21:05:07,607 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_glance_False)
2023-02-15 21:05:07,622 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_gnocchi_False)
2023-02-15 21:05:07,637 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_grafana_False)
2023-02-15 21:05:07,653 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_hacluster_False)
2023-02-15 21:05:07,677 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_heat_False)
2023-02-15 21:05:07,711 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_horizon_False)
2023-02-15 21:05:07,738 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_influxdb_False)
2023-02-15 21:05:07,753 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_ironic_True)
2023-02-15 21:05:07,765 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_iscsid_False)
2023-02-15 21:05:07,783 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_keystone_True)
2023-02-15 21:05:07,800 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_kuryr_False)
2023-02-15 21:05:07,817 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_loadbalancer_False)
2023-02-15 21:05:07,833 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_magnum_False)
2023-02-15 21:05:07,850 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_manila_False)
2023-02-15 21:05:07,868 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_mariadb_False)
2023-02-15 21:05:07,889 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_masakari_False)
2023-02-15 21:05:07,908 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_memcached_False)
2023-02-15 21:05:07,926 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_mistral_False)
2023-02-15 21:05:07,942 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_multipathd_False)
2023-02-15 21:05:07,959 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_murano_False)
2023-02-15 21:05:07,976 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_neutron_True)
2023-02-15 21:05:07,995 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_nova_False)
2023-02-15 21:05:08,013 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_octavia_False)
2023-02-15 21:05:08,030 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_False)
2023-02-15 21:05:08,047 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_dashboards_False)
2023-02-15 21:05:08,063 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_openvswitch_True_enable_ovs_dpdk_False)
2023-02-15 21:05:08,078 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_outward_rabbitmq_False)
2023-02-15 21:05:08,092 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_ovn_False)
2023-02-15 21:05:08,106 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_placement_False)
2023-02-15 21:05:08,122 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_prometheus_False)
2023-02-15 21:05:08,138 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_rabbitmq_True)
2023-02-15 21:05:08,154 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_redis_False)
2023-02-15 21:05:08,169 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_sahara_False)
2023-02-15 21:05:08,186 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_senlin_False)
2023-02-15 21:05:08,202 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_skydive_False)
2023-02-15 21:05:08,220 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_solum_False)
2023-02-15 21:05:08,238 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_swift_False)
2023-02-15 21:05:08,255 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_tacker_False)
2023-02-15 21:05:08,272 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_telegraf_False)
2023-02-15 21:05:08,289 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_trove_False)
2023-02-15 21:05:08,305 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_venus_False)
2023-02-15 21:05:08,323 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_vitrage_False)
2023-02-15 21:05:08,339 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_watcher_False)
2023-02-15 21:05:08,355 p=6036 u=root n=ansible | ok: [localhost] => (item=enable_zun_False)
2023-02-15 21:05:08,714 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
kolla_action_precheck

2023-02-15 21:05:08,717 p=6036 u=root n=ansible | PLAY [Apply role prechecks] ****************************************************
2023-02-15 21:05:08,717 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:08,733 p=6036 u=root n=ansible | PLAY [Apply role common] *******************************************************
2023-02-15 21:05:08,934 p=6036 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-15 21:05:09,167 p=6036 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/common/tasks/deploy.yml for localhost
2023-02-15 21:05:09,285 p=6036 u=root n=ansible | TASK [common : Ensuring config directories exist] ******************************
2023-02-15 21:05:10,476 p=6036 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'cron'}, 'cron'])
2023-02-15 21:05:10,539 p=6036 u=root n=ansible | skipping: [localhost] => (item=[{'service_name': 'fluentd'}, 'fluentd']) 
2023-02-15 21:05:11,054 p=6036 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'kolla-toolbox'}, 'kolla-toolbox'])
2023-02-15 21:05:11,158 p=6036 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-15 21:05:11,206 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:05:11,310 p=6036 u=root n=ansible | TASK [common : Copying over config.json files for services] ********************
2023-02-15 21:05:11,444 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:05:13,238 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:05:14,467 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:05:14,670 p=6036 u=root n=ansible | TASK [common : Find custom fluentd input config files] *************************
2023-02-15 21:05:14,773 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:05:14,976 p=6036 u=root n=ansible | TASK [common : Find custom fluentd filter config files] ************************
2023-02-15 21:05:15,073 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:05:15,274 p=6036 u=root n=ansible | TASK [common : Find custom fluentd format config files] ************************
2023-02-15 21:05:15,395 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:05:15,596 p=6036 u=root n=ansible | TASK [common : Find custom fluentd output config files] ************************
2023-02-15 21:05:15,699 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:05:15,802 p=6036 u=root n=ansible | TASK [common : Copying over td-agent.conf] *************************************
2023-02-15 21:05:15,909 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:05:16,009 p=6036 u=root n=ansible | TASK [common : Copying over cron logrotate config file] ************************
2023-02-15 21:05:17,601 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:17,706 p=6036 u=root n=ansible | TASK [common : Ensure RabbitMQ Erlang cookie exists] ***************************
2023-02-15 21:05:19,010 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:19,112 p=6036 u=root n=ansible | TASK [common : Ensuring config directories have correct owner and permission] ***
2023-02-15 21:05:19,253 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:05:19,265 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:05:19,763 p=6036 u=root n=ansible | ok: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:05:19,864 p=6036 u=root n=ansible | TASK [common : Copy rabbitmq-env.conf to kolla toolbox] ************************
2023-02-15 21:05:21,056 p=6036 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/rabbitmq-env.conf.j2)
2023-02-15 21:05:21,172 p=6036 u=root n=ansible | TASK [common : Copy rabbitmq erl_inetrc to kolla toolbox] **********************
2023-02-15 21:05:22,332 p=6036 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/erl_inetrc.j2)
2023-02-15 21:05:22,448 p=6036 u=root n=ansible | TASK [common : Check common containers] ****************************************
2023-02-15 21:05:22,611 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:05:24,413 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:05:25,530 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:05:25,636 p=6036 u=root n=ansible | TASK [common : Creating log volume] ********************************************
2023-02-15 21:05:26,777 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:26,892 p=6036 u=root n=ansible | TASK [common : Link kolla_logs volume to /var/log/kolla] ***********************
2023-02-15 21:05:27,477 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:27,579 p=6036 u=root n=ansible | TASK [common : Flush handlers] *************************************************
2023-02-15 21:05:27,580 p=6036 u=root n=ansible | RUNNING HANDLER [common : Restart kolla-toolbox container] *********************
2023-02-15 21:05:30,158 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:30,160 p=6036 u=root n=ansible | RUNNING HANDLER [common : Initializing toolbox container using normal user] ****
2023-02-15 21:05:36,860 p=6036 u=root n=ansible | ok: [localhost]
2023-02-15 21:05:36,862 p=6036 u=root n=ansible | RUNNING HANDLER [common : Restart cron container] ******************************
2023-02-15 21:05:38,793 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:39,140 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_loadbalancer_True

2023-02-15 21:05:39,152 p=6036 u=root n=ansible | PLAY [Apply role loadbalancer] *************************************************
2023-02-15 21:05:39,152 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:39,154 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_collectd_True

2023-02-15 21:05:39,162 p=6036 u=root n=ansible | PLAY [Apply role collectd] *****************************************************
2023-02-15 21:05:39,163 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:39,165 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_influxdb_True

2023-02-15 21:05:39,173 p=6036 u=root n=ansible | PLAY [Apply role influxdb] *****************************************************
2023-02-15 21:05:39,173 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:39,175 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_telegraf_True

2023-02-15 21:05:39,183 p=6036 u=root n=ansible | PLAY [Apply role telegraf] *****************************************************
2023-02-15 21:05:39,183 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:39,185 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_redis_True

2023-02-15 21:05:39,192 p=6036 u=root n=ansible | PLAY [Apply role redis] ********************************************************
2023-02-15 21:05:39,193 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:39,194 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_mariadb_True

2023-02-15 21:05:39,197 p=6036 u=root n=ansible | PLAY [Apply role mariadb] ******************************************************
2023-02-15 21:05:39,197 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:39,198 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_memcached_True

2023-02-15 21:05:39,205 p=6036 u=root n=ansible | PLAY [Apply role memcached] ****************************************************
2023-02-15 21:05:39,206 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:39,212 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_prometheus_True

2023-02-15 21:05:39,220 p=6036 u=root n=ansible | PLAY [Apply role prometheus] ***************************************************
2023-02-15 21:05:39,220 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:39,223 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_iscsid_True

2023-02-15 21:05:39,229 p=6036 u=root n=ansible | PLAY [Apply role iscsi] ********************************************************
2023-02-15 21:05:39,230 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:39,232 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_multipathd_True

2023-02-15 21:05:39,239 p=6036 u=root n=ansible | PLAY [Apply role multipathd] ***************************************************
2023-02-15 21:05:39,239 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:05:39,244 p=6036 u=root n=ansible | PLAY [Apply role rabbitmq] *****************************************************
2023-02-15 21:05:39,482 p=6036 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-15 21:05:39,715 p=6036 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/deploy.yml for localhost
2023-02-15 21:05:39,816 p=6036 u=root n=ansible | TASK [rabbitmq : Ensuring config directories exist] ****************************
2023-02-15 21:05:40,474 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 21:05:40,593 p=6036 u=root n=ansible | TASK [rabbitmq : Copying over config.json files for services] ******************
2023-02-15 21:05:41,901 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 21:05:42,013 p=6036 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq-env.conf] *******************************
2023-02-15 21:05:43,324 p=6036 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq-env.conf.j2)
2023-02-15 21:05:43,466 p=6036 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq.conf] ***********************************
2023-02-15 21:05:44,918 p=6036 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq.conf.j2)
2023-02-15 21:05:45,039 p=6036 u=root n=ansible | TASK [rabbitmq : Copying over erl_inetrc] **************************************
2023-02-15 21:05:46,254 p=6036 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/erl_inetrc.j2)
2023-02-15 21:05:46,366 p=6036 u=root n=ansible | TASK [rabbitmq : Copying over advanced.config] *********************************
2023-02-15 21:05:47,647 p=6036 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/advanced.config.j2)
2023-02-15 21:05:47,757 p=6036 u=root n=ansible | TASK [rabbitmq : Copying over definitions.json] ********************************
2023-02-15 21:05:48,993 p=6036 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/definitions.json.j2)
2023-02-15 21:05:49,097 p=6036 u=root n=ansible | TASK [rabbitmq : Copying over enabled_plugins] *********************************
2023-02-15 21:05:50,279 p=6036 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/enabled_plugins.j2)
2023-02-15 21:05:50,394 p=6036 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-15 21:05:50,442 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:05:50,562 p=6036 u=root n=ansible | TASK [rabbitmq : Check rabbitmq containers] ************************************
2023-02-15 21:05:51,726 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-15 21:05:51,828 p=6036 u=root n=ansible | TASK [rabbitmq : Creating rabbitmq volume] *************************************
2023-02-15 21:05:52,990 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:53,102 p=6036 u=root n=ansible | TASK [rabbitmq : Running RabbitMQ bootstrap container] *************************
2023-02-15 21:05:55,151 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:55,251 p=6036 u=root n=ansible | TASK [rabbitmq : Flush handlers] ***********************************************
2023-02-15 21:05:55,252 p=6036 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart first rabbitmq container] ******************
2023-02-15 21:05:55,579 p=6036 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/restart_services.yml for localhost
2023-02-15 21:05:55,580 p=6036 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart rabbitmq container] ************************
2023-02-15 21:05:57,266 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:05:57,276 p=6036 u=root n=ansible | RUNNING HANDLER [rabbitmq : Waiting for rabbitmq to start] *********************
2023-02-15 21:06:15,418 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:06:15,421 p=6036 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart remaining rabbitmq containers] *************
2023-02-15 21:06:15,748 p=6036 u=root n=ansible | skipping: [localhost] => (item=localhost) 
2023-02-15 21:06:16,117 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_outward_rabbitmq_True

2023-02-15 21:06:16,120 p=6036 u=root n=ansible | PLAY [Apply role rabbitmq (outward)] *******************************************
2023-02-15 21:06:16,121 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:16,123 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_etcd_True

2023-02-15 21:06:16,139 p=6036 u=root n=ansible | PLAY [Apply role etcd] *********************************************************
2023-02-15 21:06:16,140 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:06:16,159 p=6036 u=root n=ansible | PLAY [Apply role keystone] *****************************************************
2023-02-15 21:06:16,435 p=6036 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:06:16,713 p=6036 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/deploy.yml for localhost
2023-02-15 21:06:16,830 p=6036 u=root n=ansible | TASK [keystone : Ensuring config directories exist] ****************************
2023-02-15 21:06:17,628 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 21:06:18,249 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:06:18,937 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:06:19,100 p=6036 u=root n=ansible | TASK [keystone : Check if policies shall be overwritten] ***********************
2023-02-15 21:06:19,308 p=6036 u=root n=ansible | TASK [keystone : Set keystone policy file] *************************************
2023-02-15 21:06:19,358 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:19,585 p=6036 u=root n=ansible | TASK [keystone : Check if Keystone domain-specific config is supplied] *********
2023-02-15 21:06:20,111 p=6036 u=root n=ansible | ok: [localhost]
2023-02-15 21:06:20,249 p=6036 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:06:20,303 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:20,410 p=6036 u=root n=ansible | TASK [keystone : Copying over config.json files for services] ******************
2023-02-15 21:06:21,800 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 21:06:22,869 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:06:24,025 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:06:24,158 p=6036 u=root n=ansible | TASK [keystone : Copying over keystone.conf] ***********************************
2023-02-15 21:06:26,553 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 21:06:26,576 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:06:28,372 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:06:28,484 p=6036 u=root n=ansible | TASK [keystone : Copying keystone-startup script for keystone] *****************
2023-02-15 21:06:30,114 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:06:30,223 p=6036 u=root n=ansible | TASK [keystone : Create Keystone domain-specific config directory] *************
2023-02-15 21:06:30,703 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:30,932 p=6036 u=root n=ansible | TASK [keystone : Get file list in custom domains folder] ***********************
2023-02-15 21:06:30,971 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:31,079 p=6036 u=root n=ansible | TASK [keystone : Copying Keystone Domain specific settings] ********************
2023-02-15 21:06:31,302 p=6036 u=root n=ansible | TASK [keystone : Copying over existing policy file] ****************************
2023-02-15 21:06:31,681 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}}) 
2023-02-15 21:06:31,688 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:06:31,714 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:06:31,819 p=6036 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:06:31,891 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:32,005 p=6036 u=root n=ansible | TASK [keystone : Copying over wsgi-keystone.conf] ******************************
2023-02-15 21:06:33,783 p=6036 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/keystone/templates/wsgi-keystone.conf.j2)
2023-02-15 21:06:34,025 p=6036 u=root n=ansible | TASK [keystone : Checking whether keystone-paste.ini file exists] **************
2023-02-15 21:06:34,846 p=6036 u=root n=ansible | ok: [localhost]
2023-02-15 21:06:34,960 p=6036 u=root n=ansible | TASK [keystone : Copying over keystone-paste.ini] ******************************
2023-02-15 21:06:35,505 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:35,765 p=6036 u=root n=ansible | TASK [keystone : Generate the required cron jobs for the node] *****************
2023-02-15 21:06:36,625 p=6036 u=root n=ansible | ok: [localhost]
2023-02-15 21:06:36,744 p=6036 u=root n=ansible | TASK [keystone : Set fact with the generated cron jobs for building the crontab later] ***
2023-02-15 21:06:36,823 p=6036 u=root n=ansible | ok: [localhost]
2023-02-15 21:06:36,930 p=6036 u=root n=ansible | TASK [keystone : Copying files for keystone-fernet] ****************************
2023-02-15 21:06:38,708 p=6036 u=root n=ansible | changed: [localhost] => (item={'src': 'crontab.j2', 'dest': 'crontab'})
2023-02-15 21:06:40,183 p=6036 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-rotate.sh.j2', 'dest': 'fernet-rotate.sh'})
2023-02-15 21:06:41,664 p=6036 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-node-sync.sh.j2', 'dest': 'fernet-node-sync.sh'})
2023-02-15 21:06:43,148 p=6036 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-push.sh.j2', 'dest': 'fernet-push.sh'})
2023-02-15 21:06:44,769 p=6036 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-healthcheck.sh.j2', 'dest': 'fernet-healthcheck.sh'})
2023-02-15 21:06:46,518 p=6036 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa', 'dest': 'id_rsa'})
2023-02-15 21:06:48,110 p=6036 u=root n=ansible | changed: [localhost] => (item={'src': 'ssh_config.j2', 'dest': 'ssh_config'})
2023-02-15 21:06:48,236 p=6036 u=root n=ansible | TASK [keystone : Copying files for keystone-ssh] *******************************
2023-02-15 21:06:50,054 p=6036 u=root n=ansible | changed: [localhost] => (item={'src': 'sshd_config.j2', 'dest': 'sshd_config'})
2023-02-15 21:06:51,512 p=6036 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa.pub', 'dest': 'id_rsa.pub'})
2023-02-15 21:06:51,641 p=6036 u=root n=ansible | TASK [keystone : Check keystone containers] ************************************
2023-02-15 21:06:53,305 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-15 21:06:54,430 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:06:55,677 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:06:55,831 p=6036 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:06:55,886 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:06:56,122 p=6036 u=root n=ansible | TASK [keystone : Creating keystone database] ***********************************
2023-02-15 21:07:01,162 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:07:01,410 p=6036 u=root n=ansible | TASK [keystone : Creating Keystone database user and setting permissions] ******
2023-02-15 21:07:05,682 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:07:05,803 p=6036 u=root n=ansible | TASK [keystone : Checking for any running keystone_fernet containers] **********
2023-02-15 21:07:07,393 p=6036 u=root n=ansible | ok: [localhost]
2023-02-15 21:07:07,502 p=6036 u=root n=ansible | TASK [keystone : Group nodes where keystone_fernet is running] *****************
2023-02-15 21:07:07,585 p=6036 u=root n=ansible | ok: [localhost]
2023-02-15 21:07:07,694 p=6036 u=root n=ansible | TASK [keystone : Fail if any hosts need bootstrapping and not all hosts targeted] ***
2023-02-15 21:07:07,776 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:07:07,904 p=6036 u=root n=ansible | TASK [keystone : Running Keystone bootstrap container] *************************
2023-02-15 21:07:21,844 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:07:22,140 p=6036 u=root n=ansible | TASK [keystone : Running Keystone fernet bootstrap container] ******************
2023-02-15 21:07:31,005 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:07:31,136 p=6036 u=root n=ansible | TASK [keystone : Flush handlers] ***********************************************
2023-02-15 21:07:31,137 p=6036 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-ssh container] ********************
2023-02-15 21:07:33,380 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:07:33,382 p=6036 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-fernet container] *****************
2023-02-15 21:07:35,631 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:07:35,634 p=6036 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone container] ************************
2023-02-15 21:07:37,721 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:07:37,900 p=6036 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:07:38,086 p=6036 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/distribute_fernet.yml for localhost
2023-02-15 21:07:38,265 p=6036 u=root n=ansible | TASK [keystone : Waiting for Keystone SSH port to be UP] ***********************
2023-02-15 21:07:39,508 p=6036 u=root n=ansible | ok: [localhost]
2023-02-15 21:07:39,721 p=6036 u=root n=ansible | TASK [keystone : Run key distribution] *****************************************
2023-02-15 21:07:40,972 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:07:41,084 p=6036 u=root n=ansible | TASK [keystone : Creating admin project, user, role, service, and endpoint] ****
2023-02-15 21:07:52,105 p=6036 u=root n=ansible | changed: [localhost] => (item=RegionOne)
2023-02-15 21:07:52,226 p=6036 u=root n=ansible | TASK [service-ks-register : keystone | Creating services] **********************
2023-02-15 21:08:20,941 p=6036 u=root n=ansible | changed: [localhost] => (item={'name': 'keystone', 'service_type': 'identity'})
2023-02-15 21:08:21,061 p=6036 u=root n=ansible | TASK [service-ks-register : keystone | Creating endpoints] *********************
2023-02-15 21:08:28,811 p=6036 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.156:5000', 'interface': 'internal'})
2023-02-15 21:08:36,498 p=6036 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.156:5000', 'interface': 'public'})
2023-02-15 21:08:36,671 p=6036 u=root n=ansible | TASK [service-ks-register : keystone | Creating projects] **********************
2023-02-15 21:08:36,879 p=6036 u=root n=ansible | TASK [service-ks-register : keystone | Creating users] *************************
2023-02-15 21:08:37,051 p=6036 u=root n=ansible | TASK [service-ks-register : keystone | Creating roles] *************************
2023-02-15 21:08:37,232 p=6036 u=root n=ansible | TASK [service-ks-register : keystone | Granting user roles] ********************
2023-02-15 21:08:37,506 p=6036 u=root n=ansible | TASK [keystone : Creating default user role] ***********************************
2023-02-15 21:08:44,968 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:08:45,115 p=6036 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-15 21:08:45,225 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:08:45,655 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_opensearch_True

2023-02-15 21:08:45,666 p=6036 u=root n=ansible | PLAY [Apply role opensearch] ***************************************************
2023-02-15 21:08:45,666 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:08:45,671 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_swift_True

2023-02-15 21:08:45,678 p=6036 u=root n=ansible | PLAY [Apply role swift] ********************************************************
2023-02-15 21:08:45,678 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:08:45,679 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_ceph_rgw_True

2023-02-15 21:08:45,685 p=6036 u=root n=ansible | PLAY [Apply role ceph-rgw] *****************************************************
2023-02-15 21:08:45,685 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:08:45,687 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_glance_True

2023-02-15 21:08:45,693 p=6036 u=root n=ansible | PLAY [Apply role glance] *******************************************************
2023-02-15 21:08:45,693 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:08:45,706 p=6036 u=root n=ansible | PLAY [Apply role ironic] *******************************************************
2023-02-15 21:08:45,904 p=6036 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 21:08:46,254 p=6036 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/ironic/tasks/deploy.yml for localhost
2023-02-15 21:08:46,380 p=6036 u=root n=ansible | TASK [service-ks-register : ironic | Creating services] ************************
2023-02-15 21:08:54,020 p=6036 u=root n=ansible | changed: [localhost] => (item={'name': 'ironic', 'service_type': 'baremetal'})
2023-02-15 21:09:02,291 p=6036 u=root n=ansible | changed: [localhost] => (item={'name': 'ironic-inspector', 'service_type': 'baremetal-introspection'})
2023-02-15 21:09:02,416 p=6036 u=root n=ansible | TASK [service-ks-register : ironic | Creating endpoints] ***********************
2023-02-15 21:09:10,821 p=6036 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic', 'url': 'http://169.16.1.156:6385', 'interface': 'internal'})
2023-02-15 21:09:18,776 p=6036 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic', 'url': 'http://169.16.1.156:6385', 'interface': 'public'})
2023-02-15 21:09:27,040 p=6036 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic-inspector', 'url': 'http://169.16.1.156:5050', 'interface': 'internal'})
2023-02-15 21:09:34,989 p=6036 u=root n=ansible | changed: [localhost] => (item={'service': 'ironic-inspector', 'url': 'http://169.16.1.156:5050', 'interface': 'public'})
2023-02-15 21:09:35,115 p=6036 u=root n=ansible | TASK [service-ks-register : ironic | Creating projects] ************************
2023-02-15 21:09:44,216 p=6036 u=root n=ansible | changed: [localhost] => (item=service)
2023-02-15 21:09:44,354 p=6036 u=root n=ansible | TASK [service-ks-register : ironic | Creating users] ***************************
2023-02-15 21:09:54,076 p=6036 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic', 'project': 'service'})
2023-02-15 21:10:03,245 p=6036 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic-inspector', 'project': 'service'})
2023-02-15 21:10:03,249 p=6036 u=root n=ansible | [WARNING]: Module did not set no_log for update_password

2023-02-15 21:10:03,359 p=6036 u=root n=ansible | TASK [service-ks-register : ironic | Creating roles] ***************************
2023-02-15 21:10:10,525 p=6036 u=root n=ansible | ok: [localhost] => (item=admin)
2023-02-15 21:10:10,696 p=6036 u=root n=ansible | TASK [service-ks-register : ironic | Granting user roles] **********************
2023-02-15 21:10:23,458 p=6036 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic', 'role': 'admin', 'project': 'service'})
2023-02-15 21:10:35,180 p=6036 u=root n=ansible | changed: [localhost] => (item={'user': 'ironic-inspector', 'role': 'admin', 'project': 'service'})
2023-02-15 21:10:35,408 p=6036 u=root n=ansible | TASK [module-load : Load modules] **********************************************
2023-02-15 21:10:37,075 p=6036 u=root n=ansible | changed: [localhost] => (item=iscsi_tcp)
2023-02-15 21:10:37,194 p=6036 u=root n=ansible | TASK [module-load : Persist modules via modules-load.d] ************************
2023-02-15 21:10:38,846 p=6036 u=root n=ansible | changed: [localhost] => (item=iscsi_tcp)
2023-02-15 21:10:38,986 p=6036 u=root n=ansible | TASK [module-load : Drop module persistence] ***********************************
2023-02-15 21:10:39,123 p=6036 u=root n=ansible | skipping: [localhost] => (item=iscsi_tcp) 
2023-02-15 21:10:39,456 p=6036 u=root n=ansible | TASK [ironic : Ensuring config directories exist] ******************************
2023-02-15 21:10:40,435 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 21:10:41,187 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:41,684 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 21:10:42,275 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:10:42,801 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:43,299 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:10:43,451 p=6036 u=root n=ansible | TASK [ironic : Check if Ironic policies shall be overwritten] ******************
2023-02-15 21:10:43,653 p=6036 u=root n=ansible | TASK [ironic : Check if Ironic Inspector policies shall be overwritten] ********
2023-02-15 21:10:43,825 p=6036 u=root n=ansible | TASK [ironic : Set ironic policy file] *****************************************
2023-02-15 21:10:43,866 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:10:43,982 p=6036 u=root n=ansible | TASK [ironic : Set ironic-inspector policy file] *******************************
2023-02-15 21:10:44,069 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:10:44,208 p=6036 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 21:10:44,263 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:10:44,373 p=6036 u=root n=ansible | TASK [ironic : Copying over config.json files for services] ********************
2023-02-15 21:10:45,868 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 21:10:47,192 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:48,550 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 21:10:49,677 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:10:50,756 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:51,918 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:10:52,042 p=6036 u=root n=ansible | TASK [ironic : Copying over ironic.conf] ***************************************
2023-02-15 21:10:54,056 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 21:10:55,934 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:10:55,947 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 21:10:55,956 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:10:55,964 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:10:55,976 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:10:56,115 p=6036 u=root n=ansible | TASK [ironic : Copying over inspector.conf] ************************************
2023-02-15 21:10:58,626 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:10:58,727 p=6036 u=root n=ansible | TASK [ironic : Copying over dnsmasq.conf] **************************************
2023-02-15 21:11:00,603 p=6036 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic-dnsmasq.conf.j2)
2023-02-15 21:11:00,734 p=6036 u=root n=ansible | TASK [ironic : Copying pxelinux.cfg default] ***********************************
2023-02-15 21:11:01,333 p=6036 u=root n=ansible | skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/pxelinux.default.j2) 
2023-02-15 21:11:01,446 p=6036 u=root n=ansible | TASK [ironic : Copying ironic_pxe_uefi.cfg default] ****************************
2023-02-15 21:11:02,060 p=6036 u=root n=ansible | skipping: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic_pxe_uefi.default.j2) 
2023-02-15 21:11:02,207 p=6036 u=root n=ansible | TASK [ironic : Copying ironic-agent kernel and initramfs (PXE)] ****************
2023-02-15 21:11:02,918 p=6036 u=root n=ansible | skipping: [localhost] => (item=ironic-agent.kernel) 
2023-02-15 21:11:03,447 p=6036 u=root n=ansible | skipping: [localhost] => (item=ironic-agent.initramfs) 
2023-02-15 21:11:03,983 p=6036 u=root n=ansible | skipping: [localhost] => (item=ir-deploy-redfish.efiboot) 
2023-02-15 21:11:04,499 p=6036 u=root n=ansible | skipping: [localhost] => (item=rhel009_wholedisk_image.qcow2) 
2023-02-15 21:11:04,611 p=6036 u=root n=ansible | TASK [ironic : Copying ironic-agent kernel and initramfs (iPXE)] ***************
2023-02-15 21:11:06,723 p=6036 u=root n=ansible | changed: [localhost] => (item=ironic-agent.kernel)
2023-02-15 21:11:15,123 p=6036 u=root n=ansible | changed: [localhost] => (item=ironic-agent.initramfs)
2023-02-15 21:11:17,045 p=6036 u=root n=ansible | changed: [localhost] => (item=ir-deploy-redfish.efiboot)
2023-02-15 21:11:30,979 p=6036 u=root n=ansible | changed: [localhost] => (item=rhel009_wholedisk_image.qcow2)
2023-02-15 21:11:31,152 p=6036 u=root n=ansible | TASK [ironic : Copying inspector.ipxe] *****************************************
2023-02-15 21:11:33,310 p=6036 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/inspector.ipxe.j2)
2023-02-15 21:11:33,463 p=6036 u=root n=ansible | TASK [ironic : Copying ironic-http-httpd.conf] *********************************
2023-02-15 21:11:35,561 p=6036 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/ironic/templates/ironic-http-httpd.conf.j2)
2023-02-15 21:11:35,734 p=6036 u=root n=ansible | TASK [ironic : Copying over existing Ironic policy file] ***********************
2023-02-15 21:11:36,251 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}}) 
2023-02-15 21:11:36,257 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:11:36,267 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 21:11:36,275 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:11:36,285 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:11:36,290 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:11:36,417 p=6036 u=root n=ansible | TASK [ironic : Copying over existing Ironic Inspector policy file] *************
2023-02-15 21:11:36,752 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}}) 
2023-02-15 21:11:36,761 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:11:36,771 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}}) 
2023-02-15 21:11:36,777 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:11:36,785 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-15 21:11:36,789 p=6036 u=root n=ansible | skipping: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-15 21:11:36,899 p=6036 u=root n=ansible | TASK [ironic : Copying over ironic-api-wsgi.conf] ******************************
2023-02-15 21:11:38,496 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:11:38,598 p=6036 u=root n=ansible | TASK [ironic : Check ironic containers] ****************************************
2023-02-15 21:11:40,069 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-api', 'value': {'container_name': 'ironic_api', 'group': 'ironic-api', 'enabled': True, 'image': 'kolla/ironic-api:14.6.0', 'volumes': ['/etc/kolla/ironic-api/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_api': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}, 'ironic_api_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '6385', 'listen_port': '6385', 'tls_backend': 'no'}}}})
2023-02-15 21:11:41,407 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-conductor', 'value': {'container_name': 'ironic_conductor', 'group': 'ironic-conductor', 'enabled': True, 'image': 'kolla/ironic-conductor:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-conductor/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/sys:/sys', '/dev:/dev', '/run:/run:shared', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:11:42,553 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-inspector', 'value': {'container_name': 'ironic_inspector', 'group': 'ironic-inspector', 'enabled': True, 'image': 'kolla/ironic-inspector:14.6.0', 'privileged': True, 'volumes': ['/etc/kolla/ironic-inspector/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic_inspector_dhcp_hosts:/var/lib/ironic-inspector/dhcp-hostsdir', ''], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'ironic_inspector': {'enabled': 'yes', 'mode': 'http', 'external': False, 'port': '5050', 'listen_port': '5050'}, 'ironic_inspector_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'port': '5050', 'listen_port': '5050'}}}})
2023-02-15 21:11:43,826 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-tftp', 'value': {'container_name': 'ironic_tftp', 'group': 'ironic-tftp', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'environment': {'TFTPBOOT_PATH': '/var/lib/ironic/tftpboot', 'HTTPBOOT_PATH': '/var/lib/ironic/httpboot'}, 'volumes': ['/etc/kolla/ironic-tftp/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:11:45,127 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-http', 'value': {'container_name': 'ironic_http', 'group': 'ironic-http', 'enabled': True, 'image': 'kolla/ironic-pxe:14.6.0', 'volumes': ['/etc/kolla/ironic-http/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'ironic:/var/lib/ironic', 'kolla_logs:/var/log/kolla'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:11:46,111 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'ironic-dnsmasq', 'value': {'container_name': 'ironic_dnsmasq', 'group': 'ironic-inspector', 'enabled': True, 'cap_add': ['NET_ADMIN'], 'image': 'kolla/dnsmasq:14.6.0', 'volumes': ['/etc/kolla/ironic-dnsmasq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla', 'ironic:/var/lib/ironic', 'ironic_inspector_dhcp_hosts:/etc/dnsmasq/dhcp-hostsdir:ro'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-15 21:11:46,243 p=6036 u=root n=ansible | TASK [ironic : include_tasks] **************************************************
2023-02-15 21:11:46,315 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:11:46,638 p=6036 u=root n=ansible | TASK [ironic : Creating Ironic database] ***************************************
2023-02-15 21:11:50,769 p=6036 u=root n=ansible | changed: [localhost] => (item={'database_name': 'ironic', 'group': 'ironic-api'})
2023-02-15 21:11:54,458 p=6036 u=root n=ansible | changed: [localhost] => (item={'database_name': 'ironic_inspector', 'group': 'ironic-inspector'})
2023-02-15 21:11:54,690 p=6036 u=root n=ansible | TASK [ironic : Creating Ironic database user and setting permissions] **********
2023-02-15 21:11:58,812 p=6036 u=root n=ansible | changed: [localhost] => (item=ironic)
2023-02-15 21:12:02,706 p=6036 u=root n=ansible | changed: [localhost] => (item=ironic_inspector)
2023-02-15 21:12:03,264 p=6036 u=root n=ansible | TASK [ironic : Running Ironic bootstrap container] *****************************
2023-02-15 21:12:22,103 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:12:22,591 p=6036 u=root n=ansible | TASK [ironic : Running Ironic Inspector bootstrap container] *******************
2023-02-15 21:12:29,517 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:12:29,704 p=6036 u=root n=ansible | TASK [ironic : Running ironic-tftp bootstrap container] ************************
2023-02-15 21:12:32,523 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:12:32,698 p=6036 u=root n=ansible | TASK [ironic : Flush handlers] *************************************************
2023-02-15 21:12:32,699 p=6036 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-conductor container] ******************
2023-02-15 21:12:34,968 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:12:34,970 p=6036 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-api container] ************************
2023-02-15 21:12:37,217 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:12:37,219 p=6036 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-inspector container] ******************
2023-02-15 21:12:39,687 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:12:39,689 p=6036 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-tftp container] ***********************
2023-02-15 21:12:42,773 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:12:42,792 p=6036 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-http container] ***********************
2023-02-15 21:12:46,884 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:12:46,895 p=6036 u=root n=ansible | RUNNING HANDLER [ironic : Restart ironic-dnsmasq container] ********************
2023-02-15 21:12:55,451 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:12:55,646 p=6036 u=root n=ansible | TASK [ironic : Flush and delete ironic-inspector iptables chain] ***************
2023-02-15 21:12:57,459 p=6036 u=root n=ansible | ok: [localhost] => (item=flush)
2023-02-15 21:12:58,212 p=6036 u=root n=ansible | ok: [localhost] => (item=delete-chain)
2023-02-15 21:12:58,620 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_cinder_True

2023-02-15 21:12:58,635 p=6036 u=root n=ansible | PLAY [Apply role cinder] *******************************************************
2023-02-15 21:12:58,635 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:58,637 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_placement_True

2023-02-15 21:12:58,646 p=6036 u=root n=ansible | PLAY [Apply role placement] ****************************************************
2023-02-15 21:12:58,646 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:58,648 p=6036 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_nova_True

2023-02-15 21:12:58,655 p=6036 u=root n=ansible | PLAY [Bootstrap nova API databases] ********************************************
2023-02-15 21:12:58,656 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:58,664 p=6036 u=root n=ansible | PLAY [Bootstrap nova cell databases] *******************************************
2023-02-15 21:12:58,665 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:58,674 p=6036 u=root n=ansible | PLAY [Apply role nova] *********************************************************
2023-02-15 21:12:58,674 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:58,686 p=6036 u=root n=ansible | PLAY [Apply role nova-cell] ****************************************************
2023-02-15 21:12:58,686 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:58,694 p=6036 u=root n=ansible | PLAY [Refresh nova scheduler cell cache] ***************************************
2023-02-15 21:12:58,694 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:58,702 p=6036 u=root n=ansible | PLAY [Reload global Nova super conductor services] *****************************
2023-02-15 21:12:58,702 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:58,709 p=6036 u=root n=ansible | PLAY [Reload Nova cell services] ***********************************************
2023-02-15 21:12:58,710 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:58,717 p=6036 u=root n=ansible | PLAY [Reload global Nova API services] *****************************************
2023-02-15 21:12:58,718 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:58,726 p=6036 u=root n=ansible | PLAY [Run Nova API online data migrations] *************************************
2023-02-15 21:12:58,727 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:58,742 p=6036 u=root n=ansible | PLAY [Run Nova cell online data migrations] ************************************
2023-02-15 21:12:58,742 p=6036 u=root n=ansible | skipping: no hosts matched
2023-02-15 21:12:58,754 p=6036 u=root n=ansible | PLAY [Apply role openvswitch] **************************************************
2023-02-15 21:12:58,957 p=6036 u=root n=ansible | TASK [openvswitch : include_tasks] *********************************************
2023-02-15 21:12:59,233 p=6036 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/openvswitch/tasks/deploy.yml for localhost
2023-02-15 21:12:59,340 p=6036 u=root n=ansible | TASK [module-load : Load modules] **********************************************
2023-02-15 21:13:00,068 p=6036 u=root n=ansible | changed: [localhost] => (item=openvswitch)
2023-02-15 21:13:00,177 p=6036 u=root n=ansible | TASK [module-load : Persist modules via modules-load.d] ************************
2023-02-15 21:13:01,608 p=6036 u=root n=ansible | changed: [localhost] => (item=openvswitch)
2023-02-15 21:13:01,813 p=6036 u=root n=ansible | TASK [module-load : Drop module persistence] ***********************************
2023-02-15 21:13:01,953 p=6036 u=root n=ansible | skipping: [localhost] => (item=openvswitch) 
2023-02-15 21:13:02,251 p=6036 u=root n=ansible | TASK [openvswitch : Ensuring config directories exist] *************************
2023-02-15 21:13:02,994 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:13:03,557 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:13:03,674 p=6036 u=root n=ansible | TASK [openvswitch : Copying over config.json files for services] ***************
2023-02-15 21:13:04,956 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:13:06,090 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:13:06,244 p=6036 u=root n=ansible | TASK [openvswitch : Copying over start-ovs file for openvswitch-vswitchd] ******
2023-02-15 21:13:07,478 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:13:07,580 p=6036 u=root n=ansible | TASK [openvswitch : Copying over start-ovsdb-server files for openvswitch-db-server] ***
2023-02-15 21:13:08,733 p=6036 u=root n=ansible | changed: [localhost]
2023-02-15 21:13:08,841 p=6036 u=root n=ansible | TASK [openvswitch : Copying over ovs-vsctl wrapper] ****************************
2023-02-15 21:13:09,048 p=6036 u=root n=ansible | skipping: [localhost]
2023-02-15 21:13:09,157 p=6036 u=root n=ansible | TASK [openvswitch : Check openvswitch containers] ******************************
2023-02-15 21:13:11,094 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-db-server', 'value': {'container_name': 'openvswitch_db', 'image': 'kolla/openvswitch-db-server:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'volumes': ['/etc/kolla/openvswitch-db-server/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/', 'openvswitch_db:/var/lib/openvswitch/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:13:12,203 p=6036 u=root n=ansible | changed: [localhost] => (item={'key': 'openvswitch-vswitchd', 'value': {'container_name': 'openvswitch_vswitchd', 'image': 'kolla/openvswitch-vswitchd:14.6.0', 'enabled': True, 'group': 'openvswitch', 'host_in_groups': True, 'privileged': True, 'volumes': ['/etc/kolla/openvswitch-vswitchd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/lib/modules:/lib/modules:ro', '/run/openvswitch:/run/openvswitch:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-15 21:13:12,323 p=6036 u=root n=ansible | TASK [openvswitch : Flush Handlers] ********************************************
2023-02-15 21:13:12,324 p=6036 u=root n=ansible | [WARNING]: flush_handlers task does not support when conditional

2023-02-15 21:13:12,324 p=6036 u=root n=ansible | RUNNING HANDLER [openvswitch : Restart openvswitch-db-server container] ********
2023-02-15 21:13:20,162 p=6036 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "msg": "'Traceback (most recent call last):\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/client.py\", line 268, in _raise_for_status\\n    response.raise_for_status()\\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 1021, in raise_for_status\\n    raise HTTPError(http_error_msg, response=self)\\nrequests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.42/images/create?tag=14.6.0&fromImage=kolla%2Fopenvswitch-db-server\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \"/tmp/ansible_kolla_docker_payload_5al3zux3/ansible_kolla_docker_payload.zip/ansible/modules/kolla_docker.py\", line 404, in main\\n  File \"/tmp/ansible_kolla_docker_payload_5al3zux3/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 654, in recreate_or_restart_container\\n    self.start_container()\\n  File \"/tmp/ansible_kolla_docker_payload_5al3zux3/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 672, in start_container\\n    self.pull_image()\\n  File \"/tmp/ansible_kolla_docker_payload_5al3zux3/ansible_kolla_docker_payload.zip/ansible/module_utils/kolla_docker_worker.py\", line 453, in pull_image\\n    json.loads(line.strip().decode(\\'utf-8\\')) for line in self.dc.pull(\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/image.py\", line 430, in pull\\n    self._raise_for_status(response)\\n  File \"/usr/local/lib/python3.9/site-packages/docker/api/client.py\", line 270, in _raise_for_status\\n    raise create_api_error_from_http_exception(e)\\n  File \"/usr/local/lib/python3.9/site-packages/docker/errors.py\", line 31, in create_api_error_from_http_exception\\n    raise cls(e, response=response, explanation=explanation)\\ndocker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.42/images/create?tag=14.6.0&fromImage=kolla%2Fopenvswitch-db-server: Not Found (\"manifest for kolla/openvswitch-db-server:14.6.0 not found: manifest unknown: manifest unknown\")\\n'"}
2023-02-15 21:13:20,171 p=6036 u=root n=ansible | RUNNING HANDLER [openvswitch : Restart openvswitch-vswitchd container] *********
2023-02-15 21:13:20,177 p=6036 u=root n=ansible | NO MORE HOSTS LEFT *************************************************************
2023-02-15 21:13:20,181 p=6036 u=root n=ansible | PLAY RECAP *********************************************************************
2023-02-15 21:13:20,182 p=6036 u=root n=ansible | localhost                  : ok=101  changed=78   unreachable=0    failed=1    skipped=38   rescued=0    ignored=0   
