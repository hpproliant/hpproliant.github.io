2023-02-13 23:40:15,287 p=5850 u=root n=ansible | [WARNING]: Invalid characters were found in group names but not replaced, use
-vvvv to see details

2023-02-13 23:40:20,042 p=5850 u=root n=ansible | PLAY [Gather facts for all hosts] **********************************************
2023-02-13 23:40:20,289 p=5850 u=root n=ansible | TASK [Gather facts] ************************************************************
2023-02-13 23:40:22,402 p=5850 u=root n=ansible | ok: [localhost]
2023-02-13 23:40:22,477 p=5850 u=root n=ansible | TASK [Group hosts to determine when using --limit] *****************************
2023-02-13 23:40:22,539 p=5850 u=root n=ansible | ok: [localhost]
2023-02-13 23:40:22,703 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
all_using_limit_True

2023-02-13 23:40:22,711 p=5850 u=root n=ansible | PLAY [Gather facts for all hosts (if using --limit)] ***************************
2023-02-13 23:40:22,711 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:40:22,714 p=5850 u=root n=ansible | PLAY [Group hosts based on configuration] **************************************
2023-02-13 23:40:22,861 p=5850 u=root n=ansible | TASK [Group hosts based on Kolla action] ***************************************
2023-02-13 23:40:22,909 p=5850 u=root n=ansible | ok: [localhost]
2023-02-13 23:40:22,985 p=5850 u=root n=ansible | TASK [Group hosts based on enabled services] ***********************************
2023-02-13 23:40:23,172 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_aodh_False)
2023-02-13 23:40:23,188 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_barbican_False)
2023-02-13 23:40:23,204 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_blazar_False)
2023-02-13 23:40:23,219 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_ceilometer_False)
2023-02-13 23:40:23,234 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_ceph_rgw_False)
2023-02-13 23:40:23,250 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_cinder_False)
2023-02-13 23:40:23,265 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_cloudkitty_False)
2023-02-13 23:40:23,282 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_collectd_False)
2023-02-13 23:40:23,297 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_cyborg_False)
2023-02-13 23:40:23,313 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_designate_False)
2023-02-13 23:40:23,331 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_etcd_False)
2023-02-13 23:40:23,346 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_freezer_False)
2023-02-13 23:40:23,362 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_glance_False)
2023-02-13 23:40:23,379 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_gnocchi_False)
2023-02-13 23:40:23,394 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_grafana_False)
2023-02-13 23:40:23,409 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_hacluster_False)
2023-02-13 23:40:23,423 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_heat_False)
2023-02-13 23:40:23,438 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_horizon_False)
2023-02-13 23:40:23,455 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_influxdb_False)
2023-02-13 23:40:23,469 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_ironic_False)
2023-02-13 23:40:23,483 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_iscsid_False)
2023-02-13 23:40:23,498 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_keystone_True)
2023-02-13 23:40:23,512 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_kuryr_False)
2023-02-13 23:40:23,527 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_loadbalancer_False)
2023-02-13 23:40:23,540 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_magnum_False)
2023-02-13 23:40:23,553 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_manila_False)
2023-02-13 23:40:23,566 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_mariadb_False)
2023-02-13 23:40:23,579 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_masakari_False)
2023-02-13 23:40:23,591 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_memcached_False)
2023-02-13 23:40:23,605 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_mistral_False)
2023-02-13 23:40:23,618 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_multipathd_False)
2023-02-13 23:40:23,632 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_murano_False)
2023-02-13 23:40:23,644 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_neutron_False)
2023-02-13 23:40:23,660 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_nova_False)
2023-02-13 23:40:23,671 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_octavia_False)
2023-02-13 23:40:23,683 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_False)
2023-02-13 23:40:23,696 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_opensearch_dashboards_False)
2023-02-13 23:40:23,712 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_openvswitch_False_enable_ovs_dpdk_False)
2023-02-13 23:40:23,724 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_outward_rabbitmq_False)
2023-02-13 23:40:23,737 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_ovn_False)
2023-02-13 23:40:23,751 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_placement_False)
2023-02-13 23:40:23,765 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_prometheus_False)
2023-02-13 23:40:23,777 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_rabbitmq_True)
2023-02-13 23:40:23,790 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_redis_False)
2023-02-13 23:40:23,802 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_sahara_False)
2023-02-13 23:40:23,815 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_senlin_False)
2023-02-13 23:40:23,829 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_skydive_False)
2023-02-13 23:40:23,842 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_solum_False)
2023-02-13 23:40:23,858 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_swift_False)
2023-02-13 23:40:23,873 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_tacker_False)
2023-02-13 23:40:23,888 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_telegraf_False)
2023-02-13 23:40:23,902 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_trove_False)
2023-02-13 23:40:23,916 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_venus_False)
2023-02-13 23:40:23,931 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_vitrage_False)
2023-02-13 23:40:23,946 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_watcher_False)
2023-02-13 23:40:23,956 p=5850 u=root n=ansible | ok: [localhost] => (item=enable_zun_False)
2023-02-13 23:40:24,240 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
kolla_action_precheck

2023-02-13 23:40:24,242 p=5850 u=root n=ansible | PLAY [Apply role prechecks] ****************************************************
2023-02-13 23:40:24,242 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:40:24,255 p=5850 u=root n=ansible | PLAY [Apply role common] *******************************************************
2023-02-13 23:40:24,435 p=5850 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-13 23:40:24,622 p=5850 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/common/tasks/deploy.yml for localhost
2023-02-13 23:40:24,714 p=5850 u=root n=ansible | TASK [common : Ensuring config directories exist] ******************************
2023-02-13 23:40:25,678 p=5850 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'cron'}, 'cron'])
2023-02-13 23:40:25,745 p=5850 u=root n=ansible | skipping: [localhost] => (item=[{'service_name': 'fluentd'}, 'fluentd']) 
2023-02-13 23:40:26,238 p=5850 u=root n=ansible | changed: [localhost] => (item=[{'service_name': 'kolla-toolbox'}, 'kolla-toolbox'])
2023-02-13 23:40:26,333 p=5850 u=root n=ansible | TASK [common : include_tasks] **************************************************
2023-02-13 23:40:26,375 p=5850 u=root n=ansible | skipping: [localhost]
2023-02-13 23:40:26,475 p=5850 u=root n=ansible | TASK [common : Copying over config.json files for services] ********************
2023-02-13 23:40:26,596 p=5850 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-13 23:40:28,404 p=5850 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-13 23:40:29,390 p=5850 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-13 23:40:29,575 p=5850 u=root n=ansible | TASK [common : Find custom fluentd input config files] *************************
2023-02-13 23:40:29,668 p=5850 u=root n=ansible | skipping: [localhost]
2023-02-13 23:40:29,852 p=5850 u=root n=ansible | TASK [common : Find custom fluentd filter config files] ************************
2023-02-13 23:40:29,944 p=5850 u=root n=ansible | skipping: [localhost]
2023-02-13 23:40:30,144 p=5850 u=root n=ansible | TASK [common : Find custom fluentd format config files] ************************
2023-02-13 23:40:30,233 p=5850 u=root n=ansible | skipping: [localhost]
2023-02-13 23:40:30,413 p=5850 u=root n=ansible | TASK [common : Find custom fluentd output config files] ************************
2023-02-13 23:40:30,501 p=5850 u=root n=ansible | skipping: [localhost]
2023-02-13 23:40:30,597 p=5850 u=root n=ansible | TASK [common : Copying over td-agent.conf] *************************************
2023-02-13 23:40:30,691 p=5850 u=root n=ansible | skipping: [localhost]
2023-02-13 23:40:30,784 p=5850 u=root n=ansible | TASK [common : Copying over cron logrotate config file] ************************
2023-02-13 23:40:31,931 p=5850 u=root n=ansible | changed: [localhost]
2023-02-13 23:40:32,044 p=5850 u=root n=ansible | TASK [common : Ensure RabbitMQ Erlang cookie exists] ***************************
2023-02-13 23:40:33,135 p=5850 u=root n=ansible | changed: [localhost]
2023-02-13 23:40:33,229 p=5850 u=root n=ansible | TASK [common : Ensuring config directories have correct owner and permission] ***
2023-02-13 23:40:33,339 p=5850 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-13 23:40:33,354 p=5850 u=root n=ansible | skipping: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-13 23:40:33,787 p=5850 u=root n=ansible | ok: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-13 23:40:33,881 p=5850 u=root n=ansible | TASK [common : Copy rabbitmq-env.conf to kolla toolbox] ************************
2023-02-13 23:40:34,895 p=5850 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/rabbitmq-env.conf.j2)
2023-02-13 23:40:34,988 p=5850 u=root n=ansible | TASK [common : Copy rabbitmq erl_inetrc to kolla toolbox] **********************
2023-02-13 23:40:36,009 p=5850 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/common/templates/erl_inetrc.j2)
2023-02-13 23:40:36,105 p=5850 u=root n=ansible | TASK [common : Check common containers] ****************************************
2023-02-13 23:40:36,212 p=5850 u=root n=ansible | skipping: [localhost] => (item={'key': 'fluentd', 'value': {'container_name': 'fluentd', 'group': 'fluentd', 'enabled': False, 'image': 'kolla/fluentd:14.6.0', 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS'}, 'volumes': ['/etc/kolla/fluentd/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'fluentd_data:/var/lib/fluentd/data/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}}) 
2023-02-13 23:40:37,895 p=5850 u=root n=ansible | changed: [localhost] => (item={'key': 'kolla-toolbox', 'value': {'container_name': 'kolla_toolbox', 'group': 'kolla-toolbox', 'enabled': True, 'image': 'kolla/kolla-toolbox:14.6.0', 'environment': {'ANSIBLE_NOCOLOR': '1', 'ANSIBLE_LIBRARY': '/usr/share/ansible'}, 'privileged': True, 'volumes': ['/etc/kolla/kolla-toolbox/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '/dev/:/dev/', '/run/:/run/:shared', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-13 23:40:38,824 p=5850 u=root n=ansible | changed: [localhost] => (item={'key': 'cron', 'value': {'container_name': 'cron', 'group': 'cron', 'enabled': True, 'image': 'kolla/cron:14.6.0', 'environment': {'DUMMY_ENVIRONMENT': 'kolla_useless_env', 'KOLLA_LOGROTATE_SCHEDULE': 'daily'}, 'volumes': ['/etc/kolla/cron/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}}})
2023-02-13 23:40:38,924 p=5850 u=root n=ansible | TASK [common : Creating log volume] ********************************************
2023-02-13 23:40:39,915 p=5850 u=root n=ansible | changed: [localhost]
2023-02-13 23:40:40,010 p=5850 u=root n=ansible | TASK [common : Link kolla_logs volume to /var/log/kolla] ***********************
2023-02-13 23:40:40,480 p=5850 u=root n=ansible | changed: [localhost]
2023-02-13 23:40:40,575 p=5850 u=root n=ansible | TASK [common : Flush handlers] *************************************************
2023-02-13 23:40:40,576 p=5850 u=root n=ansible | RUNNING HANDLER [common : Restart kolla-toolbox container] *********************
2023-02-13 23:40:42,804 p=5850 u=root n=ansible | changed: [localhost]
2023-02-13 23:40:42,805 p=5850 u=root n=ansible | RUNNING HANDLER [common : Initializing toolbox container using normal user] ****
2023-02-13 23:40:47,121 p=5850 u=root n=ansible | ok: [localhost]
2023-02-13 23:40:47,123 p=5850 u=root n=ansible | RUNNING HANDLER [common : Restart cron container] ******************************
2023-02-13 23:40:48,951 p=5850 u=root n=ansible | changed: [localhost]
2023-02-13 23:40:49,266 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_loadbalancer_True

2023-02-13 23:40:49,277 p=5850 u=root n=ansible | PLAY [Apply role loadbalancer] *************************************************
2023-02-13 23:40:49,278 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:40:49,279 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_collectd_True

2023-02-13 23:40:49,286 p=5850 u=root n=ansible | PLAY [Apply role collectd] *****************************************************
2023-02-13 23:40:49,286 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:40:49,288 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_influxdb_True

2023-02-13 23:40:49,294 p=5850 u=root n=ansible | PLAY [Apply role influxdb] *****************************************************
2023-02-13 23:40:49,294 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:40:49,296 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_telegraf_True

2023-02-13 23:40:49,301 p=5850 u=root n=ansible | PLAY [Apply role telegraf] *****************************************************
2023-02-13 23:40:49,301 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:40:49,303 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_redis_True

2023-02-13 23:40:49,309 p=5850 u=root n=ansible | PLAY [Apply role redis] ********************************************************
2023-02-13 23:40:49,309 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:40:49,311 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_mariadb_True

2023-02-13 23:40:49,313 p=5850 u=root n=ansible | PLAY [Apply role mariadb] ******************************************************
2023-02-13 23:40:49,313 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:40:49,314 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_memcached_True

2023-02-13 23:40:49,320 p=5850 u=root n=ansible | PLAY [Apply role memcached] ****************************************************
2023-02-13 23:40:49,320 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:40:49,326 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_prometheus_True

2023-02-13 23:40:49,332 p=5850 u=root n=ansible | PLAY [Apply role prometheus] ***************************************************
2023-02-13 23:40:49,332 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:40:49,333 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_iscsid_True

2023-02-13 23:40:49,338 p=5850 u=root n=ansible | PLAY [Apply role iscsi] ********************************************************
2023-02-13 23:40:49,339 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:40:49,340 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_multipathd_True

2023-02-13 23:40:49,345 p=5850 u=root n=ansible | PLAY [Apply role multipathd] ***************************************************
2023-02-13 23:40:49,345 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:40:49,350 p=5850 u=root n=ansible | PLAY [Apply role rabbitmq] *****************************************************
2023-02-13 23:40:49,539 p=5850 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-13 23:40:49,722 p=5850 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/deploy.yml for localhost
2023-02-13 23:40:49,815 p=5850 u=root n=ansible | TASK [rabbitmq : Ensuring config directories exist] ****************************
2023-02-13 23:40:50,421 p=5850 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-13 23:40:50,524 p=5850 u=root n=ansible | TASK [rabbitmq : Copying over config.json files for services] ******************
2023-02-13 23:40:51,684 p=5850 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-13 23:40:51,792 p=5850 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq-env.conf] *******************************
2023-02-13 23:40:52,989 p=5850 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq-env.conf.j2)
2023-02-13 23:40:53,090 p=5850 u=root n=ansible | TASK [rabbitmq : Copying over rabbitmq.conf] ***********************************
2023-02-13 23:40:54,463 p=5850 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/rabbitmq.conf.j2)
2023-02-13 23:40:54,587 p=5850 u=root n=ansible | TASK [rabbitmq : Copying over erl_inetrc] **************************************
2023-02-13 23:40:55,761 p=5850 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/erl_inetrc.j2)
2023-02-13 23:40:55,860 p=5850 u=root n=ansible | TASK [rabbitmq : Copying over advanced.config] *********************************
2023-02-13 23:40:57,291 p=5850 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/advanced.config.j2)
2023-02-13 23:40:57,392 p=5850 u=root n=ansible | TASK [rabbitmq : Copying over definitions.json] ********************************
2023-02-13 23:40:58,654 p=5850 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/definitions.json.j2)
2023-02-13 23:40:58,762 p=5850 u=root n=ansible | TASK [rabbitmq : Copying over enabled_plugins] *********************************
2023-02-13 23:40:59,862 p=5850 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/rabbitmq/templates/enabled_plugins.j2)
2023-02-13 23:40:59,959 p=5850 u=root n=ansible | TASK [rabbitmq : include_tasks] ************************************************
2023-02-13 23:41:00,001 p=5850 u=root n=ansible | skipping: [localhost]
2023-02-13 23:41:00,100 p=5850 u=root n=ansible | TASK [rabbitmq : Check rabbitmq containers] ************************************
2023-02-13 23:41:01,177 p=5850 u=root n=ansible | changed: [localhost] => (item={'key': 'rabbitmq', 'value': {'container_name': 'rabbitmq', 'group': 'rabbitmq', 'enabled': True, 'image': 'kolla/rabbitmq:14.6.0', 'bootstrap_environment': {'KOLLA_BOOTSTRAP': None, 'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'environment': {'KOLLA_CONFIG_STRATEGY': 'COPY_ALWAYS', 'RABBITMQ_CLUSTER_COOKIE': 'uzSlcXaZq1s3rhM1Rr5l6CnuRTwMFjMlFcMj7NKl', 'RABBITMQ_LOG_DIR': '/var/log/kolla/rabbitmq'}, 'volumes': ['/etc/kolla/rabbitmq/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'rabbitmq:/var/lib/rabbitmq/', 'kolla_logs:/var/log/kolla/'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'rabbitmq_management': {'enabled': 'yes', 'mode': 'http', 'port': '15672', 'host_group': 'rabbitmq'}, 'rabbitmq_outward_management': {'enabled': False, 'mode': 'http', 'port': '15674', 'host_group': 'outward-rabbitmq'}, 'rabbitmq_outward_external': {'enabled': False, 'mode': 'tcp', 'external': True, 'port': '5674', 'host_group': 'outward-rabbitmq', 'frontend_tcp_extra': ['timeout client 1h'], 'backend_tcp_extra': ['timeout server 1h']}}}})
2023-02-13 23:41:01,276 p=5850 u=root n=ansible | TASK [rabbitmq : Creating rabbitmq volume] *************************************
2023-02-13 23:41:02,222 p=5850 u=root n=ansible | changed: [localhost]
2023-02-13 23:41:02,318 p=5850 u=root n=ansible | TASK [rabbitmq : Running RabbitMQ bootstrap container] *************************
2023-02-13 23:41:04,044 p=5850 u=root n=ansible | changed: [localhost]
2023-02-13 23:41:04,146 p=5850 u=root n=ansible | TASK [rabbitmq : Flush handlers] ***********************************************
2023-02-13 23:41:04,147 p=5850 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart first rabbitmq container] ******************
2023-02-13 23:41:04,460 p=5850 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/rabbitmq/tasks/restart_services.yml for localhost
2023-02-13 23:41:04,461 p=5850 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart rabbitmq container] ************************
2023-02-13 23:41:06,538 p=5850 u=root n=ansible | changed: [localhost]
2023-02-13 23:41:06,540 p=5850 u=root n=ansible | RUNNING HANDLER [rabbitmq : Waiting for rabbitmq to start] *********************
2023-02-13 23:41:22,681 p=5850 u=root n=ansible | changed: [localhost]
2023-02-13 23:41:22,684 p=5850 u=root n=ansible | RUNNING HANDLER [rabbitmq : Restart remaining rabbitmq containers] *************
2023-02-13 23:41:22,947 p=5850 u=root n=ansible | skipping: [localhost] => (item=localhost) 
2023-02-13 23:41:23,310 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_outward_rabbitmq_True

2023-02-13 23:41:23,313 p=5850 u=root n=ansible | PLAY [Apply role rabbitmq (outward)] *******************************************
2023-02-13 23:41:23,313 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:41:23,315 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_etcd_True

2023-02-13 23:41:23,329 p=5850 u=root n=ansible | PLAY [Apply role etcd] *********************************************************
2023-02-13 23:41:23,329 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:41:23,344 p=5850 u=root n=ansible | PLAY [Apply role keystone] *****************************************************
2023-02-13 23:41:23,556 p=5850 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-13 23:41:23,957 p=5850 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/deploy.yml for localhost
2023-02-13 23:41:24,060 p=5850 u=root n=ansible | TASK [keystone : Ensuring config directories exist] ****************************
2023-02-13 23:41:24,874 p=5850 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-13 23:41:25,308 p=5850 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-13 23:41:25,725 p=5850 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-13 23:41:25,837 p=5850 u=root n=ansible | TASK [keystone : Check if policies shall be overwritten] ***********************
2023-02-13 23:41:25,975 p=5850 u=root n=ansible | TASK [keystone : Set keystone policy file] *************************************
2023-02-13 23:41:26,008 p=5850 u=root n=ansible | skipping: [localhost]
2023-02-13 23:41:26,198 p=5850 u=root n=ansible | TASK [keystone : Check if Keystone domain-specific config is supplied] *********
2023-02-13 23:41:26,619 p=5850 u=root n=ansible | ok: [localhost]
2023-02-13 23:41:26,714 p=5850 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-13 23:41:26,757 p=5850 u=root n=ansible | skipping: [localhost]
2023-02-13 23:41:26,853 p=5850 u=root n=ansible | TASK [keystone : Copying over config.json files for services] ******************
2023-02-13 23:41:28,222 p=5850 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-13 23:41:29,315 p=5850 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-13 23:41:30,295 p=5850 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-13 23:41:30,471 p=5850 u=root n=ansible | TASK [keystone : Copying over keystone.conf] ***********************************
2023-02-13 23:41:32,278 p=5850 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-13 23:41:32,296 p=5850 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-13 23:41:33,917 p=5850 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-13 23:41:34,020 p=5850 u=root n=ansible | TASK [keystone : Copying keystone-startup script for keystone] *****************
2023-02-13 23:41:35,435 p=5850 u=root n=ansible | changed: [localhost]
2023-02-13 23:41:35,532 p=5850 u=root n=ansible | TASK [keystone : Create Keystone domain-specific config directory] *************
2023-02-13 23:41:36,008 p=5850 u=root n=ansible | skipping: [localhost]
2023-02-13 23:41:36,207 p=5850 u=root n=ansible | TASK [keystone : Get file list in custom domains folder] ***********************
2023-02-13 23:41:36,248 p=5850 u=root n=ansible | skipping: [localhost]
2023-02-13 23:41:36,344 p=5850 u=root n=ansible | TASK [keystone : Copying Keystone Domain specific settings] ********************
2023-02-13 23:41:36,475 p=5850 u=root n=ansible | TASK [keystone : Copying over existing policy file] ****************************
2023-02-13 23:41:36,748 p=5850 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}}) 
2023-02-13 23:41:36,756 p=5850 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-13 23:41:36,781 p=5850 u=root n=ansible | skipping: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}}) 
2023-02-13 23:41:36,881 p=5850 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-13 23:41:36,934 p=5850 u=root n=ansible | skipping: [localhost]
2023-02-13 23:41:37,052 p=5850 u=root n=ansible | TASK [keystone : Copying over wsgi-keystone.conf] ******************************
2023-02-13 23:41:38,655 p=5850 u=root n=ansible | changed: [localhost] => (item=/usr/local/share/kolla-ansible/ansible/roles/keystone/templates/wsgi-keystone.conf.j2)
2023-02-13 23:41:38,845 p=5850 u=root n=ansible | TASK [keystone : Checking whether keystone-paste.ini file exists] **************
2023-02-13 23:41:39,494 p=5850 u=root n=ansible | ok: [localhost]
2023-02-13 23:41:39,587 p=5850 u=root n=ansible | TASK [keystone : Copying over keystone-paste.ini] ******************************
2023-02-13 23:41:40,056 p=5850 u=root n=ansible | skipping: [localhost]
2023-02-13 23:41:40,239 p=5850 u=root n=ansible | TASK [keystone : Generate the required cron jobs for the node] *****************
2023-02-13 23:41:40,883 p=5850 u=root n=ansible | ok: [localhost]
2023-02-13 23:41:40,983 p=5850 u=root n=ansible | TASK [keystone : Set fact with the generated cron jobs for building the crontab later] ***
2023-02-13 23:41:41,047 p=5850 u=root n=ansible | ok: [localhost]
2023-02-13 23:41:41,139 p=5850 u=root n=ansible | TASK [keystone : Copying files for keystone-fernet] ****************************
2023-02-13 23:41:42,505 p=5850 u=root n=ansible | changed: [localhost] => (item={'src': 'crontab.j2', 'dest': 'crontab'})
2023-02-13 23:41:43,762 p=5850 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-rotate.sh.j2', 'dest': 'fernet-rotate.sh'})
2023-02-13 23:41:45,050 p=5850 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-node-sync.sh.j2', 'dest': 'fernet-node-sync.sh'})
2023-02-13 23:41:46,408 p=5850 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-push.sh.j2', 'dest': 'fernet-push.sh'})
2023-02-13 23:41:47,821 p=5850 u=root n=ansible | changed: [localhost] => (item={'src': 'fernet-healthcheck.sh.j2', 'dest': 'fernet-healthcheck.sh'})
2023-02-13 23:41:49,174 p=5850 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa', 'dest': 'id_rsa'})
2023-02-13 23:41:50,465 p=5850 u=root n=ansible | changed: [localhost] => (item={'src': 'ssh_config.j2', 'dest': 'ssh_config'})
2023-02-13 23:41:50,563 p=5850 u=root n=ansible | TASK [keystone : Copying files for keystone-ssh] *******************************
2023-02-13 23:41:52,016 p=5850 u=root n=ansible | changed: [localhost] => (item={'src': 'sshd_config.j2', 'dest': 'sshd_config'})
2023-02-13 23:41:53,423 p=5850 u=root n=ansible | changed: [localhost] => (item={'src': 'id_rsa.pub', 'dest': 'id_rsa.pub'})
2023-02-13 23:41:53,523 p=5850 u=root n=ansible | TASK [keystone : Check keystone containers] ************************************
2023-02-13 23:41:54,803 p=5850 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone', 'value': {'container_name': 'keystone', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone:14.6.0', 'volumes': ['/etc/kolla/keystone/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}, 'haproxy': {'keystone_internal': {'enabled': 'yes', 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_external': {'enabled': 'yes', 'mode': 'http', 'external': True, 'tls_backend': 'no', 'port': '5000', 'listen_port': '5000', 'backend_http_extra': []}, 'keystone_admin': {'enabled': False, 'mode': 'http', 'external': False, 'tls_backend': 'no', 'port': '35357', 'listen_port': '35357'}}}})
2023-02-13 23:41:55,760 p=5850 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-ssh', 'value': {'container_name': 'keystone_ssh', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-ssh:14.6.0', 'volumes': ['/etc/kolla/keystone-ssh/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-13 23:41:56,749 p=5850 u=root n=ansible | changed: [localhost] => (item={'key': 'keystone-fernet', 'value': {'container_name': 'keystone_fernet', 'group': 'keystone', 'enabled': True, 'image': 'kolla/keystone-fernet:14.6.0', 'volumes': ['/etc/kolla/keystone-fernet/:/var/lib/kolla/config_files/:ro', '/etc/localtime:/etc/localtime:ro', '', 'kolla_logs:/var/log/kolla/', 'keystone_fernet_tokens:/etc/keystone/fernet-keys'], 'dimensions': {'ulimits': {'nofile': {'soft': 1048576, 'hard': 1048576}}}, 'healthcheck': {'interval': '30', 'retries': '3', 'start_period': '5', 'test': 'NONE', 'timeout': '30'}}})
2023-02-13 23:41:56,852 p=5850 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-13 23:41:56,920 p=5850 u=root n=ansible | skipping: [localhost]
2023-02-13 23:41:57,111 p=5850 u=root n=ansible | TASK [keystone : Creating keystone database] ***********************************
2023-02-13 23:42:01,252 p=5850 u=root n=ansible | changed: [localhost]
2023-02-13 23:42:01,452 p=5850 u=root n=ansible | TASK [keystone : Creating Keystone database user and setting permissions] ******
2023-02-13 23:42:05,218 p=5850 u=root n=ansible | changed: [localhost]
2023-02-13 23:42:05,319 p=5850 u=root n=ansible | TASK [keystone : Checking for any running keystone_fernet containers] **********
2023-02-13 23:42:06,896 p=5850 u=root n=ansible | ok: [localhost]
2023-02-13 23:42:06,998 p=5850 u=root n=ansible | TASK [keystone : Group nodes where keystone_fernet is running] *****************
2023-02-13 23:42:07,063 p=5850 u=root n=ansible | ok: [localhost]
2023-02-13 23:42:07,161 p=5850 u=root n=ansible | TASK [keystone : Fail if any hosts need bootstrapping and not all hosts targeted] ***
2023-02-13 23:42:07,225 p=5850 u=root n=ansible | skipping: [localhost]
2023-02-13 23:42:07,327 p=5850 u=root n=ansible | TASK [keystone : Running Keystone bootstrap container] *************************
2023-02-13 23:42:17,044 p=5850 u=root n=ansible | changed: [localhost]
2023-02-13 23:42:17,252 p=5850 u=root n=ansible | TASK [keystone : Running Keystone fernet bootstrap container] ******************
2023-02-13 23:42:24,815 p=5850 u=root n=ansible | changed: [localhost]
2023-02-13 23:42:24,922 p=5850 u=root n=ansible | TASK [keystone : Flush handlers] ***********************************************
2023-02-13 23:42:24,923 p=5850 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-ssh container] ********************
2023-02-13 23:42:26,807 p=5850 u=root n=ansible | changed: [localhost]
2023-02-13 23:42:26,809 p=5850 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone-fernet container] *****************
2023-02-13 23:42:28,994 p=5850 u=root n=ansible | changed: [localhost]
2023-02-13 23:42:28,998 p=5850 u=root n=ansible | RUNNING HANDLER [keystone : Restart keystone container] ************************
2023-02-13 23:42:30,913 p=5850 u=root n=ansible | changed: [localhost]
2023-02-13 23:42:31,023 p=5850 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-13 23:42:31,177 p=5850 u=root n=ansible | included: /usr/local/share/kolla-ansible/ansible/roles/keystone/tasks/distribute_fernet.yml for localhost
2023-02-13 23:42:31,316 p=5850 u=root n=ansible | TASK [keystone : Waiting for Keystone SSH port to be UP] ***********************
2023-02-13 23:42:32,666 p=5850 u=root n=ansible | ok: [localhost]
2023-02-13 23:42:32,884 p=5850 u=root n=ansible | TASK [keystone : Run key distribution] *****************************************
2023-02-13 23:42:34,086 p=5850 u=root n=ansible | changed: [localhost]
2023-02-13 23:42:34,192 p=5850 u=root n=ansible | TASK [keystone : Creating admin project, user, role, service, and endpoint] ****
2023-02-13 23:42:43,342 p=5850 u=root n=ansible | changed: [localhost] => (item=RegionOne)
2023-02-13 23:42:43,454 p=5850 u=root n=ansible | TASK [service-ks-register : keystone | Creating services] **********************
2023-02-13 23:43:01,587 p=5850 u=root n=ansible | changed: [localhost] => (item={'name': 'keystone', 'service_type': 'identity'})
2023-02-13 23:43:01,760 p=5850 u=root n=ansible | TASK [service-ks-register : keystone | Creating endpoints] *********************
2023-02-13 23:43:08,203 p=5850 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.168:5000', 'interface': 'internal'})
2023-02-13 23:43:14,872 p=5850 u=root n=ansible | ok: [localhost] => (item={'service': 'keystone', 'url': 'http://169.16.1.168:5000', 'interface': 'public'})
2023-02-13 23:43:14,994 p=5850 u=root n=ansible | TASK [service-ks-register : keystone | Creating projects] **********************
2023-02-13 23:43:15,144 p=5850 u=root n=ansible | TASK [service-ks-register : keystone | Creating users] *************************
2023-02-13 23:43:15,275 p=5850 u=root n=ansible | TASK [service-ks-register : keystone | Creating roles] *************************
2023-02-13 23:43:15,422 p=5850 u=root n=ansible | TASK [service-ks-register : keystone | Granting user roles] ********************
2023-02-13 23:43:15,655 p=5850 u=root n=ansible | TASK [keystone : Creating default user role] ***********************************
2023-02-13 23:43:22,861 p=5850 u=root n=ansible | changed: [localhost]
2023-02-13 23:43:23,004 p=5850 u=root n=ansible | TASK [keystone : include_tasks] ************************************************
2023-02-13 23:43:23,079 p=5850 u=root n=ansible | skipping: [localhost]
2023-02-13 23:43:23,434 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_opensearch_True

2023-02-13 23:43:23,446 p=5850 u=root n=ansible | PLAY [Apply role opensearch] ***************************************************
2023-02-13 23:43:23,446 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,449 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_swift_True

2023-02-13 23:43:23,459 p=5850 u=root n=ansible | PLAY [Apply role swift] ********************************************************
2023-02-13 23:43:23,459 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,461 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_ceph_rgw_True

2023-02-13 23:43:23,466 p=5850 u=root n=ansible | PLAY [Apply role ceph-rgw] *****************************************************
2023-02-13 23:43:23,466 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,468 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_glance_True

2023-02-13 23:43:23,473 p=5850 u=root n=ansible | PLAY [Apply role glance] *******************************************************
2023-02-13 23:43:23,473 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,476 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_ironic_True

2023-02-13 23:43:23,482 p=5850 u=root n=ansible | PLAY [Apply role ironic] *******************************************************
2023-02-13 23:43:23,482 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,485 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_cinder_True

2023-02-13 23:43:23,493 p=5850 u=root n=ansible | PLAY [Apply role cinder] *******************************************************
2023-02-13 23:43:23,494 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,495 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_placement_True

2023-02-13 23:43:23,503 p=5850 u=root n=ansible | PLAY [Apply role placement] ****************************************************
2023-02-13 23:43:23,504 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,505 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_nova_True

2023-02-13 23:43:23,510 p=5850 u=root n=ansible | PLAY [Bootstrap nova API databases] ********************************************
2023-02-13 23:43:23,511 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,517 p=5850 u=root n=ansible | PLAY [Bootstrap nova cell databases] *******************************************
2023-02-13 23:43:23,517 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,523 p=5850 u=root n=ansible | PLAY [Apply role nova] *********************************************************
2023-02-13 23:43:23,524 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,532 p=5850 u=root n=ansible | PLAY [Apply role nova-cell] ****************************************************
2023-02-13 23:43:23,532 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,538 p=5850 u=root n=ansible | PLAY [Refresh nova scheduler cell cache] ***************************************
2023-02-13 23:43:23,538 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,544 p=5850 u=root n=ansible | PLAY [Reload global Nova super conductor services] *****************************
2023-02-13 23:43:23,544 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,551 p=5850 u=root n=ansible | PLAY [Reload Nova cell services] ***********************************************
2023-02-13 23:43:23,551 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,557 p=5850 u=root n=ansible | PLAY [Reload global Nova API services] *****************************************
2023-02-13 23:43:23,558 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,565 p=5850 u=root n=ansible | PLAY [Run Nova API online data migrations] *************************************
2023-02-13 23:43:23,565 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,571 p=5850 u=root n=ansible | PLAY [Run Nova cell online data migrations] ************************************
2023-02-13 23:43:23,571 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,573 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_openvswitch_True_enable_ovs_dpdk_False

2023-02-13 23:43:23,579 p=5850 u=root n=ansible | PLAY [Apply role openvswitch] **************************************************
2023-02-13 23:43:23,579 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,580 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_openvswitch_True_enable_ovs_dpdk_True

2023-02-13 23:43:23,589 p=5850 u=root n=ansible | PLAY [Apply role ovs-dpdk] *****************************************************
2023-02-13 23:43:23,590 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,592 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_ovn_True

2023-02-13 23:43:23,597 p=5850 u=root n=ansible | PLAY [Apply role ovn-db] *******************************************************
2023-02-13 23:43:23,597 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,603 p=5850 u=root n=ansible | PLAY [Apply role ovn-controller] ***********************************************
2023-02-13 23:43:23,603 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,608 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_neutron_True

2023-02-13 23:43:23,616 p=5850 u=root n=ansible | PLAY [Apply role neutron] ******************************************************
2023-02-13 23:43:23,616 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,618 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_kuryr_True

2023-02-13 23:43:23,624 p=5850 u=root n=ansible | PLAY [Apply role kuryr] ********************************************************
2023-02-13 23:43:23,624 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,628 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_hacluster_True

2023-02-13 23:43:23,636 p=5850 u=root n=ansible | PLAY [Apply role hacluster] ****************************************************
2023-02-13 23:43:23,637 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,640 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_heat_True

2023-02-13 23:43:23,650 p=5850 u=root n=ansible | PLAY [Apply role heat] *********************************************************
2023-02-13 23:43:23,650 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,653 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_horizon_True

2023-02-13 23:43:23,661 p=5850 u=root n=ansible | PLAY [Apply role horizon] ******************************************************
2023-02-13 23:43:23,662 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,665 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_murano_True

2023-02-13 23:43:23,673 p=5850 u=root n=ansible | PLAY [Apply role murano] *******************************************************
2023-02-13 23:43:23,674 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,679 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_solum_True

2023-02-13 23:43:23,687 p=5850 u=root n=ansible | PLAY [Apply role solum] ********************************************************
2023-02-13 23:43:23,687 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,690 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_magnum_True

2023-02-13 23:43:23,695 p=5850 u=root n=ansible | PLAY [Apply role magnum] *******************************************************
2023-02-13 23:43:23,696 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,698 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_mistral_True

2023-02-13 23:43:23,704 p=5850 u=root n=ansible | PLAY [Apply role mistral] ******************************************************
2023-02-13 23:43:23,704 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,706 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_sahara_True

2023-02-13 23:43:23,711 p=5850 u=root n=ansible | PLAY [Apply role sahara] *******************************************************
2023-02-13 23:43:23,711 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,713 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_manila_True

2023-02-13 23:43:23,719 p=5850 u=root n=ansible | PLAY [Apply role manila] *******************************************************
2023-02-13 23:43:23,719 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,721 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_gnocchi_True

2023-02-13 23:43:23,726 p=5850 u=root n=ansible | PLAY [Apply role gnocchi] ******************************************************
2023-02-13 23:43:23,726 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,729 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_ceilometer_True

2023-02-13 23:43:23,734 p=5850 u=root n=ansible | PLAY [Apply role ceilometer] ***************************************************
2023-02-13 23:43:23,735 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,737 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_aodh_True

2023-02-13 23:43:23,748 p=5850 u=root n=ansible | PLAY [Apply role aodh] *********************************************************
2023-02-13 23:43:23,749 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,751 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_barbican_True

2023-02-13 23:43:23,756 p=5850 u=root n=ansible | PLAY [Apply role barbican] *****************************************************
2023-02-13 23:43:23,757 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,759 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_cyborg_True

2023-02-13 23:43:23,764 p=5850 u=root n=ansible | PLAY [Apply role cyborg] *******************************************************
2023-02-13 23:43:23,764 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,768 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_designate_True

2023-02-13 23:43:23,775 p=5850 u=root n=ansible | PLAY [Apply role designate] ****************************************************
2023-02-13 23:43:23,775 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,777 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_trove_True

2023-02-13 23:43:23,783 p=5850 u=root n=ansible | PLAY [Apply role trove] ********************************************************
2023-02-13 23:43:23,783 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,785 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_watcher_True

2023-02-13 23:43:23,790 p=5850 u=root n=ansible | PLAY [Apply role watcher] ******************************************************
2023-02-13 23:43:23,790 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,792 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_grafana_True

2023-02-13 23:43:23,797 p=5850 u=root n=ansible | PLAY [Apply role grafana] ******************************************************
2023-02-13 23:43:23,797 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,799 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_cloudkitty_True

2023-02-13 23:43:23,805 p=5850 u=root n=ansible | PLAY [Apply role cloudkitty] ***************************************************
2023-02-13 23:43:23,805 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,807 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_freezer_True

2023-02-13 23:43:23,812 p=5850 u=root n=ansible | PLAY [Apply role freezer] ******************************************************
2023-02-13 23:43:23,812 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,815 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_senlin_True

2023-02-13 23:43:23,820 p=5850 u=root n=ansible | PLAY [Apply role senlin] *******************************************************
2023-02-13 23:43:23,820 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,822 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_tacker_True

2023-02-13 23:43:23,827 p=5850 u=root n=ansible | PLAY [Apply role tacker] *******************************************************
2023-02-13 23:43:23,828 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,830 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_octavia_True

2023-02-13 23:43:23,835 p=5850 u=root n=ansible | PLAY [Apply role octavia] ******************************************************
2023-02-13 23:43:23,836 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,839 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_zun_True

2023-02-13 23:43:23,843 p=5850 u=root n=ansible | PLAY [Apply role zun] **********************************************************
2023-02-13 23:43:23,844 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,846 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_skydive_True

2023-02-13 23:43:23,851 p=5850 u=root n=ansible | PLAY [Apply role skydive] ******************************************************
2023-02-13 23:43:23,851 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,854 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_vitrage_True

2023-02-13 23:43:23,859 p=5850 u=root n=ansible | PLAY [Apply role vitrage] ******************************************************
2023-02-13 23:43:23,859 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,861 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_blazar_True

2023-02-13 23:43:23,869 p=5850 u=root n=ansible | PLAY [Apply role blazar] *******************************************************
2023-02-13 23:43:23,870 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,872 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring:
enable_masakari_True

2023-02-13 23:43:23,877 p=5850 u=root n=ansible | PLAY [Apply role masakari] *****************************************************
2023-02-13 23:43:23,877 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,879 p=5850 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: enable_venus_True

2023-02-13 23:43:23,884 p=5850 u=root n=ansible | PLAY [Apply role venus] ********************************************************
2023-02-13 23:43:23,884 p=5850 u=root n=ansible | skipping: no hosts matched
2023-02-13 23:43:23,885 p=5850 u=root n=ansible | PLAY RECAP *********************************************************************
2023-02-13 23:43:23,885 p=5850 u=root n=ansible | localhost                  : ok=62   changed=43   unreachable=0    failed=0    skipped=24   rescued=0    ignored=0   
